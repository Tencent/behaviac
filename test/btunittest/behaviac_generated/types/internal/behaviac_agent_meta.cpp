// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#include "behaviac/common/meta.h"
#include "behaviac/common/member.h"
#include "behaviac_agent_meta.h"

namespace behaviac
{
	class BehaviorLoaderImplement : BehaviorLoader
	{
	public:
		BehaviorLoaderImplement()
		{
			AgentMeta::SetBehaviorLoader(this);
		}

		virtual ~BehaviorLoaderImplement()
		{
		}

		virtual bool load()
		{
			class CInstanceConst_Act : public CInstanceConstBase<Act>
			{
				IInstanceMember* _Var_B_Loop;
				IInstanceMember* _Var_List_EnumTest;

			public: 
				CInstanceConst_Act(const char* valueStr) : CInstanceConstBase<Act>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					_Var_B_Loop = AgentMeta::TParseProperty<bool >(paramStrs[0].c_str());
					_Var_List_EnumTest = AgentMeta::TParseProperty<behaviac::vector<EnumTest> >(paramStrs[1].c_str());
				}

				~CInstanceConst_Act()
				{
					BEHAVIAC_DELETE _Var_B_Loop;
					BEHAVIAC_DELETE _Var_List_EnumTest;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_Var_B_Loop != NULL);
					BEHAVIAC_ASSERT(_Var_List_EnumTest != NULL);

					_value.Var_B_Loop = *(bool*)_Var_B_Loop->GetValue(self, behaviac::Meta::IsVector<bool >::Result, behaviac::GetClassTypeNumberId<bool >());
					_value.Var_List_EnumTest = *(behaviac::vector<EnumTest>*)_Var_List_EnumTest->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<EnumTest> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<EnumTest> >());
				}
			};

			class CInstanceConst_BSASN_SpatialCoord : public CInstanceConstBase<BSASN::SpatialCoord>
			{
				IInstanceMember* _coordX;
				IInstanceMember* _coordY;

			public: 
				CInstanceConst_BSASN_SpatialCoord(const char* valueStr) : CInstanceConstBase<BSASN::SpatialCoord>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					_coordX = AgentMeta::TParseProperty<float >(paramStrs[0].c_str());
					_coordY = AgentMeta::TParseProperty<float >(paramStrs[1].c_str());
				}

				~CInstanceConst_BSASN_SpatialCoord()
				{
					BEHAVIAC_DELETE _coordX;
					BEHAVIAC_DELETE _coordY;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_coordX != NULL);
					BEHAVIAC_ASSERT(_coordY != NULL);

					_value.coordX = *(float*)_coordX->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					_value.coordY = *(float*)_coordY->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
				}
			};

			class CInstanceConst_BSASN_TransitPlan : public CInstanceConstBase<BSASN::TransitPlan>
			{
				IInstanceMember* _plan_ID;
				IInstanceMember* _plan_selection_precedence;
				IInstanceMember* _transit_points;

			public: 
				CInstanceConst_BSASN_TransitPlan(const char* valueStr) : CInstanceConstBase<BSASN::TransitPlan>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 3);

					_plan_ID = AgentMeta::TParseProperty<behaviac::string >(paramStrs[0].c_str());
					_plan_selection_precedence = AgentMeta::TParseProperty<int >(paramStrs[1].c_str());
					_transit_points = AgentMeta::TParseProperty<behaviac::vector<BSASN::SpatialCoord> >(paramStrs[2].c_str());
				}

				~CInstanceConst_BSASN_TransitPlan()
				{
					BEHAVIAC_DELETE _plan_ID;
					BEHAVIAC_DELETE _plan_selection_precedence;
					BEHAVIAC_DELETE _transit_points;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_plan_ID != NULL);
					BEHAVIAC_ASSERT(_plan_selection_precedence != NULL);
					BEHAVIAC_ASSERT(_transit_points != NULL);

					_value.plan_ID = *(behaviac::string*)_plan_ID->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					_value.plan_selection_precedence = *(int*)_plan_selection_precedence->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					_value.transit_points = *(behaviac::vector<BSASN::SpatialCoord>*)_transit_points->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<BSASN::SpatialCoord> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<BSASN::SpatialCoord> >());
				}
			};

			class CInstanceConst_TestNamespace_ClassAsValueType : public CInstanceConstBase<TestNamespace::ClassAsValueType>
			{
				IInstanceMember* _x;
				IInstanceMember* _y;

			public: 
				CInstanceConst_TestNamespace_ClassAsValueType(const char* valueStr) : CInstanceConstBase<TestNamespace::ClassAsValueType>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					_x = AgentMeta::TParseProperty<float >(paramStrs[0].c_str());
					_y = AgentMeta::TParseProperty<float >(paramStrs[1].c_str());
				}

				~CInstanceConst_TestNamespace_ClassAsValueType()
				{
					BEHAVIAC_DELETE _x;
					BEHAVIAC_DELETE _y;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_x != NULL);
					BEHAVIAC_ASSERT(_y != NULL);

					_value.x = *(float*)_x->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					_value.y = *(float*)_y->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
				}
			};

			class CInstanceConst_TestNamespace_Float2 : public CInstanceConstBase<TestNamespace::Float2>
			{
				IInstanceMember* _x;
				IInstanceMember* _y;

			public: 
				CInstanceConst_TestNamespace_Float2(const char* valueStr) : CInstanceConstBase<TestNamespace::Float2>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					_x = AgentMeta::TParseProperty<float >(paramStrs[0].c_str());
					_y = AgentMeta::TParseProperty<float >(paramStrs[1].c_str());
				}

				~CInstanceConst_TestNamespace_Float2()
				{
					BEHAVIAC_DELETE _x;
					BEHAVIAC_DELETE _y;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_x != NULL);
					BEHAVIAC_ASSERT(_y != NULL);

					_value.x = *(float*)_x->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					_value.y = *(float*)_y->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
				}
			};

			class CInstanceConst_TestNS_Float2 : public CInstanceConstBase<TestNS::Float2>
			{
				IInstanceMember* _x;
				IInstanceMember* _y;

			public: 
				CInstanceConst_TestNS_Float2(const char* valueStr) : CInstanceConstBase<TestNS::Float2>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					_x = AgentMeta::TParseProperty<float >(paramStrs[0].c_str());
					_y = AgentMeta::TParseProperty<float >(paramStrs[1].c_str());
				}

				~CInstanceConst_TestNS_Float2()
				{
					BEHAVIAC_DELETE _x;
					BEHAVIAC_DELETE _y;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_x != NULL);
					BEHAVIAC_ASSERT(_y != NULL);

					_value.x = *(float*)_x->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					_value.y = *(float*)_y->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
				}
			};

			class CInstanceConst_TNS_ST_kCar : public CInstanceConstBase<TNS::ST::kCar>
			{
				IInstanceMember* _brand;
				IInstanceMember* _price;
				IInstanceMember* _color;

			public: 
				CInstanceConst_TNS_ST_kCar(const char* valueStr) : CInstanceConstBase<TNS::ST::kCar>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 3);

					_brand = AgentMeta::TParseProperty<behaviac::string >(paramStrs[0].c_str());
					_price = AgentMeta::TParseProperty<int >(paramStrs[1].c_str());
					_color = AgentMeta::TParseProperty<TNS::NE::NAT::eColor >(paramStrs[2].c_str());
				}

				~CInstanceConst_TNS_ST_kCar()
				{
					BEHAVIAC_DELETE _brand;
					BEHAVIAC_DELETE _price;
					BEHAVIAC_DELETE _color;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_brand != NULL);
					BEHAVIAC_ASSERT(_price != NULL);
					BEHAVIAC_ASSERT(_color != NULL);

					_value.brand = *(behaviac::string*)_brand->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					_value.price = *(int*)_price->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					_value.color = *(TNS::NE::NAT::eColor*)_color->GetValue(self, behaviac::Meta::IsVector<TNS::NE::NAT::eColor >::Result, behaviac::GetClassTypeNumberId<TNS::NE::NAT::eColor >());
				}
			};

			class CInstanceConst_TNS_ST_PER_WRK_kEmployee : public CInstanceConstBase<TNS::ST::PER::WRK::kEmployee>
			{
				IInstanceMember* _id;
				IInstanceMember* _name;
				IInstanceMember* _code;
				IInstanceMember* _weight;
				IInstanceMember* _isMale;
				IInstanceMember* _skinColor;
				IInstanceMember* _car;
				IInstanceMember* _boss;

			public: 
				CInstanceConst_TNS_ST_PER_WRK_kEmployee(const char* valueStr) : CInstanceConstBase<TNS::ST::PER::WRK::kEmployee>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 8);

					_id = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
					_name = AgentMeta::TParseProperty<behaviac::string >(paramStrs[1].c_str());
					_code = AgentMeta::TParseProperty<char >(paramStrs[2].c_str());
					_weight = AgentMeta::TParseProperty<float >(paramStrs[3].c_str());
					_isMale = AgentMeta::TParseProperty<bool >(paramStrs[4].c_str());
					_skinColor = AgentMeta::TParseProperty<TNS::NE::NAT::eColor >(paramStrs[5].c_str());
					_car = AgentMeta::TParseProperty<TNS::ST::kCar >(paramStrs[6].c_str());
					_boss = AgentMeta::TParseProperty<behaviac::Agent* >(paramStrs[7].c_str());
				}

				~CInstanceConst_TNS_ST_PER_WRK_kEmployee()
				{
					BEHAVIAC_DELETE _id;
					BEHAVIAC_DELETE _name;
					BEHAVIAC_DELETE _code;
					BEHAVIAC_DELETE _weight;
					BEHAVIAC_DELETE _isMale;
					BEHAVIAC_DELETE _skinColor;
					BEHAVIAC_DELETE _car;
					BEHAVIAC_DELETE _boss;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_id != NULL);
					BEHAVIAC_ASSERT(_name != NULL);
					BEHAVIAC_ASSERT(_code != NULL);
					BEHAVIAC_ASSERT(_weight != NULL);
					BEHAVIAC_ASSERT(_isMale != NULL);
					BEHAVIAC_ASSERT(_skinColor != NULL);
					BEHAVIAC_ASSERT(_car != NULL);
					BEHAVIAC_ASSERT(_boss != NULL);

					_value.id = *(int*)_id->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					_value.name = *(behaviac::string*)_name->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					_value.code = *(char*)_code->GetValue(self, behaviac::Meta::IsVector<char >::Result, behaviac::GetClassTypeNumberId<char >());
					_value.weight = *(float*)_weight->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					_value.isMale = *(bool*)_isMale->GetValue(self, behaviac::Meta::IsVector<bool >::Result, behaviac::GetClassTypeNumberId<bool >());
					_value.skinColor = *(TNS::NE::NAT::eColor*)_skinColor->GetValue(self, behaviac::Meta::IsVector<TNS::NE::NAT::eColor >::Result, behaviac::GetClassTypeNumberId<TNS::NE::NAT::eColor >());
					_value.car = *(TNS::ST::kCar*)_car->GetValue(self, behaviac::Meta::IsVector<TNS::ST::kCar >::Result, behaviac::GetClassTypeNumberId<TNS::ST::kCar >());
					_value.boss = (behaviac::Agent*)_boss->GetValue(self, behaviac::Meta::IsVector<behaviac::Agent >::Result, behaviac::GetClassTypeNumberId<behaviac::Agent >());
				}
			};

			class CInstanceConst_UnityEngine_Vector3 : public CInstanceConstBase<UnityEngine::Vector3>
			{
				IInstanceMember* _x;
				IInstanceMember* _y;
				IInstanceMember* _z;

			public: 
				CInstanceConst_UnityEngine_Vector3(const char* valueStr) : CInstanceConstBase<UnityEngine::Vector3>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 3);

					_x = AgentMeta::TParseProperty<float >(paramStrs[0].c_str());
					_y = AgentMeta::TParseProperty<float >(paramStrs[1].c_str());
					_z = AgentMeta::TParseProperty<float >(paramStrs[2].c_str());
				}

				~CInstanceConst_UnityEngine_Vector3()
				{
					BEHAVIAC_DELETE _x;
					BEHAVIAC_DELETE _y;
					BEHAVIAC_DELETE _z;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_x != NULL);
					BEHAVIAC_ASSERT(_y != NULL);
					BEHAVIAC_ASSERT(_z != NULL);

					_value.x = *(float*)_x->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					_value.y = *(float*)_y->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					_value.z = *(float*)_z->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
				}
			};

			class CInstanceConst_StructTest : public CInstanceConstBase<StructTest>
			{
				IInstanceMember* _a;

			public: 
				CInstanceConst_StructTest(const char* valueStr) : CInstanceConstBase<StructTest>(valueStr)
				{
					behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					_a = AgentMeta::TParseProperty<bool >(paramStrs[0].c_str());
				}

				~CInstanceConst_StructTest()
				{
					BEHAVIAC_DELETE _a;
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_a != NULL);

					_value.a = *(bool*)_a->GetValue(self, behaviac::Meta::IsVector<bool >::Result, behaviac::GetClassTypeNumberId<bool >());
				}
			};

			class CMethod_behaviac_Agent_VectorAdd : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;
				IInstanceMember* _param1;

			public: 
				CMethod_behaviac_Agent_VectorAdd() : _param0(0) , _param1(0) 
				{
				}

				CMethod_behaviac_Agent_VectorAdd(CMethod_behaviac_Agent_VectorAdd &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) , _param1(0) 
				{
				}

				~CMethod_behaviac_Agent_VectorAdd()
				{
					BEHAVIAC_DELETE _param0;
					BEHAVIAC_DELETE _param1;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
					_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);
					BEHAVIAC_ASSERT(_param1 != NULL);

					IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
					System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
					behaviac::Agent::VectorAdd(pValue_param0, pValue_param1);
				}
			};

			class CMethod_behaviac_Agent_VectorClear : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_behaviac_Agent_VectorClear() : _param0(0) 
				{
				}

				CMethod_behaviac_Agent_VectorClear(CMethod_behaviac_Agent_VectorClear &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_behaviac_Agent_VectorClear()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
					behaviac::Agent::VectorClear(pValue_param0);
				}
			};

			class CMethod_behaviac_Agent_VectorContains : public CAgentMethodBase<bool>
			{
				IInstanceMember* _param0;
				IInstanceMember* _param1;

			public: 
				CMethod_behaviac_Agent_VectorContains() : _param0(0) , _param1(0) 
				{
				}

				CMethod_behaviac_Agent_VectorContains(CMethod_behaviac_Agent_VectorContains &rhs) : CAgentMethodBase<bool>(rhs) , _param0(0) , _param1(0) 
				{
				}

				~CMethod_behaviac_Agent_VectorContains()
				{
					BEHAVIAC_DELETE _param0;
					BEHAVIAC_DELETE _param1;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
					_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);
					BEHAVIAC_ASSERT(_param1 != NULL);

					IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
					System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
					_returnValue->value = behaviac::Agent::VectorContains(pValue_param0, pValue_param1);
				}
			};

			class CMethod_behaviac_Agent_VectorLength : public CAgentMethodBase<int>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_behaviac_Agent_VectorLength() : _param0(0) 
				{
				}

				CMethod_behaviac_Agent_VectorLength(CMethod_behaviac_Agent_VectorLength &rhs) : CAgentMethodBase<int>(rhs) , _param0(0) 
				{
				}

				~CMethod_behaviac_Agent_VectorLength()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
					_returnValue->value = behaviac::Agent::VectorLength(pValue_param0);
				}
			};

			class CMethod_behaviac_Agent_VectorRemove : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;
				IInstanceMember* _param1;

			public: 
				CMethod_behaviac_Agent_VectorRemove() : _param0(0) , _param1(0) 
				{
				}

				CMethod_behaviac_Agent_VectorRemove(CMethod_behaviac_Agent_VectorRemove &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) , _param1(0) 
				{
				}

				~CMethod_behaviac_Agent_VectorRemove()
				{
					BEHAVIAC_DELETE _param0;
					BEHAVIAC_DELETE _param1;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
					_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);
					BEHAVIAC_ASSERT(_param1 != NULL);

					IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
					System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
					behaviac::Agent::VectorRemove(pValue_param0, pValue_param1);
				}
			};

			class CMethod_ParTestAgentBase_Func_BooleanRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_BooleanRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_BooleanRef(CMethod_ParTestAgentBase_Func_BooleanRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_BooleanRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<bool >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					bool& pValue_param0 = *(bool*)_param0->GetValue(self, behaviac::Meta::IsVector<bool >::Result, behaviac::GetClassTypeNumberId<bool >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_BooleanRef, void, bool& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_BooleanListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_BooleanListRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_BooleanListRef(CMethod_ParTestAgentBase_Func_BooleanListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_BooleanListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<bool> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<bool>& pValue_param0 = *(behaviac::vector<bool>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<bool> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<bool> >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_BooleanListRef, void, behaviac::vector<bool>& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_ByteRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_ByteRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_ByteRef(CMethod_ParTestAgentBase_Func_ByteRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_ByteRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<unsigned char >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					unsigned char& pValue_param0 = *(unsigned char*)_param0->GetValue(self, behaviac::Meta::IsVector<unsigned char >::Result, behaviac::GetClassTypeNumberId<unsigned char >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_ByteRef, void, unsigned char& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_ByteListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_ByteListRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_ByteListRef(CMethod_ParTestAgentBase_Func_ByteListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_ByteListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<unsigned char> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<unsigned char>& pValue_param0 = *(behaviac::vector<unsigned char>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<unsigned char> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<unsigned char> >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_ByteListRef, void, behaviac::vector<unsigned char>& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_CharRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_CharRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_CharRef(CMethod_ParTestAgentBase_Func_CharRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_CharRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<char >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					char& pValue_param0 = *(char*)_param0->GetValue(self, behaviac::Meta::IsVector<char >::Result, behaviac::GetClassTypeNumberId<char >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharRef, void, char& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_CharListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_CharListRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_CharListRef(CMethod_ParTestAgentBase_Func_CharListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_CharListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<char> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<char>& pValue_param0 = *(behaviac::vector<char>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<char> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<char> >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharListRef, void, behaviac::vector<char>& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_eColorRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_eColorRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_eColorRef(CMethod_ParTestAgentBase_Func_eColorRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_eColorRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<TNS::NE::NAT::eColor >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					TNS::NE::NAT::eColor& pValue_param0 = *(TNS::NE::NAT::eColor*)_param0->GetValue(self, behaviac::Meta::IsVector<TNS::NE::NAT::eColor >::Result, behaviac::GetClassTypeNumberId<TNS::NE::NAT::eColor >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_eColorRef, void, TNS::NE::NAT::eColor& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_eColorListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_eColorListRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_eColorListRef(CMethod_ParTestAgentBase_Func_eColorListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_eColorListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<TNS::NE::NAT::eColor> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<TNS::NE::NAT::eColor>& pValue_param0 = *(behaviac::vector<TNS::NE::NAT::eColor>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<TNS::NE::NAT::eColor> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<TNS::NE::NAT::eColor> >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_eColorListRef, void, behaviac::vector<TNS::NE::NAT::eColor>& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_SByteRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_SByteRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_SByteRef(CMethod_ParTestAgentBase_Func_SByteRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_SByteRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<signed char >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					signed char& pValue_param0 = *(signed char*)_param0->GetValue(self, behaviac::Meta::IsVector<signed char >::Result, behaviac::GetClassTypeNumberId<signed char >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteRef, void, signed char& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgentBase_Func_SByteListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgentBase_Func_SByteListRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgentBase_Func_SByteListRef(CMethod_ParTestAgentBase_Func_SByteListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgentBase_Func_SByteListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<signed char> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<signed char>& pValue_param0 = *(behaviac::vector<signed char>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<signed char> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<signed char> >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgentBase*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteListRef, void, behaviac::vector<signed char>& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_kEmployeeIR : public CAgentMethodBase<TNS::ST::PER::WRK::kEmployee>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_kEmployeeIR() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_kEmployeeIR(CMethod_ParTestAgent_Func_kEmployeeIR &rhs) : CAgentMethodBase<TNS::ST::PER::WRK::kEmployee>(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_kEmployeeIR()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeIR(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TNS_ST_PER_WRK_kEmployee(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TNS::ST::PER::WRK::kEmployee >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TNS::ST::PER::WRK::kEmployee& pValue_param0 = *(TNS::ST::PER::WRK::kEmployee*)_param0->GetValue(self, behaviac::Meta::IsVector<TNS::ST::PER::WRK::kEmployee >::Result, behaviac::GetClassTypeNumberId<TNS::ST::PER::WRK::kEmployee >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeIR, TNS::ST::PER::WRK::kEmployee, TNS::ST::PER::WRK::kEmployee >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_kEmployeeSMF : public CAgentMethodBase<TNS::ST::PER::WRK::kEmployee>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_kEmployeeSMF() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_kEmployeeSMF(CMethod_ParTestAgent_Func_kEmployeeSMF &rhs) : CAgentMethodBase<TNS::ST::PER::WRK::kEmployee>(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_kEmployeeSMF()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeSMF(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TNS_ST_PER_WRK_kEmployee(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TNS::ST::PER::WRK::kEmployee >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TNS::ST::PER::WRK::kEmployee& pValue_param0 = *(TNS::ST::PER::WRK::kEmployee*)_param0->GetValue(self, behaviac::Meta::IsVector<TNS::ST::PER::WRK::kEmployee >::Result, behaviac::GetClassTypeNumberId<TNS::ST::PER::WRK::kEmployee >());
					_returnValue->value = ((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeSMF, TNS::ST::PER::WRK::kEmployee, TNS::ST::PER::WRK::kEmployee >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_IntRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_IntRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_IntRef(CMethod_ParTestAgent_Func_IntRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_IntRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_IntRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					int& pValue_param0 = *(int*)_param0->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_IntRef, void, int& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_IntListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_IntListRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_IntListRef(CMethod_ParTestAgent_Func_IntListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_IntListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_IntListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<int> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<int>& pValue_param0 = *(behaviac::vector<int>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<int> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<int> >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_IntListRef, void, behaviac::vector<int>& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_kEmployeeRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_kEmployeeRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_kEmployeeRef(CMethod_ParTestAgent_Func_kEmployeeRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_kEmployeeRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TNS_ST_PER_WRK_kEmployee(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TNS::ST::PER::WRK::kEmployee >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TNS::ST::PER::WRK::kEmployee& pValue_param0 = *(TNS::ST::PER::WRK::kEmployee*)_param0->GetValue(self, behaviac::Meta::IsVector<TNS::ST::PER::WRK::kEmployee >::Result, behaviac::GetClassTypeNumberId<TNS::ST::PER::WRK::kEmployee >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeRef, void, TNS::ST::PER::WRK::kEmployee& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_kEmployeeListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_kEmployeeListRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_kEmployeeListRef(CMethod_ParTestAgent_Func_kEmployeeListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_kEmployeeListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<TNS::ST::PER::WRK::kEmployee> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<TNS::ST::PER::WRK::kEmployee>& pValue_param0 = *(behaviac::vector<TNS::ST::PER::WRK::kEmployee>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<TNS::ST::PER::WRK::kEmployee> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<TNS::ST::PER::WRK::kEmployee> >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeListRef, void, behaviac::vector<TNS::ST::PER::WRK::kEmployee>& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_LongRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_LongRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_LongRef(CMethod_ParTestAgent_Func_LongRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_LongRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_LongRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<long >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					long& pValue_param0 = *(long*)_param0->GetValue(self, behaviac::Meta::IsVector<long >::Result, behaviac::GetClassTypeNumberId<long >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_LongRef, void, long& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_ShortRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_ShortRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_ShortRef(CMethod_ParTestAgent_Func_ShortRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_ShortRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_ShortRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<short >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					short& pValue_param0 = *(short*)_param0->GetValue(self, behaviac::Meta::IsVector<short >::Result, behaviac::GetClassTypeNumberId<short >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_ShortRef, void, short& >(pValue_param0);
				}
			};

			class CMethod_ParTestAgent_Func_UShortRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestAgent_Func_UShortRef() : _param0(0) 
				{
				}

				CMethod_ParTestAgent_Func_UShortRef(CMethod_ParTestAgent_Func_UShortRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestAgent_Func_UShortRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestAgent_Func_UShortRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<unsigned short >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					unsigned short& pValue_param0 = *(unsigned short*)_param0->GetValue(self, behaviac::Meta::IsVector<unsigned short >::Result, behaviac::GetClassTypeNumberId<unsigned short >());
					self = Agent::GetParentAgent(self, _instance);

					((ParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_UShortRef, void, unsigned short& >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_return_status : public CAgentMethodBase<behaviac::EBTStatus>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_return_status() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_return_status(CMethod_AgentNodeTest_return_status &rhs) : CAgentMethodBase<behaviac::EBTStatus>(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_return_status()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_return_status(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TestNS_Float2(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TestNS::Float2 >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TestNS::Float2& pValue_param0 = *(TestNS::Float2*)_param0->GetValue(self, behaviac::Meta::IsVector<TestNS::Float2 >::Result, behaviac::GetClassTypeNumberId<TestNS::Float2 >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_return_status, behaviac::EBTStatus, TestNS::Float2& >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_setEventVarAgent : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_setEventVarAgent() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_setEventVarAgent(CMethod_AgentNodeTest_setEventVarAgent &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_setEventVarAgent()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_setEventVarAgent(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<AgentNodeTest >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					AgentNodeTest*& pValue_param0 = *(AgentNodeTest**)_param0->GetValue(self, behaviac::Meta::IsVector<AgentNodeTest* >::Result, behaviac::GetClassTypeNumberId<AgentNodeTest* >());
					self = Agent::GetParentAgent(self, _instance);

					((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_setEventVarAgent, void, AgentNodeTest* >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_switchRef : public CAgentMethodBase<behaviac::EBTStatus>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_switchRef() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_switchRef(CMethod_AgentNodeTest_switchRef &rhs) : CAgentMethodBase<behaviac::EBTStatus>(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_switchRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_switchRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::string >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::string& pValue_param0 = *(behaviac::string*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_switchRef, behaviac::EBTStatus, behaviac::string& >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_testExtendedRefType : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_testExtendedRefType() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_testExtendedRefType(CMethod_AgentNodeTest_testExtendedRefType &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_testExtendedRefType()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedRefType(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<TestNS::Node >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					TestNS::Node*& pValue_param0 = *(TestNS::Node**)_param0->GetValue(self, behaviac::Meta::IsVector<TestNS::Node* >::Result, behaviac::GetClassTypeNumberId<TestNS::Node* >());
					self = Agent::GetParentAgent(self, _instance);

					((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_testExtendedRefType, void, TestNS::Node* >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_testExtendedStruct : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_testExtendedStruct() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_testExtendedStruct(CMethod_AgentNodeTest_testExtendedStruct &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_testExtendedStruct()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedStruct(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TestNS_Float2(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TestNS::Float2 >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TestNS::Float2& pValue_param0 = *(TestNS::Float2*)_param0->GetValue(self, behaviac::Meta::IsVector<TestNS::Float2 >::Result, behaviac::GetClassTypeNumberId<TestNS::Float2 >());
					self = Agent::GetParentAgent(self, _instance);

					((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_testExtendedStruct, void, TestNS::Float2& >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_TestFuncD : public CAgentMethodBase<behaviac::EBTStatus>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_TestFuncD() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_TestFuncD(CMethod_AgentNodeTest_TestFuncD &rhs) : CAgentMethodBase<behaviac::EBTStatus>(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_TestFuncD()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_TestFuncD(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<TestClassA >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					TestClassA*& pValue_param0 = *(TestClassA**)_param0->GetValue(self, behaviac::Meta::IsVector<TestClassA* >::Result, behaviac::GetClassTypeNumberId<TestClassA* >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_TestFuncD, behaviac::EBTStatus, TestClassA* >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_testGameObject : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_testGameObject() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_testGameObject(CMethod_AgentNodeTest_testGameObject &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_testGameObject()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_testGameObject(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<UnityEngine::GameObject >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					UnityEngine::GameObject*& pValue_param0 = *(UnityEngine::GameObject**)_param0->GetValue(self, behaviac::Meta::IsVector<UnityEngine::GameObject* >::Result, behaviac::GetClassTypeNumberId<UnityEngine::GameObject* >());
					self = Agent::GetParentAgent(self, _instance);

					((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_testGameObject, void, UnityEngine::GameObject* >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_testVectorStruct : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_AgentNodeTest_testVectorStruct() : _param0(0) 
				{
				}

				CMethod_AgentNodeTest_testVectorStruct(CMethod_AgentNodeTest_testVectorStruct &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_AgentNodeTest_testVectorStruct()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_testVectorStruct(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<TestNS::Float2> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<TestNS::Float2>& pValue_param0 = *(behaviac::vector<TestNS::Float2>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<TestNS::Float2> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<TestNS::Float2> >());
					self = Agent::GetParentAgent(self, _instance);

					((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_testVectorStruct, void, behaviac::vector<TestNS::Float2>& >(pValue_param0);
				}
			};

			class CMethod_AgentNodeTest_transitPlanTactics : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;
				IInstanceMember* _param1;
				IInstanceMember* _param2;

			public: 
				CMethod_AgentNodeTest_transitPlanTactics() : _param0(0) , _param1(0) , _param2(0) 
				{
				}

				CMethod_AgentNodeTest_transitPlanTactics(CMethod_AgentNodeTest_transitPlanTactics &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) , _param1(0) , _param2(0) 
				{
				}

				~CMethod_AgentNodeTest_transitPlanTactics()
				{
					BEHAVIAC_DELETE _param0;
					BEHAVIAC_DELETE _param1;
					BEHAVIAC_DELETE _param2;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_AgentNodeTest_transitPlanTactics(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 3);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_BSASN_TransitPlan(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<BSASN::TransitPlan >(paramStrs[0].c_str());
					}
					_param1 = AgentMeta::TParseProperty<EnumTest >(paramStrs[1].c_str());
					_param2 = AgentMeta::TParseProperty<behaviac::string >(paramStrs[2].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);
					BEHAVIAC_ASSERT(_param1 != NULL);
					BEHAVIAC_ASSERT(_param2 != NULL);

					_param0->run(self);
					BSASN::TransitPlan& pValue_param0 = *(BSASN::TransitPlan*)_param0->GetValue(self, behaviac::Meta::IsVector<BSASN::TransitPlan >::Result, behaviac::GetClassTypeNumberId<BSASN::TransitPlan >());
					EnumTest& pValue_param1 = *(EnumTest*)_param1->GetValue(self, behaviac::Meta::IsVector<EnumTest >::Result, behaviac::GetClassTypeNumberId<EnumTest >());
					behaviac::string& pValue_param2 = *(behaviac::string*)_param2->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					self = Agent::GetParentAgent(self, _instance);

					((AgentNodeTest*)self)->_Execute_Method_<METHOD_TYPE_AgentNodeTest_transitPlanTactics, void, BSASN::TransitPlan, EnumTest, behaviac::string& >(pValue_param0, pValue_param1, pValue_param2);
				}
			};

			class CMethod_CustomPropertyAgent_FnWithOutParam : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_CustomPropertyAgent_FnWithOutParam() : _param0(0) 
				{
				}

				CMethod_CustomPropertyAgent_FnWithOutParam(CMethod_CustomPropertyAgent_FnWithOutParam &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_CustomPropertyAgent_FnWithOutParam()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_CustomPropertyAgent_FnWithOutParam(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					int& pValue_param0 = *(int*)_param0->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					self = Agent::GetParentAgent(self, _instance);

					((CustomPropertyAgent*)self)->_Execute_Method_<METHOD_TYPE_CustomPropertyAgent_FnWithOutParam, void, int& >(pValue_param0);
				}
			};

			class CMethod_CustomPropertyAgent_TestFn1 : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_CustomPropertyAgent_TestFn1() : _param0(0) 
				{
				}

				CMethod_CustomPropertyAgent_TestFn1(CMethod_CustomPropertyAgent_TestFn1 &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_CustomPropertyAgent_TestFn1()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_CustomPropertyAgent_TestFn1(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TestNamespace_Float2(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TestNamespace::Float2 >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TestNamespace::Float2& pValue_param0 = *(TestNamespace::Float2*)_param0->GetValue(self, behaviac::Meta::IsVector<TestNamespace::Float2 >::Result, behaviac::GetClassTypeNumberId<TestNamespace::Float2 >());
					self = Agent::GetParentAgent(self, _instance);

					((CustomPropertyAgent*)self)->_Execute_Method_<METHOD_TYPE_CustomPropertyAgent_TestFn1, void, TestNamespace::Float2& >(pValue_param0);
				}
			};

			class CMethod_CustomPropertyAgent_TestFn2 : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_CustomPropertyAgent_TestFn2() : _param0(0) 
				{
				}

				CMethod_CustomPropertyAgent_TestFn2(CMethod_CustomPropertyAgent_TestFn2 &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_CustomPropertyAgent_TestFn2()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_CustomPropertyAgent_TestFn2(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TestNamespace_ClassAsValueType(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TestNamespace::ClassAsValueType* >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TestNamespace::ClassAsValueType*& pValue_param0 = *(TestNamespace::ClassAsValueType**)_param0->GetValue(self, behaviac::Meta::IsVector<TestNamespace::ClassAsValueType* >::Result, behaviac::GetClassTypeNumberId<TestNamespace::ClassAsValueType* >());
					self = Agent::GetParentAgent(self, _instance);

					((CustomPropertyAgent*)self)->_Execute_Method_<METHOD_TYPE_CustomPropertyAgent_TestFn2, void, TestNamespace::ClassAsValueType* >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_AgentIR : public CAgentMethodBase<behaviac::Agent*>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_AgentIR() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_AgentIR(CMethod_EmployeeParTestAgent_Func_AgentIR &rhs) : CAgentMethodBase<behaviac::Agent*>(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_AgentIR()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentIR(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::Agent >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::Agent*& pValue_param0 = *(behaviac::Agent**)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::Agent* >::Result, behaviac::GetClassTypeNumberId<behaviac::Agent* >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentIR, behaviac::Agent*, behaviac::Agent* >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_ParTestAgentBaseIR : public CAgentMethodBase<ParTestAgentBase*>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_ParTestAgentBaseIR() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_ParTestAgentBaseIR(CMethod_EmployeeParTestAgent_Func_ParTestAgentBaseIR &rhs) : CAgentMethodBase<ParTestAgentBase*>(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_ParTestAgentBaseIR()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_ParTestAgentBaseIR(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<ParTestAgentBase >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					ParTestAgentBase*& pValue_param0 = *(ParTestAgentBase**)_param0->GetValue(self, behaviac::Meta::IsVector<ParTestAgentBase* >::Result, behaviac::GetClassTypeNumberId<ParTestAgentBase* >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ParTestAgentBaseIR, ParTestAgentBase*, ParTestAgentBase* >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_StringIR : public CAgentMethodBase<behaviac::string>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_StringIR() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_StringIR(CMethod_EmployeeParTestAgent_Func_StringIR &rhs) : CAgentMethodBase<behaviac::string>(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_StringIR()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringIR(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::string >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::string& pValue_param0 = *(behaviac::string*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringIR, behaviac::string, behaviac::string& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_AgentSMF : public CAgentMethodBase<behaviac::Agent*>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_AgentSMF() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_AgentSMF(CMethod_EmployeeParTestAgent_Func_AgentSMF &rhs) : CAgentMethodBase<behaviac::Agent*>(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_AgentSMF()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentSMF(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::Agent >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::Agent*& pValue_param0 = *(behaviac::Agent**)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::Agent* >::Result, behaviac::GetClassTypeNumberId<behaviac::Agent* >());
					_returnValue->value = ((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentSMF, behaviac::Agent*, behaviac::Agent* >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_StringSMF : public CAgentMethodBase<behaviac::string>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_StringSMF() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_StringSMF(CMethod_EmployeeParTestAgent_Func_StringSMF &rhs) : CAgentMethodBase<behaviac::string>(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_StringSMF()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringSMF(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::string >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::string& pValue_param0 = *(behaviac::string*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					_returnValue->value = ((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringSMF, behaviac::string, behaviac::string& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_AgentListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_AgentListRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_AgentListRef(CMethod_EmployeeParTestAgent_Func_AgentListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_AgentListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<behaviac::Agent*> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<behaviac::Agent*>& pValue_param0 = *(behaviac::vector<behaviac::Agent*>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<behaviac::Agent*> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<behaviac::Agent*> >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentListRef, void, behaviac::vector<behaviac::Agent*>& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_AgentRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_AgentRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_AgentRef(CMethod_EmployeeParTestAgent_Func_AgentRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_AgentRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::Agent* >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::Agent*& pValue_param0 = *(behaviac::Agent**)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::Agent* >::Result, behaviac::GetClassTypeNumberId<behaviac::Agent* >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentRef, void, behaviac::Agent*& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_DoubleRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_DoubleRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_DoubleRef(CMethod_EmployeeParTestAgent_Func_DoubleRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_DoubleRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_DoubleRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<double >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					double& pValue_param0 = *(double*)_param0->GetValue(self, behaviac::Meta::IsVector<double >::Result, behaviac::GetClassTypeNumberId<double >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_DoubleRef, void, double& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_LongLongRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_LongLongRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_LongLongRef(CMethod_EmployeeParTestAgent_Func_LongLongRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_LongLongRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_LongLongRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<long long >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					long long& pValue_param0 = *(long long*)_param0->GetValue(self, behaviac::Meta::IsVector<long long >::Result, behaviac::GetClassTypeNumberId<long long >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_LongLongRef, void, long long& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_SingleListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_SingleListRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_SingleListRef(CMethod_EmployeeParTestAgent_Func_SingleListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_SingleListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_SingleListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<float> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<float>& pValue_param0 = *(behaviac::vector<float>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<float> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<float> >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SingleListRef, void, behaviac::vector<float>& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_SingleRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_SingleRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_SingleRef(CMethod_EmployeeParTestAgent_Func_SingleRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_SingleRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_SingleRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<float >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					float& pValue_param0 = *(float*)_param0->GetValue(self, behaviac::Meta::IsVector<float >::Result, behaviac::GetClassTypeNumberId<float >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SingleRef, void, float& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_StringListRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_StringListRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_StringListRef(CMethod_EmployeeParTestAgent_Func_StringListRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_StringListRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringListRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::vector<behaviac::string> >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::vector<behaviac::string>& pValue_param0 = *(behaviac::vector<behaviac::string>*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<behaviac::string> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<behaviac::string> >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringListRef, void, behaviac::vector<behaviac::string>& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_StringRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_StringRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_StringRef(CMethod_EmployeeParTestAgent_Func_StringRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_StringRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::string >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::string& pValue_param0 = *(behaviac::string*)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::string >::Result, behaviac::GetClassTypeNumberId<behaviac::string >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringRef, void, behaviac::string& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_SzStringRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_SzStringRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_SzStringRef(CMethod_EmployeeParTestAgent_Func_SzStringRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_SzStringRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_SzStringRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<char* >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					char* pValue_param0 = (char*)_param0->GetValue(self, behaviac::Meta::IsVector<char* >::Result, behaviac::GetClassTypeNumberId<char* >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SzStringRef, void, char*& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_UIntRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_UIntRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_UIntRef(CMethod_EmployeeParTestAgent_Func_UIntRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_UIntRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_UIntRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<unsigned int >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					unsigned int& pValue_param0 = *(unsigned int*)_param0->GetValue(self, behaviac::Meta::IsVector<unsigned int >::Result, behaviac::GetClassTypeNumberId<unsigned int >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_UIntRef, void, unsigned int& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_ULongLongRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_ULongLongRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_ULongLongRef(CMethod_EmployeeParTestAgent_Func_ULongLongRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_ULongLongRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_ULongLongRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<unsigned long long >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					unsigned long long& pValue_param0 = *(unsigned long long*)_param0->GetValue(self, behaviac::Meta::IsVector<unsigned long long >::Result, behaviac::GetClassTypeNumberId<unsigned long long >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ULongLongRef, void, unsigned long long& >(pValue_param0);
				}
			};

			class CMethod_EmployeeParTestAgent_Func_ULongRef : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_EmployeeParTestAgent_Func_ULongRef() : _param0(0) 
				{
				}

				CMethod_EmployeeParTestAgent_Func_ULongRef(CMethod_EmployeeParTestAgent_Func_ULongRef &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_EmployeeParTestAgent_Func_ULongRef()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_ULongRef(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<unsigned long >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					unsigned long& pValue_param0 = *(unsigned long*)_param0->GetValue(self, behaviac::Meta::IsVector<unsigned long >::Result, behaviac::GetClassTypeNumberId<unsigned long >());
					self = Agent::GetParentAgent(self, _instance);

					((EmployeeParTestAgent*)self)->_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ULongRef, void, unsigned long& >(pValue_param0);
				}
			};

			class CMethod_HTNAgentTravel_exist_airport : public CAgentMethodBase<bool>
			{
				IInstanceMember* _param0;
				IInstanceMember* _param1;

			public: 
				CMethod_HTNAgentTravel_exist_airport() : _param0(0) , _param1(0) 
				{
				}

				CMethod_HTNAgentTravel_exist_airport(CMethod_HTNAgentTravel_exist_airport &rhs) : CAgentMethodBase<bool>(rhs) , _param0(0) , _param1(0) 
				{
				}

				~CMethod_HTNAgentTravel_exist_airport()
				{
					BEHAVIAC_DELETE _param0;
					BEHAVIAC_DELETE _param1;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_airport(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
					_param1 = AgentMeta::TParseProperty<int >(paramStrs[1].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);
					BEHAVIAC_ASSERT(_param1 != NULL);

					int& pValue_param0 = *(int*)_param0->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					int& pValue_param1 = *(int*)_param1->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((HTNAgentTravel*)self)->_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_airport, bool, int, int& >(pValue_param0, pValue_param1);
				}
			};

			class CMethod_HTNAgentTravel_exist_airports : public CAgentMethodBase<bool>
			{
				IInstanceMember* _param0;
				IInstanceMember* _param1;

			public: 
				CMethod_HTNAgentTravel_exist_airports() : _param0(0) , _param1(0) 
				{
				}

				CMethod_HTNAgentTravel_exist_airports(CMethod_HTNAgentTravel_exist_airports &rhs) : CAgentMethodBase<bool>(rhs) , _param0(0) , _param1(0) 
				{
				}

				~CMethod_HTNAgentTravel_exist_airports()
				{
					BEHAVIAC_DELETE _param0;
					BEHAVIAC_DELETE _param1;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_airports(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 2);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
					_param1 = AgentMeta::TParseProperty<behaviac::vector<int> >(paramStrs[1].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);
					BEHAVIAC_ASSERT(_param1 != NULL);

					int& pValue_param0 = *(int*)_param0->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					behaviac::vector<int>& pValue_param1 = *(behaviac::vector<int>*)_param1->GetValue(self, behaviac::Meta::IsVector<behaviac::vector<int> >::Result, behaviac::GetClassTypeNumberId<behaviac::vector<int> >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((HTNAgentTravel*)self)->_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_airports, bool, int, behaviac::vector<int>& >(pValue_param0, pValue_param1);
				}
			};

			class CMethod_HTNAgentTravel_exist_finish : public CAgentMethodBase<bool>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_HTNAgentTravel_exist_finish() : _param0(0) 
				{
				}

				CMethod_HTNAgentTravel_exist_finish(CMethod_HTNAgentTravel_exist_finish &rhs) : CAgentMethodBase<bool>(rhs) , _param0(0) 
				{
				}

				~CMethod_HTNAgentTravel_exist_finish()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_finish(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					int& pValue_param0 = *(int*)_param0->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((HTNAgentTravel*)self)->_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_finish, bool, int& >(pValue_param0);
				}
			};

			class CMethod_HTNAgentTravel_exist_start : public CAgentMethodBase<bool>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_HTNAgentTravel_exist_start() : _param0(0) 
				{
				}

				CMethod_HTNAgentTravel_exist_start(CMethod_HTNAgentTravel_exist_start &rhs) : CAgentMethodBase<bool>(rhs) , _param0(0) 
				{
				}

				~CMethod_HTNAgentTravel_exist_start()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_start(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					int& pValue_param0 = *(int*)_param0->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((HTNAgentTravel*)self)->_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_start, bool, int& >(pValue_param0);
				}
			};

			class CMethod_ParTestRegNameAgent_Func_AgentIR : public CAgentMethodBase<behaviac::Agent*>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestRegNameAgent_Func_AgentIR() : _param0(0) 
				{
				}

				CMethod_ParTestRegNameAgent_Func_AgentIR(CMethod_ParTestRegNameAgent_Func_AgentIR &rhs) : CAgentMethodBase<behaviac::Agent*>(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestRegNameAgent_Func_AgentIR()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestRegNameAgent_Func_AgentIR(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<behaviac::Agent >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					behaviac::Agent*& pValue_param0 = *(behaviac::Agent**)_param0->GetValue(self, behaviac::Meta::IsVector<behaviac::Agent* >::Result, behaviac::GetClassTypeNumberId<behaviac::Agent* >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((ParTestRegNameAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_AgentIR, behaviac::Agent*, behaviac::Agent* >(pValue_param0);
				}
			};

			class CMethod_ParTestRegNameAgent_Func_kEmployeeIR : public CAgentMethodBase<TNS::ST::PER::WRK::kEmployee>
			{
				IInstanceMember* _param0;

			public: 
				CMethod_ParTestRegNameAgent_Func_kEmployeeIR() : _param0(0) 
				{
				}

				CMethod_ParTestRegNameAgent_Func_kEmployeeIR(CMethod_ParTestRegNameAgent_Func_kEmployeeIR &rhs) : CAgentMethodBase<TNS::ST::PER::WRK::kEmployee>(rhs) , _param0(0) 
				{
				}

				~CMethod_ParTestRegNameAgent_Func_kEmployeeIR()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_ParTestRegNameAgent_Func_kEmployeeIR(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					if (behaviac::StringUtils::StartsWith(paramStrs[0].c_str(), "{"))
					{
						_param0 = BEHAVIAC_NEW CInstanceConst_TNS_ST_PER_WRK_kEmployee(paramStrs[0].c_str());
					}
					else
					{
						_param0 = AgentMeta::TParseProperty<TNS::ST::PER::WRK::kEmployee >(paramStrs[0].c_str());
					}
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					_param0->run(self);
					TNS::ST::PER::WRK::kEmployee& pValue_param0 = *(TNS::ST::PER::WRK::kEmployee*)_param0->GetValue(self, behaviac::Meta::IsVector<TNS::ST::PER::WRK::kEmployee >::Result, behaviac::GetClassTypeNumberId<TNS::ST::PER::WRK::kEmployee >());
					self = Agent::GetParentAgent(self, _instance);

					_returnValue->value = ((ParTestRegNameAgent*)self)->_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_kEmployeeIR, TNS::ST::PER::WRK::kEmployee, TNS::ST::PER::WRK::kEmployee >(pValue_param0);
				}
			};

			class CMethod_PropertyReadonlyAgent_FnWithOutParam : public CAgentMethodVoidBase
			{
				IInstanceMember* _param0;

			public: 
				CMethod_PropertyReadonlyAgent_FnWithOutParam() : _param0(0) 
				{
				}

				CMethod_PropertyReadonlyAgent_FnWithOutParam(CMethod_PropertyReadonlyAgent_FnWithOutParam &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
				{
				}

				~CMethod_PropertyReadonlyAgent_FnWithOutParam()
				{
					BEHAVIAC_DELETE _param0;
				}

				virtual IInstanceMember* clone()
				{
					return BEHAVIAC_NEW CMethod_PropertyReadonlyAgent_FnWithOutParam(*this);
				}

				virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
				{
					BEHAVIAC_ASSERT(paramStrs.size() == 1);

					behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
					_param0 = AgentMeta::TParseProperty<int >(paramStrs[0].c_str());
				}

				virtual void run(Agent* self)
				{
					BEHAVIAC_ASSERT(_param0 != NULL);

					int& pValue_param0 = *(int*)_param0->GetValue(self, behaviac::Meta::IsVector<int >::Result, behaviac::GetClassTypeNumberId<int >());
					self = Agent::GetParentAgent(self, _instance);

					((PropertyReadonlyAgent*)self)->_Execute_Method_<METHOD_TYPE_PropertyReadonlyAgent_FnWithOutParam, void, int& >(pValue_param0);
				}
			};

			AgentMeta::SetTotalSignature(803555873u);

			AgentMeta* meta = NULL;
			BEHAVIAC_UNUSED_VAR(meta);

			// behaviac::Agent
			meta = BEHAVIAC_NEW AgentMeta(24743406u);
			AgentMeta::GetAgentMetas()[1770892321u] = meta;
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_behaviac_Agent_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// HTNAgentHouseBase
			meta = BEHAVIAC_NEW AgentMeta(1561560191u);
			AgentMeta::GetAgentMetas()[3994384195u] = meta;
			meta->RegisterCustomizedProperty(4260042937u, BEHAVIAC_NEW CCustomizedProperty< int >(4260042937u, "Money", "0"));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_HTNAgentHouseBase_LogMessage));
			meta->RegisterMethod(3744542564u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouseBase_ObtainPermit));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// ParTestAgentBase
			meta = BEHAVIAC_NEW AgentMeta(3051341555u);
			AgentMeta::GetAgentMetas()[499666653u] = meta;
			meta->RegisterMemberProperty(907888646u, BEHAVIAC_NEW CStaticMemberProperty< bool >("STV_BOOL_0", Set_ParTestAgentBase_STV_BOOL_0, Get_ParTestAgentBase_STV_BOOL_0));
			meta->RegisterMemberProperty(2191125959u, BEHAVIAC_NEW CStaticMemberProperty< char >("STV_CHAR_0", Set_ParTestAgentBase_STV_CHAR_0, Get_ParTestAgentBase_STV_CHAR_0));
			meta->RegisterMemberProperty(1356537398u, BEHAVIAC_NEW CStaticMemberProperty< TNS::NE::NAT::eColor >("STV_ECOLOR_0", Set_ParTestAgentBase_STV_ECOLOR_0, Get_ParTestAgentBase_STV_ECOLOR_0));
			meta->RegisterMemberProperty(1612090457u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<bool> >("STV_LIST_BOOL_0", Set_ParTestAgentBase_STV_LIST_BOOL_0, Get_ParTestAgentBase_STV_LIST_BOOL_0));
			meta->RegisterMemberProperty(2171063431u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< bool >("STV_LIST_BOOL_0[]", Set_ParTestAgentBase_STV_LIST_BOOL_0, Get_ParTestAgentBase_STV_LIST_BOOL_0));
			meta->RegisterMemberProperty(3566348696u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<char> >("STV_LIST_CHAR_0", Set_ParTestAgentBase_STV_LIST_CHAR_0, Get_ParTestAgentBase_STV_LIST_CHAR_0));
			meta->RegisterMemberProperty(4114270571u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< char >("STV_LIST_CHAR_0[]", Set_ParTestAgentBase_STV_LIST_CHAR_0, Get_ParTestAgentBase_STV_LIST_CHAR_0));
			meta->RegisterMemberProperty(2487001405u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<TNS::NE::NAT::eColor> >("STV_LIST_ECOLOR_0", Set_ParTestAgentBase_STV_LIST_ECOLOR_0, Get_ParTestAgentBase_STV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(1033839917u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< TNS::NE::NAT::eColor >("STV_LIST_ECOLOR_0[]", Set_ParTestAgentBase_STV_LIST_ECOLOR_0, Get_ParTestAgentBase_STV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(2135462866u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<signed char> >("STV_LIST_SBYTE_0", Set_ParTestAgentBase_STV_LIST_SBYTE_0, Get_ParTestAgentBase_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(1516972635u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< signed char >("STV_LIST_SBYTE_0[]", Set_ParTestAgentBase_STV_LIST_SBYTE_0, Get_ParTestAgentBase_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(3326442243u, BEHAVIAC_NEW CMemberProperty< bool >("TV_BOOL_0", Set_ParTestAgentBase_TV_BOOL_0, Get_ParTestAgentBase_TV_BOOL_0));
			meta->RegisterMemberProperty(2045932444u, BEHAVIAC_NEW CMemberProperty< unsigned char >("TV_BYTE_0", Set_ParTestAgentBase_TV_BYTE_0, Get_ParTestAgentBase_TV_BYTE_0));
			meta->RegisterMemberProperty(1925308098u, BEHAVIAC_NEW CMemberProperty< char >("TV_CHAR_0", Set_ParTestAgentBase_TV_CHAR_0, Get_ParTestAgentBase_TV_CHAR_0));
			meta->RegisterMemberProperty(241062087u, BEHAVIAC_NEW CMemberProperty< TNS::NE::NAT::eColor >("TV_ECOLOR_0", Set_ParTestAgentBase_TV_ECOLOR_0, Get_ParTestAgentBase_TV_ECOLOR_0));
			meta->RegisterMemberProperty(3454568683u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<bool> >("TV_LIST_BOOL_0", Set_ParTestAgentBase_TV_LIST_BOOL_0, Get_ParTestAgentBase_TV_LIST_BOOL_0));
			meta->RegisterMemberProperty(641479675u, BEHAVIAC_NEW CMemberArrayItemProperty< bool >("TV_LIST_BOOL_0[]", Set_ParTestAgentBase_TV_LIST_BOOL_0, Get_ParTestAgentBase_TV_LIST_BOOL_0));
			meta->RegisterMemberProperty(1918861428u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<unsigned char> >("TV_LIST_BYTE_0", Set_ParTestAgentBase_TV_LIST_BYTE_0, Get_ParTestAgentBase_TV_LIST_BYTE_0));
			meta->RegisterMemberProperty(3728642731u, BEHAVIAC_NEW CMemberArrayItemProperty< unsigned char >("TV_LIST_BYTE_0[]", Set_ParTestAgentBase_TV_LIST_BYTE_0, Get_ParTestAgentBase_TV_LIST_BYTE_0));
			meta->RegisterMemberProperty(2037132586u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<char> >("TV_LIST_CHAR_0", Set_ParTestAgentBase_TV_LIST_CHAR_0, Get_ParTestAgentBase_TV_LIST_CHAR_0));
			meta->RegisterMemberProperty(1382102551u, BEHAVIAC_NEW CMemberArrayItemProperty< char >("TV_LIST_CHAR_0[]", Set_ParTestAgentBase_TV_LIST_CHAR_0, Get_ParTestAgentBase_TV_LIST_CHAR_0));
			meta->RegisterMemberProperty(862412353u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<TNS::NE::NAT::eColor> >("TV_LIST_ECOLOR_0", Set_ParTestAgentBase_TV_LIST_ECOLOR_0, Get_ParTestAgentBase_TV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(3855745440u, BEHAVIAC_NEW CMemberArrayItemProperty< TNS::NE::NAT::eColor >("TV_LIST_ECOLOR_0[]", Set_ParTestAgentBase_TV_LIST_ECOLOR_0, Get_ParTestAgentBase_TV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(3466167234u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<signed char> >("TV_LIST_SBYTE_0", Set_ParTestAgentBase_TV_LIST_SBYTE_0, Get_ParTestAgentBase_TV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(2204970056u, BEHAVIAC_NEW CMemberArrayItemProperty< signed char >("TV_LIST_SBYTE_0[]", Set_ParTestAgentBase_TV_LIST_SBYTE_0, Get_ParTestAgentBase_TV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(1600661043u, BEHAVIAC_NEW CMemberProperty< signed char >("TV_SBYTE_0", Set_ParTestAgentBase_TV_SBYTE_0, Get_ParTestAgentBase_TV_SBYTE_0));
			meta->RegisterMethod(2245666463u, BEHAVIAC_NEW CAgentMethod_1< bool, bool >(FunctionPointer_ParTestAgentBase_Func_BooleanIR));
			meta->RegisterMethod(3791888951u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<bool>, behaviac::vector<bool> >(FunctionPointer_ParTestAgentBase_Func_BooleanListIR));
			meta->RegisterMethod(1841337487u, BEHAVIAC_NEW CAgentMethod_1< unsigned char, unsigned char >(FunctionPointer_ParTestAgentBase_Func_ByteIR));
			meta->RegisterMethod(3252333806u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<unsigned char>, behaviac::vector<unsigned char> >(FunctionPointer_ParTestAgentBase_Func_ByteListIR));
			meta->RegisterMethod(1727216081u, BEHAVIAC_NEW CAgentMethod_1< char, char >(FunctionPointer_ParTestAgentBase_Func_CharIR));
			meta->RegisterMethod(1477551860u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<char>, behaviac::vector<char> >(FunctionPointer_ParTestAgentBase_Func_CharListIR));
			meta->RegisterMethod(2426660965u, BEHAVIAC_NEW CAgentMethod_1< TNS::NE::NAT::eColor, TNS::NE::NAT::eColor >(FunctionPointer_ParTestAgentBase_Func_eColorIR));
			meta->RegisterMethod(3714114176u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<TNS::NE::NAT::eColor>, behaviac::vector<TNS::NE::NAT::eColor> >(FunctionPointer_ParTestAgentBase_Func_eColorListIR));
			meta->RegisterMethod(509199861u, BEHAVIAC_NEW CAgentMethod_1< signed char, signed char >(FunctionPointer_ParTestAgentBase_Func_SByteIR));
			meta->RegisterMethod(4269893793u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<signed char>, behaviac::vector<signed char> >(FunctionPointer_ParTestAgentBase_Func_SByteListIR));
			meta->RegisterMethod(433418480u, BEHAVIAC_NEW CAgentStaticMethod_1< unsigned char, unsigned char >(FunctionPointer_ParTestAgentBase_Func_ByteSMF));
			meta->RegisterMethod(2500673454u, BEHAVIAC_NEW CAgentStaticMethod_1< char, char >(FunctionPointer_ParTestAgentBase_Func_CharSMF));
			meta->RegisterMethod(2925170749u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<char>, behaviac::vector<char> >(FunctionPointer_ParTestAgentBase_Func_CharListSMF));
			meta->RegisterMethod(2435897298u, BEHAVIAC_NEW CAgentStaticMethod_1< signed char, signed char >(FunctionPointer_ParTestAgentBase_Func_SByteSMF));
			meta->RegisterMethod(262183808u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<signed char>, behaviac::vector<signed char> >(FunctionPointer_ParTestAgentBase_Func_SByteListSMF));
			meta->RegisterMethod(4220685126u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanRef());
			meta->RegisterMethod(3515774986u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanListRef());
			meta->RegisterMethod(45294703u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteRef());
			meta->RegisterMethod(1221064402u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteListRef());
			meta->RegisterMethod(2389404465u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharRef());
			meta->RegisterMethod(3040658594u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharListRef());
			meta->RegisterMethod(4207250143u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorRef());
			meta->RegisterMethod(3634257456u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorListRef());
			meta->RegisterMethod(2320925517u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteRef());
			meta->RegisterMethod(348573471u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteListRef());
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_ParTestAgentBase_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// ParTestAgent
			meta = BEHAVIAC_NEW AgentMeta(1905727749u);
			AgentMeta::GetAgentMetas()[2466883229u] = meta;
			meta->RegisterMemberProperty(907888646u, BEHAVIAC_NEW CStaticMemberProperty< bool >("STV_BOOL_0", Set_ParTestAgentBase_STV_BOOL_0, Get_ParTestAgentBase_STV_BOOL_0));
			meta->RegisterMemberProperty(2191125959u, BEHAVIAC_NEW CStaticMemberProperty< char >("STV_CHAR_0", Set_ParTestAgentBase_STV_CHAR_0, Get_ParTestAgentBase_STV_CHAR_0));
			meta->RegisterMemberProperty(1356537398u, BEHAVIAC_NEW CStaticMemberProperty< TNS::NE::NAT::eColor >("STV_ECOLOR_0", Set_ParTestAgentBase_STV_ECOLOR_0, Get_ParTestAgentBase_STV_ECOLOR_0));
			meta->RegisterMemberProperty(1612090457u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<bool> >("STV_LIST_BOOL_0", Set_ParTestAgentBase_STV_LIST_BOOL_0, Get_ParTestAgentBase_STV_LIST_BOOL_0));
			meta->RegisterMemberProperty(2171063431u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< bool >("STV_LIST_BOOL_0[]", Set_ParTestAgentBase_STV_LIST_BOOL_0, Get_ParTestAgentBase_STV_LIST_BOOL_0));
			meta->RegisterMemberProperty(3566348696u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<char> >("STV_LIST_CHAR_0", Set_ParTestAgentBase_STV_LIST_CHAR_0, Get_ParTestAgentBase_STV_LIST_CHAR_0));
			meta->RegisterMemberProperty(4114270571u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< char >("STV_LIST_CHAR_0[]", Set_ParTestAgentBase_STV_LIST_CHAR_0, Get_ParTestAgentBase_STV_LIST_CHAR_0));
			meta->RegisterMemberProperty(2487001405u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<TNS::NE::NAT::eColor> >("STV_LIST_ECOLOR_0", Set_ParTestAgentBase_STV_LIST_ECOLOR_0, Get_ParTestAgentBase_STV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(1033839917u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< TNS::NE::NAT::eColor >("STV_LIST_ECOLOR_0[]", Set_ParTestAgentBase_STV_LIST_ECOLOR_0, Get_ParTestAgentBase_STV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(2135462866u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<signed char> >("STV_LIST_SBYTE_0", Set_ParTestAgentBase_STV_LIST_SBYTE_0, Get_ParTestAgentBase_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(1516972635u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< signed char >("STV_LIST_SBYTE_0[]", Set_ParTestAgentBase_STV_LIST_SBYTE_0, Get_ParTestAgentBase_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(3326442243u, BEHAVIAC_NEW CMemberProperty< bool >("TV_BOOL_0", Set_ParTestAgentBase_TV_BOOL_0, Get_ParTestAgentBase_TV_BOOL_0));
			meta->RegisterMemberProperty(2045932444u, BEHAVIAC_NEW CMemberProperty< unsigned char >("TV_BYTE_0", Set_ParTestAgentBase_TV_BYTE_0, Get_ParTestAgentBase_TV_BYTE_0));
			meta->RegisterMemberProperty(1925308098u, BEHAVIAC_NEW CMemberProperty< char >("TV_CHAR_0", Set_ParTestAgentBase_TV_CHAR_0, Get_ParTestAgentBase_TV_CHAR_0));
			meta->RegisterMemberProperty(241062087u, BEHAVIAC_NEW CMemberProperty< TNS::NE::NAT::eColor >("TV_ECOLOR_0", Set_ParTestAgentBase_TV_ECOLOR_0, Get_ParTestAgentBase_TV_ECOLOR_0));
			meta->RegisterMemberProperty(3454568683u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<bool> >("TV_LIST_BOOL_0", Set_ParTestAgentBase_TV_LIST_BOOL_0, Get_ParTestAgentBase_TV_LIST_BOOL_0));
			meta->RegisterMemberProperty(641479675u, BEHAVIAC_NEW CMemberArrayItemProperty< bool >("TV_LIST_BOOL_0[]", Set_ParTestAgentBase_TV_LIST_BOOL_0, Get_ParTestAgentBase_TV_LIST_BOOL_0));
			meta->RegisterMemberProperty(1918861428u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<unsigned char> >("TV_LIST_BYTE_0", Set_ParTestAgentBase_TV_LIST_BYTE_0, Get_ParTestAgentBase_TV_LIST_BYTE_0));
			meta->RegisterMemberProperty(3728642731u, BEHAVIAC_NEW CMemberArrayItemProperty< unsigned char >("TV_LIST_BYTE_0[]", Set_ParTestAgentBase_TV_LIST_BYTE_0, Get_ParTestAgentBase_TV_LIST_BYTE_0));
			meta->RegisterMemberProperty(2037132586u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<char> >("TV_LIST_CHAR_0", Set_ParTestAgentBase_TV_LIST_CHAR_0, Get_ParTestAgentBase_TV_LIST_CHAR_0));
			meta->RegisterMemberProperty(1382102551u, BEHAVIAC_NEW CMemberArrayItemProperty< char >("TV_LIST_CHAR_0[]", Set_ParTestAgentBase_TV_LIST_CHAR_0, Get_ParTestAgentBase_TV_LIST_CHAR_0));
			meta->RegisterMemberProperty(862412353u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<TNS::NE::NAT::eColor> >("TV_LIST_ECOLOR_0", Set_ParTestAgentBase_TV_LIST_ECOLOR_0, Get_ParTestAgentBase_TV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(3855745440u, BEHAVIAC_NEW CMemberArrayItemProperty< TNS::NE::NAT::eColor >("TV_LIST_ECOLOR_0[]", Set_ParTestAgentBase_TV_LIST_ECOLOR_0, Get_ParTestAgentBase_TV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(3466167234u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<signed char> >("TV_LIST_SBYTE_0", Set_ParTestAgentBase_TV_LIST_SBYTE_0, Get_ParTestAgentBase_TV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(2204970056u, BEHAVIAC_NEW CMemberArrayItemProperty< signed char >("TV_LIST_SBYTE_0[]", Set_ParTestAgentBase_TV_LIST_SBYTE_0, Get_ParTestAgentBase_TV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(1600661043u, BEHAVIAC_NEW CMemberProperty< signed char >("TV_SBYTE_0", Set_ParTestAgentBase_TV_SBYTE_0, Get_ParTestAgentBase_TV_SBYTE_0));
			meta->RegisterMemberProperty(1841109764u, BEHAVIAC_NEW CStaticMemberProperty< int >("STV_INT_0", Set_ParTestAgent_STV_INT_0, Get_ParTestAgent_STV_INT_0));
			meta->RegisterMemberProperty(197916387u, BEHAVIAC_NEW CStaticMemberProperty< TNS::ST::PER::WRK::kEmployee >("STV_KEMPLOYEE_0", Set_ParTestAgent_STV_KEMPLOYEE_0, Get_ParTestAgent_STV_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1272574615u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<int> >("STV_LIST_INT_0", Set_ParTestAgent_STV_LIST_INT_0, Get_ParTestAgent_STV_LIST_INT_0));
			meta->RegisterMemberProperty(359013138u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< int >("STV_LIST_INT_0[]", Set_ParTestAgent_STV_LIST_INT_0, Get_ParTestAgent_STV_LIST_INT_0));
			meta->RegisterMemberProperty(1924897476u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<TNS::ST::PER::WRK::kEmployee> >("STV_LIST_KEMPLOYEE_0", Set_ParTestAgent_STV_LIST_KEMPLOYEE_0, Get_ParTestAgent_STV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1061897758u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< TNS::ST::PER::WRK::kEmployee >("STV_LIST_KEMPLOYEE_0[]", Set_ParTestAgent_STV_LIST_KEMPLOYEE_0, Get_ParTestAgent_STV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1293576705u, BEHAVIAC_NEW CMemberProperty< int >("TV_INT_0", Set_ParTestAgent_TV_INT_0, Get_ParTestAgent_TV_INT_0));
			meta->RegisterMemberProperty(2788553297u, BEHAVIAC_NEW CMemberProperty< TNS::ST::PER::WRK::kEmployee >("TV_KEMPLOYEE_0", Set_ParTestAgent_TV_KEMPLOYEE_0, Get_ParTestAgent_TV_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1264342854u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<int> >("TV_LIST_INT_0", Set_ParTestAgent_TV_LIST_INT_0, Get_ParTestAgent_TV_LIST_INT_0));
			meta->RegisterMemberProperty(2763459330u, BEHAVIAC_NEW CMemberArrayItemProperty< int >("TV_LIST_INT_0[]", Set_ParTestAgent_TV_LIST_INT_0, Get_ParTestAgent_TV_LIST_INT_0));
			meta->RegisterMemberProperty(1712688287u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<TNS::ST::PER::WRK::kEmployee> >("TV_LIST_KEMPLOYEE_0", Set_ParTestAgent_TV_LIST_KEMPLOYEE_0, Get_ParTestAgent_TV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(244720705u, BEHAVIAC_NEW CMemberArrayItemProperty< TNS::ST::PER::WRK::kEmployee >("TV_LIST_KEMPLOYEE_0[]", Set_ParTestAgent_TV_LIST_KEMPLOYEE_0, Get_ParTestAgent_TV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(2082189039u, BEHAVIAC_NEW CMemberProperty< long >("TV_LONG_0", Set_ParTestAgent_TV_LONG_0, Get_ParTestAgent_TV_LONG_0));
			meta->RegisterMemberProperty(1232231841u, BEHAVIAC_NEW CMemberProperty< short >("TV_SHORT_0", Set_ParTestAgent_TV_SHORT_0, Get_ParTestAgent_TV_SHORT_0));
			meta->RegisterMemberProperty(537748306u, BEHAVIAC_NEW CMemberProperty< unsigned short >("TV_USHORT_0", Set_ParTestAgent_TV_USHORT_0, Get_ParTestAgent_TV_USHORT_0));
			meta->RegisterCustomizedProperty(2630010392u, BEHAVIAC_NEW CCustomizedProperty< ParTestAgent* >(2630010392u, "C_Agent", "null"));
			meta->RegisterCustomizedProperty(1780706519u, BEHAVIAC_NEW CCustomizedProperty< UnityEngine::GameObject* >(1780706519u, "C_GameObject", "null"));
			meta->RegisterMethod(2245666463u, BEHAVIAC_NEW CAgentMethod_1< bool, bool >(FunctionPointer_ParTestAgent_Func_BooleanIR));
			meta->RegisterMethod(3791888951u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<bool>, behaviac::vector<bool> >(FunctionPointer_ParTestAgent_Func_BooleanListIR));
			meta->RegisterMethod(1841337487u, BEHAVIAC_NEW CAgentMethod_1< unsigned char, unsigned char >(FunctionPointer_ParTestAgent_Func_ByteIR));
			meta->RegisterMethod(3252333806u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<unsigned char>, behaviac::vector<unsigned char> >(FunctionPointer_ParTestAgent_Func_ByteListIR));
			meta->RegisterMethod(1727216081u, BEHAVIAC_NEW CAgentMethod_1< char, char >(FunctionPointer_ParTestAgent_Func_CharIR));
			meta->RegisterMethod(1477551860u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<char>, behaviac::vector<char> >(FunctionPointer_ParTestAgent_Func_CharListIR));
			meta->RegisterMethod(2426660965u, BEHAVIAC_NEW CAgentMethod_1< TNS::NE::NAT::eColor, TNS::NE::NAT::eColor >(FunctionPointer_ParTestAgent_Func_eColorIR));
			meta->RegisterMethod(3714114176u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<TNS::NE::NAT::eColor>, behaviac::vector<TNS::NE::NAT::eColor> >(FunctionPointer_ParTestAgent_Func_eColorListIR));
			meta->RegisterMethod(509199861u, BEHAVIAC_NEW CAgentMethod_1< signed char, signed char >(FunctionPointer_ParTestAgent_Func_SByteIR));
			meta->RegisterMethod(4269893793u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<signed char>, behaviac::vector<signed char> >(FunctionPointer_ParTestAgent_Func_SByteListIR));
			meta->RegisterMethod(433418480u, BEHAVIAC_NEW CAgentStaticMethod_1< unsigned char, unsigned char >(FunctionPointer_ParTestAgent_Func_ByteSMF));
			meta->RegisterMethod(2500673454u, BEHAVIAC_NEW CAgentStaticMethod_1< char, char >(FunctionPointer_ParTestAgent_Func_CharSMF));
			meta->RegisterMethod(2925170749u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<char>, behaviac::vector<char> >(FunctionPointer_ParTestAgent_Func_CharListSMF));
			meta->RegisterMethod(2435897298u, BEHAVIAC_NEW CAgentStaticMethod_1< signed char, signed char >(FunctionPointer_ParTestAgent_Func_SByteSMF));
			meta->RegisterMethod(262183808u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<signed char>, behaviac::vector<signed char> >(FunctionPointer_ParTestAgent_Func_SByteListSMF));
			meta->RegisterMethod(4220685126u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanRef());
			meta->RegisterMethod(3515774986u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanListRef());
			meta->RegisterMethod(45294703u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteRef());
			meta->RegisterMethod(1221064402u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteListRef());
			meta->RegisterMethod(2389404465u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharRef());
			meta->RegisterMethod(3040658594u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharListRef());
			meta->RegisterMethod(4207250143u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorRef());
			meta->RegisterMethod(3634257456u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorListRef());
			meta->RegisterMethod(2320925517u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteRef());
			meta->RegisterMethod(348573471u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteListRef());
			meta->RegisterMethod(1487303319u, BEHAVIAC_NEW CAgentMethod_1< int, int >(FunctionPointer_ParTestAgent_Func_IntIR));
			meta->RegisterMethod(3597364904u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<int>, behaviac::vector<int> >(FunctionPointer_ParTestAgent_Func_IntListIR));
			meta->RegisterMethod(1409230127u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeIR());
			meta->RegisterMethod(1288141092u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<TNS::ST::PER::WRK::kEmployee>, behaviac::vector<TNS::ST::PER::WRK::kEmployee> >(FunctionPointer_ParTestAgent_Func_kEmployeeListIR));
			meta->RegisterMethod(1747536380u, BEHAVIAC_NEW CAgentMethod_1< long, long >(FunctionPointer_ParTestAgent_Func_LongIR));
			meta->RegisterMethod(3355346939u, BEHAVIAC_NEW CAgentMethod_1< short, short >(FunctionPointer_ParTestAgent_Func_ShortIR));
			meta->RegisterMethod(1006721363u, BEHAVIAC_NEW CAgentMethod_1< unsigned short, unsigned short >(FunctionPointer_ParTestAgent_Func_UShortIR));
			meta->RegisterMethod(84757482u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeSMF());
			meta->RegisterMethod(4056001315u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<TNS::ST::PER::WRK::kEmployee>, behaviac::vector<TNS::ST::PER::WRK::kEmployee> >(FunctionPointer_ParTestAgent_Func_kEmployeeListSMF));
			meta->RegisterMethod(2526379581u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_IntRef());
			meta->RegisterMethod(1132240641u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_IntListRef());
			meta->RegisterMethod(510336885u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeRef());
			meta->RegisterMethod(3936878524u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeListRef());
			meta->RegisterMethod(3418025268u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_LongRef());
			meta->RegisterMethod(1832323336u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_ShortRef());
			meta->RegisterMethod(903069175u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_UShortRef());
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_ParTestAgent_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// AgentNodeTest
			meta = BEHAVIAC_NEW AgentMeta(884024470u);
			AgentMeta::GetAgentMetas()[1457925020u] = meta;
			meta->RegisterCustomizedProperty(257770974u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(257770974u, "c_ReturnFloat2", "{x=0;y=0;}"));
			meta->RegisterCustomizedProperty(2482280992u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(2482280992u, "c_ReturnFloat2Const", "{x=0;y=0;}"));
			meta->RegisterMemberProperty(3258996215u, BEHAVIAC_NEW CMemberProperty< ChildNodeTest* >("par_child", Set_AgentNodeTest_par_child, Get_AgentNodeTest_par_child));
			meta->RegisterCustomizedProperty(448638693u, BEHAVIAC_NEW CCustomizedProperty< ChildNodeTest* >(448638693u, "par_child_agent_1", "null"));
			meta->RegisterCustomizedProperty(767249388u, BEHAVIAC_NEW CCustomizedProperty< unsigned int >(767249388u, "redirectCount", "0"));
			meta->RegisterCustomizedProperty(3775965105u, BEHAVIAC_NEW CCustomizedProperty< unsigned int >(3775965105u, "redirectTime", "0"));
			meta->RegisterCustomizedProperty(4065205216u, BEHAVIAC_NEW CCustomizedProperty< behaviac::vector<int> >(4065205216u, "test_int_array", "3:1|2|3"));
			meta->RegisterCustomizedProperty(2899187560u, BEHAVIAC_NEW CCustomizedArrayItemProperty< int >(4065205216u, "test_int_array"));
			meta->RegisterMemberProperty(198962147u, BEHAVIAC_NEW CMemberProperty< EnumTest >("testColor", Set_AgentNodeTest_testColor, Get_AgentNodeTest_testColor));
			meta->RegisterCustomizedProperty(2452701783u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(2452701783u, "testFloat2", "{x=0;y=0;}"));
			meta->RegisterCustomizedProperty(2614050066u, BEHAVIAC_NEW CCustomizedProperty< int >(2614050066u, "testInt", "10"));
			meta->RegisterMemberProperty(2970758673u, BEHAVIAC_NEW CMemberProperty< int >("testVar_0", Set_AgentNodeTest_testVar_0, Get_AgentNodeTest_testVar_0));
			meta->RegisterMemberProperty(2819170128u, BEHAVIAC_NEW CMemberProperty< int >("testVar_1", Set_AgentNodeTest_testVar_1, Get_AgentNodeTest_testVar_1));
			meta->RegisterMemberProperty(2200194195u, BEHAVIAC_NEW CMemberProperty< float >("testVar_2", Set_AgentNodeTest_testVar_2, Get_AgentNodeTest_testVar_2));
			meta->RegisterMemberProperty(2587852242u, BEHAVIAC_NEW CMemberProperty< float >("testVar_3", Set_AgentNodeTest_testVar_3, Get_AgentNodeTest_testVar_3));
			meta->RegisterMemberProperty(3310187448u, BEHAVIAC_NEW CMemberProperty< Act >("testVar_Act", Set_AgentNodeTest_testVar_Act, Get_AgentNodeTest_testVar_Act));
			meta->RegisterMemberProperty(2437660593u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("testVar_str_0", Set_AgentNodeTest_testVar_str_0, Get_AgentNodeTest_testVar_str_0));
			meta->RegisterMemberProperty(2829684079u, BEHAVIAC_NEW CMemberProperty< int >("waiting_timeout_interval", Set_AgentNodeTest_waiting_timeout_interval, Get_AgentNodeTest_waiting_timeout_interval));
			meta->RegisterMethod(3417736963u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_AgentNodeTest_CanSeeEnemy));
			meta->RegisterMethod(3841737076u, BEHAVIAC_NEW CAgentMethod< TestNS::Node* >(FunctionPointer_AgentNodeTest_createExtendedNode));
			meta->RegisterMethod(612351346u, BEHAVIAC_NEW CAgentMethod< UnityEngine::GameObject* >(FunctionPointer_AgentNodeTest_createGameObject));
			meta->RegisterMethod(2266721508u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_AgentNodeTest_enter_action_0));
			meta->RegisterMethod(2650824101u, BEHAVIAC_NEW CAgentMethod_1< bool, float >(FunctionPointer_AgentNodeTest_enter_action_1));
			meta->RegisterMethod(3039628902u, BEHAVIAC_NEW CAgentMethod_2< bool, int, behaviac::string >(FunctionPointer_AgentNodeTest_enter_action_2));
			meta->RegisterMethod(4014289259u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_AgentNodeTest_event_test_a) /* event_test_a */);
			meta->RegisterMethod(2189603037u, BEHAVIAC_NEW CAgentMethodVoid_1<AgentNodeTest*>(FunctionPointer_AgentNodeTest_event_test_agent) /* event_test_agent */);
			meta->RegisterMethod(3295175336u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_AgentNodeTest_event_test_b) /* event_test_b */);
			meta->RegisterMethod(2287045809u, BEHAVIAC_NEW CAgentMethodVoid_1<TestNS::Float2&>(FunctionPointer_AgentNodeTest_event_test_float2) /* event_test_float2 */);
			meta->RegisterMethod(1001456418u, BEHAVIAC_NEW CAgentMethodVoid_1<TestNS::Float2&>(FunctionPointer_AgentNodeTest_event_test_float2_ref) /* event_test_float2_ref */);
			meta->RegisterMethod(4124834631u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_AgentNodeTest_event_test_int) /* event_test_int */);
			meta->RegisterMethod(448474004u, BEHAVIAC_NEW CAgentMethodVoid_2<int, bool>(FunctionPointer_AgentNodeTest_event_test_int_bool) /* event_test_int_bool */);
			meta->RegisterMethod(4018707979u, BEHAVIAC_NEW CAgentMethodVoid_3<int, bool, float>(FunctionPointer_AgentNodeTest_event_test_int_bool_float) /* event_test_int_bool_float */);
			meta->RegisterMethod(2836579937u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_AgentNodeTest_event_test_void) /* event_test_void */);
			meta->RegisterMethod(1375648194u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_AgentNodeTest_exit_action_0));
			meta->RegisterMethod(1223002243u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_AgentNodeTest_exit_action_1));
			meta->RegisterMethod(1674107712u, BEHAVIAC_NEW CAgentMethodVoid_2<int, behaviac::string>(FunctionPointer_AgentNodeTest_exit_action_2));
			meta->RegisterMethod(1696467630u, BEHAVIAC_NEW CAgentMethod< TestNS::Float2& >(FunctionPointer_AgentNodeTest_getConstExtendedStruct));
			meta->RegisterMethod(3156134057u, BEHAVIAC_NEW CAgentMethod< int >(FunctionPointer_AgentNodeTest_getConstOne));
			meta->RegisterMethod(2384715904u, BEHAVIAC_NEW CAgentMethod_2< int, int, int >(FunctionPointer_AgentNodeTest_getConstThousand));
			meta->RegisterMethod(1444877838u, BEHAVIAC_NEW CAgentMethod< TestNS::Float2& >(FunctionPointer_AgentNodeTest_getExtendedStruct));
			meta->RegisterMethod(1531714055u, BEHAVIAC_NEW CAgentMethod< char* >(FunctionPointer_AgentNodeTest_GetRefTree));
			meta->RegisterMethod(2108149229u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_AgentNodeTest_initChildAgent));
			meta->RegisterMethod(3801510065u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_AgentNodeTest_initChildAgentTest));
			meta->RegisterMethod(359893626u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_AgentNodeTest_IsTargetValid));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_AgentNodeTest_LogMessage));
			meta->RegisterMethod(3042982998u, BEHAVIAC_NEW CAgentMethod< behaviac::EBTStatus >(FunctionPointer_AgentNodeTest_Move));
			meta->RegisterMethod(1793645156u, BEHAVIAC_NEW CAgentMethod< behaviac::EBTStatus >(FunctionPointer_AgentNodeTest_MoveToTarget));
			meta->RegisterMethod(1360929338u, BEHAVIAC_NEW CMethod_AgentNodeTest_return_status());
			meta->RegisterMethod(3924198470u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_AgentNodeTest_SelectTarget));
			meta->RegisterMethod(3443632936u, BEHAVIAC_NEW CMethod_AgentNodeTest_setEventVarAgent());
			meta->RegisterMethod(3973031482u, BEHAVIAC_NEW CAgentMethodVoid_1<bool>(FunctionPointer_AgentNodeTest_setEventVarBool));
			meta->RegisterMethod(3279228376u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_AgentNodeTest_setEventVarFloat));
			meta->RegisterMethod(1880963606u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_AgentNodeTest_setEventVarInt));
			meta->RegisterMethod(2616188313u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_AgentNodeTest_setTestVar_0));
			meta->RegisterMethod(1020521802u, BEHAVIAC_NEW CAgentMethodVoid_2<int, float>(FunctionPointer_AgentNodeTest_setTestVar_0_2));
			meta->RegisterMethod(2197089496u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_AgentNodeTest_setTestVar_1));
			meta->RegisterMethod(2849619739u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_AgentNodeTest_setTestVar_2));
			meta->RegisterMethod(2965540442u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_AgentNodeTest_setTestVar_3));
			meta->RegisterMethod(3424965820u, BEHAVIAC_NEW CAgentMethod< float >(FunctionPointer_AgentNodeTest_setTestVar_R));
			meta->RegisterMethod(3387603904u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_AgentNodeTest_Stop));
			meta->RegisterMethod(766905u, BEHAVIAC_NEW CMethod_AgentNodeTest_switchRef());
			meta->RegisterMethod(2599125155u, BEHAVIAC_NEW CAgentMethodVoid_2<int, float>(FunctionPointer_AgentNodeTest_task_test) /* task_test */);
			meta->RegisterMethod(2043807016u, BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedRefType());
			meta->RegisterMethod(1444063412u, BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedStruct());
			meta->RegisterMethod(4293156620u, BEHAVIAC_NEW CAgentMethod< TestClassA* >(FunctionPointer_AgentNodeTest_TestFunC));
			meta->RegisterMethod(336877113u, BEHAVIAC_NEW CMethod_AgentNodeTest_TestFuncD());
			meta->RegisterMethod(3054404812u, BEHAVIAC_NEW CMethod_AgentNodeTest_testGameObject());
			meta->RegisterMethod(3286992291u, BEHAVIAC_NEW CAgentMethodVoid_1<behaviac::string>(FunctionPointer_AgentNodeTest_testString));
			meta->RegisterMethod(2247836416u, BEHAVIAC_NEW CMethod_AgentNodeTest_testVectorStruct());
			meta->RegisterMethod(2469406928u, BEHAVIAC_NEW CMethod_AgentNodeTest_transitPlanTactics());
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// ChildNodeTest
			meta = BEHAVIAC_NEW AgentMeta(2859093673u);
			AgentMeta::GetAgentMetas()[3929034668u] = meta;
			meta->RegisterCustomizedProperty(257770974u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(257770974u, "c_ReturnFloat2", "{x=0;y=0;}"));
			meta->RegisterCustomizedProperty(2482280992u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(2482280992u, "c_ReturnFloat2Const", "{x=0;y=0;}"));
			meta->RegisterMemberProperty(3258996215u, BEHAVIAC_NEW CMemberProperty< ChildNodeTest* >("par_child", Set_AgentNodeTest_par_child, Get_AgentNodeTest_par_child));
			meta->RegisterCustomizedProperty(448638693u, BEHAVIAC_NEW CCustomizedProperty< ChildNodeTest* >(448638693u, "par_child_agent_1", "null"));
			meta->RegisterCustomizedProperty(767249388u, BEHAVIAC_NEW CCustomizedProperty< unsigned int >(767249388u, "redirectCount", "0"));
			meta->RegisterCustomizedProperty(3775965105u, BEHAVIAC_NEW CCustomizedProperty< unsigned int >(3775965105u, "redirectTime", "0"));
			meta->RegisterCustomizedProperty(4065205216u, BEHAVIAC_NEW CCustomizedProperty< behaviac::vector<int> >(4065205216u, "test_int_array", "3:1|2|3"));
			meta->RegisterCustomizedProperty(2899187560u, BEHAVIAC_NEW CCustomizedArrayItemProperty< int >(4065205216u, "test_int_array"));
			meta->RegisterMemberProperty(198962147u, BEHAVIAC_NEW CMemberProperty< EnumTest >("testColor", Set_AgentNodeTest_testColor, Get_AgentNodeTest_testColor));
			meta->RegisterCustomizedProperty(2452701783u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(2452701783u, "testFloat2", "{x=0;y=0;}"));
			meta->RegisterCustomizedProperty(2614050066u, BEHAVIAC_NEW CCustomizedProperty< int >(2614050066u, "testInt", "10"));
			meta->RegisterMemberProperty(2970758673u, BEHAVIAC_NEW CMemberProperty< int >("testVar_0", Set_AgentNodeTest_testVar_0, Get_AgentNodeTest_testVar_0));
			meta->RegisterMemberProperty(2819170128u, BEHAVIAC_NEW CMemberProperty< int >("testVar_1", Set_AgentNodeTest_testVar_1, Get_AgentNodeTest_testVar_1));
			meta->RegisterMemberProperty(2200194195u, BEHAVIAC_NEW CMemberProperty< float >("testVar_2", Set_AgentNodeTest_testVar_2, Get_AgentNodeTest_testVar_2));
			meta->RegisterMemberProperty(2587852242u, BEHAVIAC_NEW CMemberProperty< float >("testVar_3", Set_AgentNodeTest_testVar_3, Get_AgentNodeTest_testVar_3));
			meta->RegisterMemberProperty(3310187448u, BEHAVIAC_NEW CMemberProperty< Act >("testVar_Act", Set_AgentNodeTest_testVar_Act, Get_AgentNodeTest_testVar_Act));
			meta->RegisterMemberProperty(2437660593u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("testVar_str_0", Set_AgentNodeTest_testVar_str_0, Get_AgentNodeTest_testVar_str_0));
			meta->RegisterMemberProperty(2829684079u, BEHAVIAC_NEW CMemberProperty< int >("waiting_timeout_interval", Set_AgentNodeTest_waiting_timeout_interval, Get_AgentNodeTest_waiting_timeout_interval));
			meta->RegisterMethod(3417736963u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_ChildNodeTest_CanSeeEnemy));
			meta->RegisterMethod(3841737076u, BEHAVIAC_NEW CAgentMethod< TestNS::Node* >(FunctionPointer_ChildNodeTest_createExtendedNode));
			meta->RegisterMethod(612351346u, BEHAVIAC_NEW CAgentMethod< UnityEngine::GameObject* >(FunctionPointer_ChildNodeTest_createGameObject));
			meta->RegisterMethod(2266721508u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_ChildNodeTest_enter_action_0));
			meta->RegisterMethod(2650824101u, BEHAVIAC_NEW CAgentMethod_1< bool, float >(FunctionPointer_ChildNodeTest_enter_action_1));
			meta->RegisterMethod(3039628902u, BEHAVIAC_NEW CAgentMethod_2< bool, int, behaviac::string >(FunctionPointer_ChildNodeTest_enter_action_2));
			meta->RegisterMethod(4014289259u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTest_event_test_a) /* event_test_a */);
			meta->RegisterMethod(2189603037u, BEHAVIAC_NEW CAgentMethodVoid_1<AgentNodeTest*>(FunctionPointer_ChildNodeTest_event_test_agent) /* event_test_agent */);
			meta->RegisterMethod(3295175336u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTest_event_test_b) /* event_test_b */);
			meta->RegisterMethod(2287045809u, BEHAVIAC_NEW CAgentMethodVoid_1<TestNS::Float2&>(FunctionPointer_ChildNodeTest_event_test_float2) /* event_test_float2 */);
			meta->RegisterMethod(1001456418u, BEHAVIAC_NEW CAgentMethodVoid_1<TestNS::Float2&>(FunctionPointer_ChildNodeTest_event_test_float2_ref) /* event_test_float2_ref */);
			meta->RegisterMethod(4124834631u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTest_event_test_int) /* event_test_int */);
			meta->RegisterMethod(448474004u, BEHAVIAC_NEW CAgentMethodVoid_2<int, bool>(FunctionPointer_ChildNodeTest_event_test_int_bool) /* event_test_int_bool */);
			meta->RegisterMethod(4018707979u, BEHAVIAC_NEW CAgentMethodVoid_3<int, bool, float>(FunctionPointer_ChildNodeTest_event_test_int_bool_float) /* event_test_int_bool_float */);
			meta->RegisterMethod(2836579937u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTest_event_test_void) /* event_test_void */);
			meta->RegisterMethod(1375648194u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTest_exit_action_0));
			meta->RegisterMethod(1223002243u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTest_exit_action_1));
			meta->RegisterMethod(1674107712u, BEHAVIAC_NEW CAgentMethodVoid_2<int, behaviac::string>(FunctionPointer_ChildNodeTest_exit_action_2));
			meta->RegisterMethod(1143237114u, BEHAVIAC_NEW CAgentMethod< double >(FunctionPointer_ChildNodeTest_GetConstDoubleValue));
			meta->RegisterMethod(1696467630u, BEHAVIAC_NEW CAgentMethod< TestNS::Float2& >(FunctionPointer_ChildNodeTest_getConstExtendedStruct));
			meta->RegisterMethod(2224959841u, BEHAVIAC_NEW CAgentMethod< float >(FunctionPointer_ChildNodeTest_GetConstFloatValue));
			meta->RegisterMethod(3156134057u, BEHAVIAC_NEW CAgentMethod< int >(FunctionPointer_ChildNodeTest_getConstOne));
			meta->RegisterMethod(2384715904u, BEHAVIAC_NEW CAgentMethod_2< int, int, int >(FunctionPointer_ChildNodeTest_getConstThousand));
			meta->RegisterMethod(1444877838u, BEHAVIAC_NEW CAgentMethod< TestNS::Float2& >(FunctionPointer_ChildNodeTest_getExtendedStruct));
			meta->RegisterMethod(1531714055u, BEHAVIAC_NEW CAgentMethod< char* >(FunctionPointer_ChildNodeTest_GetRefTree));
			meta->RegisterMethod(2108149229u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTest_initChildAgent));
			meta->RegisterMethod(3801510065u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTest_initChildAgentTest));
			meta->RegisterMethod(359893626u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_ChildNodeTest_IsTargetValid));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_ChildNodeTest_LogMessage));
			meta->RegisterMethod(3042982998u, BEHAVIAC_NEW CAgentMethod< behaviac::EBTStatus >(FunctionPointer_ChildNodeTest_Move));
			meta->RegisterMethod(1793645156u, BEHAVIAC_NEW CAgentMethod< behaviac::EBTStatus >(FunctionPointer_ChildNodeTest_MoveToTarget));
			meta->RegisterMethod(1360929338u, BEHAVIAC_NEW CMethod_AgentNodeTest_return_status());
			meta->RegisterMethod(3924198470u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTest_SelectTarget));
			meta->RegisterMethod(3443632936u, BEHAVIAC_NEW CMethod_AgentNodeTest_setEventVarAgent());
			meta->RegisterMethod(3973031482u, BEHAVIAC_NEW CAgentMethodVoid_1<bool>(FunctionPointer_ChildNodeTest_setEventVarBool));
			meta->RegisterMethod(3279228376u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTest_setEventVarFloat));
			meta->RegisterMethod(1880963606u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTest_setEventVarInt));
			meta->RegisterMethod(2616188313u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTest_setTestVar_0));
			meta->RegisterMethod(1020521802u, BEHAVIAC_NEW CAgentMethodVoid_2<int, float>(FunctionPointer_ChildNodeTest_setTestVar_0_2));
			meta->RegisterMethod(2197089496u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTest_setTestVar_1));
			meta->RegisterMethod(2849619739u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTest_setTestVar_2));
			meta->RegisterMethod(2965540442u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTest_setTestVar_3));
			meta->RegisterMethod(3424965820u, BEHAVIAC_NEW CAgentMethod< float >(FunctionPointer_ChildNodeTest_setTestVar_R));
			meta->RegisterMethod(3387603904u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTest_Stop));
			meta->RegisterMethod(766905u, BEHAVIAC_NEW CMethod_AgentNodeTest_switchRef());
			meta->RegisterMethod(2599125155u, BEHAVIAC_NEW CAgentMethodVoid_2<int, float>(FunctionPointer_ChildNodeTest_task_test) /* task_test */);
			meta->RegisterMethod(2043807016u, BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedRefType());
			meta->RegisterMethod(1444063412u, BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedStruct());
			meta->RegisterMethod(4293156620u, BEHAVIAC_NEW CAgentMethod< TestClassA* >(FunctionPointer_ChildNodeTest_TestFunC));
			meta->RegisterMethod(336877113u, BEHAVIAC_NEW CMethod_AgentNodeTest_TestFuncD());
			meta->RegisterMethod(3054404812u, BEHAVIAC_NEW CMethod_AgentNodeTest_testGameObject());
			meta->RegisterMethod(3286992291u, BEHAVIAC_NEW CAgentMethodVoid_1<behaviac::string>(FunctionPointer_ChildNodeTest_testString));
			meta->RegisterMethod(2247836416u, BEHAVIAC_NEW CMethod_AgentNodeTest_testVectorStruct());
			meta->RegisterMethod(2469406928u, BEHAVIAC_NEW CMethod_AgentNodeTest_transitPlanTactics());
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// ChildNodeTestSub
			meta = BEHAVIAC_NEW AgentMeta(3577543776u);
			AgentMeta::GetAgentMetas()[2999848163u] = meta;
			meta->RegisterCustomizedProperty(257770974u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(257770974u, "c_ReturnFloat2", "{x=0;y=0;}"));
			meta->RegisterCustomizedProperty(2482280992u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(2482280992u, "c_ReturnFloat2Const", "{x=0;y=0;}"));
			meta->RegisterMemberProperty(4255078523u, BEHAVIAC_NEW CMemberProperty< int >("IntValue", Set_ChildNodeTestSub_IntValue, Get_ChildNodeTestSub_IntValue));
			meta->RegisterMemberProperty(3258996215u, BEHAVIAC_NEW CMemberProperty< ChildNodeTest* >("par_child", Set_AgentNodeTest_par_child, Get_AgentNodeTest_par_child));
			meta->RegisterCustomizedProperty(448638693u, BEHAVIAC_NEW CCustomizedProperty< ChildNodeTest* >(448638693u, "par_child_agent_1", "null"));
			meta->RegisterCustomizedProperty(767249388u, BEHAVIAC_NEW CCustomizedProperty< unsigned int >(767249388u, "redirectCount", "0"));
			meta->RegisterCustomizedProperty(3775965105u, BEHAVIAC_NEW CCustomizedProperty< unsigned int >(3775965105u, "redirectTime", "0"));
			meta->RegisterCustomizedProperty(4065205216u, BEHAVIAC_NEW CCustomizedProperty< behaviac::vector<int> >(4065205216u, "test_int_array", "3:1|2|3"));
			meta->RegisterCustomizedProperty(2899187560u, BEHAVIAC_NEW CCustomizedArrayItemProperty< int >(4065205216u, "test_int_array"));
			meta->RegisterMemberProperty(198962147u, BEHAVIAC_NEW CMemberProperty< EnumTest >("testColor", Set_AgentNodeTest_testColor, Get_AgentNodeTest_testColor));
			meta->RegisterCustomizedProperty(2452701783u, BEHAVIAC_NEW CCustomizedProperty< TestNS::Float2 >(2452701783u, "testFloat2", "{x=0;y=0;}"));
			meta->RegisterCustomizedProperty(2614050066u, BEHAVIAC_NEW CCustomizedProperty< int >(2614050066u, "testInt", "10"));
			meta->RegisterMemberProperty(2970758673u, BEHAVIAC_NEW CMemberProperty< int >("testVar_0", Set_AgentNodeTest_testVar_0, Get_AgentNodeTest_testVar_0));
			meta->RegisterMemberProperty(2819170128u, BEHAVIAC_NEW CMemberProperty< int >("testVar_1", Set_AgentNodeTest_testVar_1, Get_AgentNodeTest_testVar_1));
			meta->RegisterMemberProperty(2200194195u, BEHAVIAC_NEW CMemberProperty< float >("testVar_2", Set_AgentNodeTest_testVar_2, Get_AgentNodeTest_testVar_2));
			meta->RegisterMemberProperty(2587852242u, BEHAVIAC_NEW CMemberProperty< float >("testVar_3", Set_AgentNodeTest_testVar_3, Get_AgentNodeTest_testVar_3));
			meta->RegisterMemberProperty(3310187448u, BEHAVIAC_NEW CMemberProperty< Act >("testVar_Act", Set_AgentNodeTest_testVar_Act, Get_AgentNodeTest_testVar_Act));
			meta->RegisterMemberProperty(2437660593u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("testVar_str_0", Set_AgentNodeTest_testVar_str_0, Get_AgentNodeTest_testVar_str_0));
			meta->RegisterMemberProperty(2829684079u, BEHAVIAC_NEW CMemberProperty< int >("waiting_timeout_interval", Set_AgentNodeTest_waiting_timeout_interval, Get_AgentNodeTest_waiting_timeout_interval));
			meta->RegisterMethod(3417736963u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_ChildNodeTestSub_CanSeeEnemy));
			meta->RegisterMethod(3841737076u, BEHAVIAC_NEW CAgentMethod< TestNS::Node* >(FunctionPointer_ChildNodeTestSub_createExtendedNode));
			meta->RegisterMethod(612351346u, BEHAVIAC_NEW CAgentMethod< UnityEngine::GameObject* >(FunctionPointer_ChildNodeTestSub_createGameObject));
			meta->RegisterMethod(2266721508u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_ChildNodeTestSub_enter_action_0));
			meta->RegisterMethod(2650824101u, BEHAVIAC_NEW CAgentMethod_1< bool, float >(FunctionPointer_ChildNodeTestSub_enter_action_1));
			meta->RegisterMethod(3039628902u, BEHAVIAC_NEW CAgentMethod_2< bool, int, behaviac::string >(FunctionPointer_ChildNodeTestSub_enter_action_2));
			meta->RegisterMethod(4014289259u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTestSub_event_test_a) /* event_test_a */);
			meta->RegisterMethod(2189603037u, BEHAVIAC_NEW CAgentMethodVoid_1<AgentNodeTest*>(FunctionPointer_ChildNodeTestSub_event_test_agent) /* event_test_agent */);
			meta->RegisterMethod(3295175336u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTestSub_event_test_b) /* event_test_b */);
			meta->RegisterMethod(2287045809u, BEHAVIAC_NEW CAgentMethodVoid_1<TestNS::Float2&>(FunctionPointer_ChildNodeTestSub_event_test_float2) /* event_test_float2 */);
			meta->RegisterMethod(1001456418u, BEHAVIAC_NEW CAgentMethodVoid_1<TestNS::Float2&>(FunctionPointer_ChildNodeTestSub_event_test_float2_ref) /* event_test_float2_ref */);
			meta->RegisterMethod(4124834631u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTestSub_event_test_int) /* event_test_int */);
			meta->RegisterMethod(448474004u, BEHAVIAC_NEW CAgentMethodVoid_2<int, bool>(FunctionPointer_ChildNodeTestSub_event_test_int_bool) /* event_test_int_bool */);
			meta->RegisterMethod(4018707979u, BEHAVIAC_NEW CAgentMethodVoid_3<int, bool, float>(FunctionPointer_ChildNodeTestSub_event_test_int_bool_float) /* event_test_int_bool_float */);
			meta->RegisterMethod(2836579937u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTestSub_event_test_void) /* event_test_void */);
			meta->RegisterMethod(1375648194u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTestSub_exit_action_0));
			meta->RegisterMethod(1223002243u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTestSub_exit_action_1));
			meta->RegisterMethod(1674107712u, BEHAVIAC_NEW CAgentMethodVoid_2<int, behaviac::string>(FunctionPointer_ChildNodeTestSub_exit_action_2));
			meta->RegisterMethod(1143237114u, BEHAVIAC_NEW CAgentMethod< double >(FunctionPointer_ChildNodeTestSub_GetConstDoubleValue));
			meta->RegisterMethod(1696467630u, BEHAVIAC_NEW CAgentMethod< TestNS::Float2& >(FunctionPointer_ChildNodeTestSub_getConstExtendedStruct));
			meta->RegisterMethod(2224959841u, BEHAVIAC_NEW CAgentMethod< float >(FunctionPointer_ChildNodeTestSub_GetConstFloatValue));
			meta->RegisterMethod(3548078159u, BEHAVIAC_NEW CAgentMethod< float >(FunctionPointer_ChildNodeTestSub_GetConstFloatValueSub));
			meta->RegisterMethod(3156134057u, BEHAVIAC_NEW CAgentMethod< int >(FunctionPointer_ChildNodeTestSub_getConstOne));
			meta->RegisterMethod(2384715904u, BEHAVIAC_NEW CAgentMethod_2< int, int, int >(FunctionPointer_ChildNodeTestSub_getConstThousand));
			meta->RegisterMethod(1444877838u, BEHAVIAC_NEW CAgentMethod< TestNS::Float2& >(FunctionPointer_ChildNodeTestSub_getExtendedStruct));
			meta->RegisterMethod(1531714055u, BEHAVIAC_NEW CAgentMethod< char* >(FunctionPointer_ChildNodeTestSub_GetRefTree));
			meta->RegisterMethod(2108149229u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTestSub_initChildAgent));
			meta->RegisterMethod(3801510065u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTestSub_initChildAgentTest));
			meta->RegisterMethod(359893626u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_ChildNodeTestSub_IsTargetValid));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_ChildNodeTestSub_LogMessage));
			meta->RegisterMethod(3042982998u, BEHAVIAC_NEW CAgentMethod< behaviac::EBTStatus >(FunctionPointer_ChildNodeTestSub_Move));
			meta->RegisterMethod(1793645156u, BEHAVIAC_NEW CAgentMethod< behaviac::EBTStatus >(FunctionPointer_ChildNodeTestSub_MoveToTarget));
			meta->RegisterMethod(1360929338u, BEHAVIAC_NEW CMethod_AgentNodeTest_return_status());
			meta->RegisterMethod(3924198470u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTestSub_SelectTarget));
			meta->RegisterMethod(3443632936u, BEHAVIAC_NEW CMethod_AgentNodeTest_setEventVarAgent());
			meta->RegisterMethod(3973031482u, BEHAVIAC_NEW CAgentMethodVoid_1<bool>(FunctionPointer_ChildNodeTestSub_setEventVarBool));
			meta->RegisterMethod(3279228376u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTestSub_setEventVarFloat));
			meta->RegisterMethod(1880963606u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTestSub_setEventVarInt));
			meta->RegisterMethod(2616188313u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTestSub_setTestVar_0));
			meta->RegisterMethod(1020521802u, BEHAVIAC_NEW CAgentMethodVoid_2<int, float>(FunctionPointer_ChildNodeTestSub_setTestVar_0_2));
			meta->RegisterMethod(2197089496u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_ChildNodeTestSub_setTestVar_1));
			meta->RegisterMethod(2849619739u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTestSub_setTestVar_2));
			meta->RegisterMethod(2965540442u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_ChildNodeTestSub_setTestVar_3));
			meta->RegisterMethod(3424965820u, BEHAVIAC_NEW CAgentMethod< float >(FunctionPointer_ChildNodeTestSub_setTestVar_R));
			meta->RegisterMethod(3387603904u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_ChildNodeTestSub_Stop));
			meta->RegisterMethod(766905u, BEHAVIAC_NEW CMethod_AgentNodeTest_switchRef());
			meta->RegisterMethod(2599125155u, BEHAVIAC_NEW CAgentMethodVoid_2<int, float>(FunctionPointer_ChildNodeTestSub_task_test) /* task_test */);
			meta->RegisterMethod(2043807016u, BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedRefType());
			meta->RegisterMethod(1444063412u, BEHAVIAC_NEW CMethod_AgentNodeTest_testExtendedStruct());
			meta->RegisterMethod(4293156620u, BEHAVIAC_NEW CAgentMethod< TestClassA* >(FunctionPointer_ChildNodeTestSub_TestFunC));
			meta->RegisterMethod(336877113u, BEHAVIAC_NEW CMethod_AgentNodeTest_TestFuncD());
			meta->RegisterMethod(3054404812u, BEHAVIAC_NEW CMethod_AgentNodeTest_testGameObject());
			meta->RegisterMethod(3286992291u, BEHAVIAC_NEW CAgentMethodVoid_1<behaviac::string>(FunctionPointer_ChildNodeTestSub_testString));
			meta->RegisterMethod(2247836416u, BEHAVIAC_NEW CMethod_AgentNodeTest_testVectorStruct());
			meta->RegisterMethod(2469406928u, BEHAVIAC_NEW CMethod_AgentNodeTest_transitPlanTactics());
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// CustomPropertyAgent
			meta = BEHAVIAC_NEW AgentMeta(2379456761u);
			AgentMeta::GetAgentMetas()[2659859304u] = meta;
			meta->RegisterMemberProperty(2967497109u, BEHAVIAC_NEW CMemberProperty< bool >("BoolMemberReadonly", Set_CustomPropertyAgent_BoolMemberReadonly, Get_CustomPropertyAgent_BoolMemberReadonly));
			meta->RegisterCustomizedProperty(130231588u, BEHAVIAC_NEW CCustomizedProperty< bool >(130231588u, "c_Bool", "false"));
			meta->RegisterCustomizedProperty(99975606u, BEHAVIAC_NEW CCustomizedProperty< TNS::NE::NAT::eColor >(99975606u, "c_Enum", "RED"));
			meta->RegisterCustomizedProperty(1799035077u, BEHAVIAC_NEW CCustomizedProperty< behaviac::vector<int> >(1799035077u, "c_IntArray", "0:"));
			meta->RegisterCustomizedProperty(3460103123u, BEHAVIAC_NEW CCustomizedArrayItemProperty< int >(1799035077u, "c_IntArray"));
			meta->RegisterCustomizedProperty(1335260864u, BEHAVIAC_NEW CCustomizedProperty< UnityEngine::Vector3 >(1335260864u, "c_Location", "{x=0;y=0;z=0;}"));
			meta->RegisterStaticCustomizedProperty(2438934774u, BEHAVIAC_NEW CCustomizedProperty< behaviac::string >(2438934774u, "c_StaticString", ""));
			meta->RegisterMemberProperty(2399245545u, BEHAVIAC_NEW CMemberProperty< float >("FloatPropertyReadonly", Set_CustomPropertyAgent_FloatPropertyReadonly, Get_CustomPropertyAgent_FloatPropertyReadonly));
			meta->RegisterMemberProperty(547014264u, BEHAVIAC_NEW CStaticMemberProperty< int >("IntMemberConst", Set_CustomPropertyAgent_IntMemberConst, Get_CustomPropertyAgent_IntMemberConst));
			meta->RegisterMemberProperty(2485682666u, BEHAVIAC_NEW CMemberProperty< int >("IntProperty", Set_CustomPropertyAgent_IntProperty, Get_CustomPropertyAgent_IntProperty));
			meta->RegisterMemberProperty(2906627922u, BEHAVIAC_NEW CMemberProperty< UnityEngine::Vector3 >("Location", Set_CustomPropertyAgent_Location, Get_CustomPropertyAgent_Location));
			meta->RegisterMemberProperty(1635564734u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("StringMemberReadonly", Set_CustomPropertyAgent_StringMemberReadonly, Get_CustomPropertyAgent_StringMemberReadonly));
			meta->RegisterCustomizedProperty(476653369u, BEHAVIAC_NEW CCustomizedProperty< TestNamespace::ClassAsValueType >(476653369u, "TestMember1", "{x=0;y=0;}"));
			meta->RegisterCustomizedProperty(927233274u, BEHAVIAC_NEW CCustomizedProperty< TestNamespace::Float2 >(927233274u, "TestMember2", "{x=0;y=0;}"));
			meta->RegisterMethod(537561990u, BEHAVIAC_NEW CMethod_CustomPropertyAgent_FnWithOutParam());
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_CustomPropertyAgent_LogMessage));
			meta->RegisterMethod(2869912658u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<int>, behaviac::vector<int> >(FunctionPointer_CustomPropertyAgent_PIR_IntArray));
			meta->RegisterMethod(3084186706u, BEHAVIAC_NEW CMethod_CustomPropertyAgent_TestFn1());
			meta->RegisterMethod(2633607057u, BEHAVIAC_NEW CMethod_CustomPropertyAgent_TestFn2());
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// EmployeeParTestAgent
			meta = BEHAVIAC_NEW AgentMeta(794251523u);
			AgentMeta::GetAgentMetas()[1673745146u] = meta;
			meta->RegisterMemberProperty(907888646u, BEHAVIAC_NEW CStaticMemberProperty< bool >("STV_BOOL_0", Set_ParTestAgentBase_STV_BOOL_0, Get_ParTestAgentBase_STV_BOOL_0));
			meta->RegisterMemberProperty(2191125959u, BEHAVIAC_NEW CStaticMemberProperty< char >("STV_CHAR_0", Set_ParTestAgentBase_STV_CHAR_0, Get_ParTestAgentBase_STV_CHAR_0));
			meta->RegisterMemberProperty(1356537398u, BEHAVIAC_NEW CStaticMemberProperty< TNS::NE::NAT::eColor >("STV_ECOLOR_0", Set_ParTestAgentBase_STV_ECOLOR_0, Get_ParTestAgentBase_STV_ECOLOR_0));
			meta->RegisterMemberProperty(1612090457u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<bool> >("STV_LIST_BOOL_0", Set_ParTestAgentBase_STV_LIST_BOOL_0, Get_ParTestAgentBase_STV_LIST_BOOL_0));
			meta->RegisterMemberProperty(2171063431u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< bool >("STV_LIST_BOOL_0[]", Set_ParTestAgentBase_STV_LIST_BOOL_0, Get_ParTestAgentBase_STV_LIST_BOOL_0));
			meta->RegisterMemberProperty(3566348696u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<char> >("STV_LIST_CHAR_0", Set_ParTestAgentBase_STV_LIST_CHAR_0, Get_ParTestAgentBase_STV_LIST_CHAR_0));
			meta->RegisterMemberProperty(4114270571u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< char >("STV_LIST_CHAR_0[]", Set_ParTestAgentBase_STV_LIST_CHAR_0, Get_ParTestAgentBase_STV_LIST_CHAR_0));
			meta->RegisterMemberProperty(2487001405u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<TNS::NE::NAT::eColor> >("STV_LIST_ECOLOR_0", Set_ParTestAgentBase_STV_LIST_ECOLOR_0, Get_ParTestAgentBase_STV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(1033839917u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< TNS::NE::NAT::eColor >("STV_LIST_ECOLOR_0[]", Set_ParTestAgentBase_STV_LIST_ECOLOR_0, Get_ParTestAgentBase_STV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(2135462866u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<signed char> >("STV_LIST_SBYTE_0", Set_ParTestAgentBase_STV_LIST_SBYTE_0, Get_ParTestAgentBase_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(1516972635u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< signed char >("STV_LIST_SBYTE_0[]", Set_ParTestAgentBase_STV_LIST_SBYTE_0, Get_ParTestAgentBase_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(3326442243u, BEHAVIAC_NEW CMemberProperty< bool >("TV_BOOL_0", Set_ParTestAgentBase_TV_BOOL_0, Get_ParTestAgentBase_TV_BOOL_0));
			meta->RegisterMemberProperty(2045932444u, BEHAVIAC_NEW CMemberProperty< unsigned char >("TV_BYTE_0", Set_ParTestAgentBase_TV_BYTE_0, Get_ParTestAgentBase_TV_BYTE_0));
			meta->RegisterMemberProperty(1925308098u, BEHAVIAC_NEW CMemberProperty< char >("TV_CHAR_0", Set_ParTestAgentBase_TV_CHAR_0, Get_ParTestAgentBase_TV_CHAR_0));
			meta->RegisterMemberProperty(241062087u, BEHAVIAC_NEW CMemberProperty< TNS::NE::NAT::eColor >("TV_ECOLOR_0", Set_ParTestAgentBase_TV_ECOLOR_0, Get_ParTestAgentBase_TV_ECOLOR_0));
			meta->RegisterMemberProperty(3454568683u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<bool> >("TV_LIST_BOOL_0", Set_ParTestAgentBase_TV_LIST_BOOL_0, Get_ParTestAgentBase_TV_LIST_BOOL_0));
			meta->RegisterMemberProperty(641479675u, BEHAVIAC_NEW CMemberArrayItemProperty< bool >("TV_LIST_BOOL_0[]", Set_ParTestAgentBase_TV_LIST_BOOL_0, Get_ParTestAgentBase_TV_LIST_BOOL_0));
			meta->RegisterMemberProperty(1918861428u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<unsigned char> >("TV_LIST_BYTE_0", Set_ParTestAgentBase_TV_LIST_BYTE_0, Get_ParTestAgentBase_TV_LIST_BYTE_0));
			meta->RegisterMemberProperty(3728642731u, BEHAVIAC_NEW CMemberArrayItemProperty< unsigned char >("TV_LIST_BYTE_0[]", Set_ParTestAgentBase_TV_LIST_BYTE_0, Get_ParTestAgentBase_TV_LIST_BYTE_0));
			meta->RegisterMemberProperty(2037132586u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<char> >("TV_LIST_CHAR_0", Set_ParTestAgentBase_TV_LIST_CHAR_0, Get_ParTestAgentBase_TV_LIST_CHAR_0));
			meta->RegisterMemberProperty(1382102551u, BEHAVIAC_NEW CMemberArrayItemProperty< char >("TV_LIST_CHAR_0[]", Set_ParTestAgentBase_TV_LIST_CHAR_0, Get_ParTestAgentBase_TV_LIST_CHAR_0));
			meta->RegisterMemberProperty(862412353u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<TNS::NE::NAT::eColor> >("TV_LIST_ECOLOR_0", Set_ParTestAgentBase_TV_LIST_ECOLOR_0, Get_ParTestAgentBase_TV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(3855745440u, BEHAVIAC_NEW CMemberArrayItemProperty< TNS::NE::NAT::eColor >("TV_LIST_ECOLOR_0[]", Set_ParTestAgentBase_TV_LIST_ECOLOR_0, Get_ParTestAgentBase_TV_LIST_ECOLOR_0));
			meta->RegisterMemberProperty(3466167234u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<signed char> >("TV_LIST_SBYTE_0", Set_ParTestAgentBase_TV_LIST_SBYTE_0, Get_ParTestAgentBase_TV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(2204970056u, BEHAVIAC_NEW CMemberArrayItemProperty< signed char >("TV_LIST_SBYTE_0[]", Set_ParTestAgentBase_TV_LIST_SBYTE_0, Get_ParTestAgentBase_TV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(1600661043u, BEHAVIAC_NEW CMemberProperty< signed char >("TV_SBYTE_0", Set_ParTestAgentBase_TV_SBYTE_0, Get_ParTestAgentBase_TV_SBYTE_0));
			meta->RegisterMemberProperty(1841109764u, BEHAVIAC_NEW CStaticMemberProperty< int >("STV_INT_0", Set_ParTestAgent_STV_INT_0, Get_ParTestAgent_STV_INT_0));
			meta->RegisterMemberProperty(197916387u, BEHAVIAC_NEW CStaticMemberProperty< TNS::ST::PER::WRK::kEmployee >("STV_KEMPLOYEE_0", Set_ParTestAgent_STV_KEMPLOYEE_0, Get_ParTestAgent_STV_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1272574615u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<int> >("STV_LIST_INT_0", Set_ParTestAgent_STV_LIST_INT_0, Get_ParTestAgent_STV_LIST_INT_0));
			meta->RegisterMemberProperty(359013138u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< int >("STV_LIST_INT_0[]", Set_ParTestAgent_STV_LIST_INT_0, Get_ParTestAgent_STV_LIST_INT_0));
			meta->RegisterMemberProperty(1924897476u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<TNS::ST::PER::WRK::kEmployee> >("STV_LIST_KEMPLOYEE_0", Set_ParTestAgent_STV_LIST_KEMPLOYEE_0, Get_ParTestAgent_STV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1061897758u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< TNS::ST::PER::WRK::kEmployee >("STV_LIST_KEMPLOYEE_0[]", Set_ParTestAgent_STV_LIST_KEMPLOYEE_0, Get_ParTestAgent_STV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1293576705u, BEHAVIAC_NEW CMemberProperty< int >("TV_INT_0", Set_ParTestAgent_TV_INT_0, Get_ParTestAgent_TV_INT_0));
			meta->RegisterMemberProperty(2788553297u, BEHAVIAC_NEW CMemberProperty< TNS::ST::PER::WRK::kEmployee >("TV_KEMPLOYEE_0", Set_ParTestAgent_TV_KEMPLOYEE_0, Get_ParTestAgent_TV_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1264342854u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<int> >("TV_LIST_INT_0", Set_ParTestAgent_TV_LIST_INT_0, Get_ParTestAgent_TV_LIST_INT_0));
			meta->RegisterMemberProperty(2763459330u, BEHAVIAC_NEW CMemberArrayItemProperty< int >("TV_LIST_INT_0[]", Set_ParTestAgent_TV_LIST_INT_0, Get_ParTestAgent_TV_LIST_INT_0));
			meta->RegisterMemberProperty(1712688287u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<TNS::ST::PER::WRK::kEmployee> >("TV_LIST_KEMPLOYEE_0", Set_ParTestAgent_TV_LIST_KEMPLOYEE_0, Get_ParTestAgent_TV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(244720705u, BEHAVIAC_NEW CMemberArrayItemProperty< TNS::ST::PER::WRK::kEmployee >("TV_LIST_KEMPLOYEE_0[]", Set_ParTestAgent_TV_LIST_KEMPLOYEE_0, Get_ParTestAgent_TV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(2082189039u, BEHAVIAC_NEW CMemberProperty< long >("TV_LONG_0", Set_ParTestAgent_TV_LONG_0, Get_ParTestAgent_TV_LONG_0));
			meta->RegisterMemberProperty(1232231841u, BEHAVIAC_NEW CMemberProperty< short >("TV_SHORT_0", Set_ParTestAgent_TV_SHORT_0, Get_ParTestAgent_TV_SHORT_0));
			meta->RegisterMemberProperty(537748306u, BEHAVIAC_NEW CMemberProperty< unsigned short >("TV_USHORT_0", Set_ParTestAgent_TV_USHORT_0, Get_ParTestAgent_TV_USHORT_0));
			meta->RegisterMemberProperty(2845805842u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::Agent* >("STV_AGENT_0", Set_EmployeeParTestAgent_STV_AGENT_0, Get_EmployeeParTestAgent_STV_AGENT_0));
			meta->RegisterMemberProperty(1858562011u, BEHAVIAC_NEW CStaticMemberProperty< float >("STV_F_0", Set_EmployeeParTestAgent_STV_F_0, Get_EmployeeParTestAgent_STV_F_0));
			meta->RegisterMemberProperty(2769286938u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<behaviac::Agent*> >("STV_LIST_AGENT_0", Set_EmployeeParTestAgent_STV_LIST_AGENT_0, Get_EmployeeParTestAgent_STV_LIST_AGENT_0));
			meta->RegisterMemberProperty(328665115u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< behaviac::Agent* >("STV_LIST_AGENT_0[]", Set_EmployeeParTestAgent_STV_LIST_AGENT_0, Get_EmployeeParTestAgent_STV_LIST_AGENT_0));
			meta->RegisterMemberProperty(2648216995u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<float> >("STV_LIST_F_0", Set_EmployeeParTestAgent_STV_LIST_F_0, Get_EmployeeParTestAgent_STV_LIST_F_0));
			meta->RegisterMemberProperty(2215715602u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< float >("STV_LIST_F_0[]", Set_EmployeeParTestAgent_STV_LIST_F_0, Get_EmployeeParTestAgent_STV_LIST_F_0));
			meta->RegisterMemberProperty(3870229397u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<behaviac::string> >("STV_LIST_STR_0", Set_EmployeeParTestAgent_STV_LIST_STR_0, Get_EmployeeParTestAgent_STV_LIST_STR_0));
			meta->RegisterMemberProperty(3991541356u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< behaviac::string >("STV_LIST_STR_0[]", Set_EmployeeParTestAgent_STV_LIST_STR_0, Get_EmployeeParTestAgent_STV_LIST_STR_0));
			meta->RegisterMemberProperty(3234589190u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::string >("STV_STR_0", Set_EmployeeParTestAgent_STV_STR_0, Get_EmployeeParTestAgent_STV_STR_0));
			meta->RegisterMemberProperty(2234467067u, BEHAVIAC_NEW CMemberProperty< behaviac::Agent* >("TV_AGENT_0", Set_EmployeeParTestAgent_TV_AGENT_0, Get_EmployeeParTestAgent_TV_AGENT_0));
			meta->RegisterMemberProperty(3517562322u, BEHAVIAC_NEW CMemberProperty< char* >("TV_CSZSTR_0", Set_EmployeeParTestAgent_TV_CSZSTR_0, Get_EmployeeParTestAgent_TV_CSZSTR_0));
			meta->RegisterMemberProperty(2418961396u, BEHAVIAC_NEW CMemberProperty< double >("TV_D_0", Set_EmployeeParTestAgent_TV_D_0, Get_EmployeeParTestAgent_TV_D_0));
			meta->RegisterMemberProperty(975676287u, BEHAVIAC_NEW CMemberProperty< float >("TV_F_0", Set_EmployeeParTestAgent_TV_F_0, Get_EmployeeParTestAgent_TV_F_0));
			meta->RegisterMemberProperty(350152458u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<behaviac::Agent*> >("TV_LIST_AGENT_0", Set_EmployeeParTestAgent_TV_LIST_AGENT_0, Get_EmployeeParTestAgent_TV_LIST_AGENT_0));
			meta->RegisterMemberProperty(3398503944u, BEHAVIAC_NEW CMemberArrayItemProperty< behaviac::Agent* >("TV_LIST_AGENT_0[]", Set_EmployeeParTestAgent_TV_LIST_AGENT_0, Get_EmployeeParTestAgent_TV_LIST_AGENT_0));
			meta->RegisterMemberProperty(3277708114u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<float> >("TV_LIST_F_0", Set_EmployeeParTestAgent_TV_LIST_F_0, Get_EmployeeParTestAgent_TV_LIST_F_0));
			meta->RegisterMemberProperty(2224326339u, BEHAVIAC_NEW CMemberArrayItemProperty< float >("TV_LIST_F_0[]", Set_EmployeeParTestAgent_TV_LIST_F_0, Get_EmployeeParTestAgent_TV_LIST_F_0));
			meta->RegisterMemberProperty(3861554756u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<behaviac::string> >("TV_LIST_STR_0", Set_EmployeeParTestAgent_TV_LIST_STR_0, Get_EmployeeParTestAgent_TV_LIST_STR_0));
			meta->RegisterMemberProperty(1547372156u, BEHAVIAC_NEW CMemberArrayItemProperty< behaviac::string >("TV_LIST_STR_0[]", Set_EmployeeParTestAgent_TV_LIST_STR_0, Get_EmployeeParTestAgent_TV_LIST_STR_0));
			meta->RegisterMemberProperty(2624529173u, BEHAVIAC_NEW CMemberProperty< long long >("TV_LL_0", Set_EmployeeParTestAgent_TV_LL_0, Get_EmployeeParTestAgent_TV_LL_0));
			meta->RegisterMemberProperty(3765213955u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("TV_STR_0", Set_EmployeeParTestAgent_TV_STR_0, Get_EmployeeParTestAgent_TV_STR_0));
			meta->RegisterMemberProperty(1728887002u, BEHAVIAC_NEW CMemberProperty< char* >("TV_SZSTR_0", Set_EmployeeParTestAgent_TV_SZSTR_0, Get_EmployeeParTestAgent_TV_SZSTR_0));
			meta->RegisterMemberProperty(447245470u, BEHAVIAC_NEW CMemberProperty< unsigned int >("TV_UINT_0", Set_EmployeeParTestAgent_TV_UINT_0, Get_EmployeeParTestAgent_TV_UINT_0));
			meta->RegisterMemberProperty(3596846321u, BEHAVIAC_NEW CMemberProperty< unsigned long long >("TV_ULL_0", Set_EmployeeParTestAgent_TV_ULL_0, Get_EmployeeParTestAgent_TV_ULL_0));
			meta->RegisterMemberProperty(2632905415u, BEHAVIAC_NEW CMemberProperty< unsigned long >("TV_ULONG_0", Set_EmployeeParTestAgent_TV_ULONG_0, Get_EmployeeParTestAgent_TV_ULONG_0));
			meta->RegisterCustomizedProperty(2630010392u, BEHAVIAC_NEW CCustomizedProperty< ParTestAgent* >(2630010392u, "C_Agent", "null"));
			meta->RegisterCustomizedProperty(1780706519u, BEHAVIAC_NEW CCustomizedProperty< UnityEngine::GameObject* >(1780706519u, "C_GameObject", "null"));
			meta->RegisterCustomizedProperty(1892901983u, BEHAVIAC_NEW CCustomizedProperty< ParTestAgent* >(1892901983u, "target", "null"));
			meta->RegisterMethod(2245666463u, BEHAVIAC_NEW CAgentMethod_1< bool, bool >(FunctionPointer_EmployeeParTestAgent_Func_BooleanIR));
			meta->RegisterMethod(3791888951u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<bool>, behaviac::vector<bool> >(FunctionPointer_EmployeeParTestAgent_Func_BooleanListIR));
			meta->RegisterMethod(1841337487u, BEHAVIAC_NEW CAgentMethod_1< unsigned char, unsigned char >(FunctionPointer_EmployeeParTestAgent_Func_ByteIR));
			meta->RegisterMethod(3252333806u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<unsigned char>, behaviac::vector<unsigned char> >(FunctionPointer_EmployeeParTestAgent_Func_ByteListIR));
			meta->RegisterMethod(1727216081u, BEHAVIAC_NEW CAgentMethod_1< char, char >(FunctionPointer_EmployeeParTestAgent_Func_CharIR));
			meta->RegisterMethod(1477551860u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<char>, behaviac::vector<char> >(FunctionPointer_EmployeeParTestAgent_Func_CharListIR));
			meta->RegisterMethod(2426660965u, BEHAVIAC_NEW CAgentMethod_1< TNS::NE::NAT::eColor, TNS::NE::NAT::eColor >(FunctionPointer_EmployeeParTestAgent_Func_eColorIR));
			meta->RegisterMethod(3714114176u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<TNS::NE::NAT::eColor>, behaviac::vector<TNS::NE::NAT::eColor> >(FunctionPointer_EmployeeParTestAgent_Func_eColorListIR));
			meta->RegisterMethod(509199861u, BEHAVIAC_NEW CAgentMethod_1< signed char, signed char >(FunctionPointer_EmployeeParTestAgent_Func_SByteIR));
			meta->RegisterMethod(4269893793u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<signed char>, behaviac::vector<signed char> >(FunctionPointer_EmployeeParTestAgent_Func_SByteListIR));
			meta->RegisterMethod(433418480u, BEHAVIAC_NEW CAgentStaticMethod_1< unsigned char, unsigned char >(FunctionPointer_EmployeeParTestAgent_Func_ByteSMF));
			meta->RegisterMethod(2500673454u, BEHAVIAC_NEW CAgentStaticMethod_1< char, char >(FunctionPointer_EmployeeParTestAgent_Func_CharSMF));
			meta->RegisterMethod(2925170749u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<char>, behaviac::vector<char> >(FunctionPointer_EmployeeParTestAgent_Func_CharListSMF));
			meta->RegisterMethod(2435897298u, BEHAVIAC_NEW CAgentStaticMethod_1< signed char, signed char >(FunctionPointer_EmployeeParTestAgent_Func_SByteSMF));
			meta->RegisterMethod(262183808u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<signed char>, behaviac::vector<signed char> >(FunctionPointer_EmployeeParTestAgent_Func_SByteListSMF));
			meta->RegisterMethod(4220685126u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanRef());
			meta->RegisterMethod(3515774986u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_BooleanListRef());
			meta->RegisterMethod(45294703u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteRef());
			meta->RegisterMethod(1221064402u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_ByteListRef());
			meta->RegisterMethod(2389404465u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharRef());
			meta->RegisterMethod(3040658594u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_CharListRef());
			meta->RegisterMethod(4207250143u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorRef());
			meta->RegisterMethod(3634257456u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_eColorListRef());
			meta->RegisterMethod(2320925517u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteRef());
			meta->RegisterMethod(348573471u, BEHAVIAC_NEW CMethod_ParTestAgentBase_Func_SByteListRef());
			meta->RegisterMethod(1487303319u, BEHAVIAC_NEW CAgentMethod_1< int, int >(FunctionPointer_EmployeeParTestAgent_Func_IntIR));
			meta->RegisterMethod(3597364904u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<int>, behaviac::vector<int> >(FunctionPointer_EmployeeParTestAgent_Func_IntListIR));
			meta->RegisterMethod(1409230127u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeIR());
			meta->RegisterMethod(1288141092u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<TNS::ST::PER::WRK::kEmployee>, behaviac::vector<TNS::ST::PER::WRK::kEmployee> >(FunctionPointer_EmployeeParTestAgent_Func_kEmployeeListIR));
			meta->RegisterMethod(1747536380u, BEHAVIAC_NEW CAgentMethod_1< long, long >(FunctionPointer_EmployeeParTestAgent_Func_LongIR));
			meta->RegisterMethod(3355346939u, BEHAVIAC_NEW CAgentMethod_1< short, short >(FunctionPointer_EmployeeParTestAgent_Func_ShortIR));
			meta->RegisterMethod(1006721363u, BEHAVIAC_NEW CAgentMethod_1< unsigned short, unsigned short >(FunctionPointer_EmployeeParTestAgent_Func_UShortIR));
			meta->RegisterMethod(84757482u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeSMF());
			meta->RegisterMethod(4056001315u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<TNS::ST::PER::WRK::kEmployee>, behaviac::vector<TNS::ST::PER::WRK::kEmployee> >(FunctionPointer_EmployeeParTestAgent_Func_kEmployeeListSMF));
			meta->RegisterMethod(2526379581u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_IntRef());
			meta->RegisterMethod(1132240641u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_IntListRef());
			meta->RegisterMethod(510336885u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeRef());
			meta->RegisterMethod(3936878524u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_kEmployeeListRef());
			meta->RegisterMethod(3418025268u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_LongRef());
			meta->RegisterMethod(1832323336u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_ShortRef());
			meta->RegisterMethod(903069175u, BEHAVIAC_NEW CMethod_ParTestAgent_Func_UShortRef());
			meta->RegisterMethod(195270817u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentIR());
			meta->RegisterMethod(1560584299u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<behaviac::Agent*>, behaviac::vector<behaviac::Agent*> >(FunctionPointer_EmployeeParTestAgent_Func_AgentListIR));
			meta->RegisterMethod(47681223u, BEHAVIAC_NEW CAgentMethod_1< char*, char* >(FunctionPointer_EmployeeParTestAgent_Func_CSzStringIR));
			meta->RegisterMethod(3627728538u, BEHAVIAC_NEW CAgentMethod_1< double, double >(FunctionPointer_EmployeeParTestAgent_Func_DoubleIR));
			meta->RegisterMethod(3461542282u, BEHAVIAC_NEW CAgentMethod_1< long long, long long& >(FunctionPointer_EmployeeParTestAgent_Func_LongLongIR));
			meta->RegisterMethod(2272152182u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_ParTestAgentBaseIR());
			meta->RegisterMethod(1915934982u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<ParTestAgentBase*>, behaviac::vector<ParTestAgentBase*> >(FunctionPointer_EmployeeParTestAgent_Func_ParTestAgentBaseListIR));
			meta->RegisterMethod(3823157538u, BEHAVIAC_NEW CAgentMethod_1< float, float >(FunctionPointer_EmployeeParTestAgent_Func_SingleIR));
			meta->RegisterMethod(4268213035u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<float>, behaviac::vector<float> >(FunctionPointer_EmployeeParTestAgent_Func_SingleListIR));
			meta->RegisterMethod(1323559417u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringIR());
			meta->RegisterMethod(3123078781u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<behaviac::string>, behaviac::vector<behaviac::string> >(FunctionPointer_EmployeeParTestAgent_Func_StringListIR));
			meta->RegisterMethod(831825780u, BEHAVIAC_NEW CAgentMethod_1< char*, char* >(FunctionPointer_EmployeeParTestAgent_Func_SzStringIR));
			meta->RegisterMethod(154570427u, BEHAVIAC_NEW CAgentMethod_1< unsigned int, unsigned int >(FunctionPointer_EmployeeParTestAgent_Func_UIntIR));
			meta->RegisterMethod(3722383617u, BEHAVIAC_NEW CAgentMethod_1< unsigned long, unsigned long >(FunctionPointer_EmployeeParTestAgent_Func_ULongIR));
			meta->RegisterMethod(506761253u, BEHAVIAC_NEW CAgentMethod_1< unsigned long long, unsigned long long& >(FunctionPointer_EmployeeParTestAgent_Func_ULongLongIR));
			meta->RegisterMethod(1957836262u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<behaviac::Agent*>, behaviac::vector<behaviac::Agent*> >(FunctionPointer_EmployeeParTestAgent_Func_AgentListSMF));
			meta->RegisterMethod(4246976610u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentSMF());
			meta->RegisterMethod(9683594u, BEHAVIAC_NEW CAgentStaticMethod_1< behaviac::vector<behaviac::string>, behaviac::vector<behaviac::string> >(FunctionPointer_EmployeeParTestAgent_Func_StringListSMF));
			meta->RegisterMethod(415514926u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringSMF());
			meta->RegisterMethod(723740419u, BEHAVIAC_NEW CAgentStaticMethod_1< unsigned long, unsigned long >(FunctionPointer_EmployeeParTestAgent_Func_ULongSMF));
			meta->RegisterMethod(1876189561u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentListRef());
			meta->RegisterMethod(3863342333u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_AgentRef());
			meta->RegisterMethod(2968214932u, BEHAVIAC_NEW CAgentMethodVoid_1<char*>(FunctionPointer_EmployeeParTestAgent_Func_CSzStringRef));
			meta->RegisterMethod(3616537604u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_DoubleRef());
			meta->RegisterMethod(35118030u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_LongLongRef());
			meta->RegisterMethod(2579047281u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_SingleListRef());
			meta->RegisterMethod(302915013u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_SingleRef());
			meta->RegisterMethod(469079573u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringListRef());
			meta->RegisterMethod(60954033u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_StringRef());
			meta->RegisterMethod(1491976835u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_SzStringRef());
			meta->RegisterMethod(593700544u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_UIntRef());
			meta->RegisterMethod(4277353950u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_ULongLongRef());
			meta->RegisterMethod(809841564u, BEHAVIAC_NEW CMethod_EmployeeParTestAgent_Func_ULongRef());
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_EmployeeParTestAgent_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// FSMAgentTest
			meta = BEHAVIAC_NEW AgentMeta(3125537989u);
			AgentMeta::GetAgentMetas()[4104664502u] = meta;
			meta->RegisterCustomizedProperty(177115358u, BEHAVIAC_NEW CCustomizedProperty< unsigned int >(177115358u, "ActiveCount", "0"));
			meta->RegisterCustomizedProperty(881465299u, BEHAVIAC_NEW CCustomizedProperty< int >(881465299u, "EnergyCount", "0"));
			meta->RegisterCustomizedProperty(1184325508u, BEHAVIAC_NEW CCustomizedProperty< long >(1184325508u, "ExitCount", "0"));
			meta->RegisterCustomizedProperty(3299892854u, BEHAVIAC_NEW CCustomizedProperty< int >(3299892854u, "FoodCount", "0"));
			meta->RegisterCustomizedProperty(1246269412u, BEHAVIAC_NEW CCustomizedProperty< int >(1246269412u, "InactiveCount", "0"));
			meta->RegisterMemberProperty(2330146330u, BEHAVIAC_NEW CMemberProperty< FSMAgentTest::EMessage >("Message", Set_FSMAgentTest_Message, Get_FSMAgentTest_Message));
			meta->RegisterCustomizedProperty(3020354788u, BEHAVIAC_NEW CCustomizedProperty< short >(3020354788u, "PauseCount", "0"));
			meta->RegisterMethod(2386955498u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_FSMAgentTest_active_update));
			meta->RegisterMethod(4202428535u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_FSMAgentTest_exit_update));
			meta->RegisterMethod(373260699u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_FSMAgentTest_inactive_update));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_FSMAgentTest_LogMessage));
			meta->RegisterMethod(3924795606u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_FSMAgentTest_pause_update));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// HTNAgentHouse
			meta = BEHAVIAC_NEW AgentMeta(544358402u);
			AgentMeta::GetAgentMetas()[932053231u] = meta;
			meta->RegisterCustomizedProperty(3012131995u, BEHAVIAC_NEW CCustomizedProperty< bool >(3012131995u, "Contract", "false"));
			meta->RegisterCustomizedProperty(2793604018u, BEHAVIAC_NEW CCustomizedProperty< bool >(2793604018u, "GoodCredit", "true"));
			meta->RegisterCustomizedProperty(3571637003u, BEHAVIAC_NEW CCustomizedProperty< bool >(3571637003u, "House", "false"));
			meta->RegisterCustomizedProperty(1186824470u, BEHAVIAC_NEW CCustomizedProperty< bool >(1186824470u, "HouseBuilt", "false"));
			meta->RegisterCustomizedProperty(1676779868u, BEHAVIAC_NEW CCustomizedProperty< bool >(1676779868u, "Land", "false"));
			meta->RegisterCustomizedProperty(4260042937u, BEHAVIAC_NEW CCustomizedProperty< int >(4260042937u, "Money", "0"));
			meta->RegisterCustomizedProperty(669368973u, BEHAVIAC_NEW CCustomizedProperty< bool >(669368973u, "Mortgage", "false"));
			meta->RegisterCustomizedProperty(3054969542u, BEHAVIAC_NEW CCustomizedProperty< bool >(3054969542u, "Permit", "false"));
			meta->RegisterMethod(2741301957u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_build_house) /* build_house */);
			meta->RegisterMethod(2918474439u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_BuildFoundation));
			meta->RegisterMethod(1670950443u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_BuildFrame));
			meta->RegisterMethod(204472681u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_BuildInterior));
			meta->RegisterMethod(79664549u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_BuildRoof));
			meta->RegisterMethod(1667405178u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_BuildWalls));
			meta->RegisterMethod(2688401031u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_BuyLand));
			meta->RegisterMethod(2327888713u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_construct) /* construct */);
			meta->RegisterMethod(981755373u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_CutLogs));
			meta->RegisterMethod(2635259512u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_GetFriend));
			meta->RegisterMethod(586278775u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_GetLoan));
			meta->RegisterMethod(2881918156u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_HireBuilder));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_HTNAgentHouse_LogMessage));
			meta->RegisterMethod(3744542564u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_ObtainPermit));
			meta->RegisterMethod(800517312u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_PayBuilder));
			meta->RegisterMethod(3594496238u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentHouse_root) /* root */);
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// HTNAgentTravel
			meta = BEHAVIAC_NEW AgentMeta(1696040059u);
			AgentMeta::GetAgentMetas()[374612103u] = meta;
			meta->RegisterMethod(4198137737u, BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_airport());
			meta->RegisterMethod(3264903300u, BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_airports());
			meta->RegisterMethod(2200694730u, BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_finish());
			meta->RegisterMethod(3773511650u, BEHAVIAC_NEW CMethod_HTNAgentTravel_exist_start());
			meta->RegisterMethod(3872336253u, BEHAVIAC_NEW CAgentMethodVoid_2<int, int>(FunctionPointer_HTNAgentTravel_fly));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_HTNAgentTravel_LogMessage));
			meta->RegisterMethod(2170933389u, BEHAVIAC_NEW CAgentMethod_2< bool, int, int >(FunctionPointer_HTNAgentTravel_long_distance));
			meta->RegisterMethod(1983317305u, BEHAVIAC_NEW CAgentMethodVoid_2<int, int>(FunctionPointer_HTNAgentTravel_ride_taxi));
			meta->RegisterMethod(3594496238u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_HTNAgentTravel_root) /* root */);
			meta->RegisterMethod(781174382u, BEHAVIAC_NEW CAgentMethod_2< bool, int, int >(FunctionPointer_HTNAgentTravel_short_distance));
			meta->RegisterMethod(3094303131u, BEHAVIAC_NEW CAgentMethodVoid_2<int, int>(FunctionPointer_HTNAgentTravel_travel) /* travel */);
			meta->RegisterMethod(2394147151u, BEHAVIAC_NEW CAgentMethodVoid_2<int, int>(FunctionPointer_HTNAgentTravel_travel_by_air) /* travel_by_air */);
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// ParTestRegNameAgent
			meta = BEHAVIAC_NEW AgentMeta(2266381546u);
			AgentMeta::GetAgentMetas()[1554681172u] = meta;
			meta->RegisterMemberProperty(197916387u, BEHAVIAC_NEW CStaticMemberProperty< TNS::ST::PER::WRK::kEmployee >("STV_KEMPLOYEE_0", Set_ParTestRegNameAgent_STV_KEMPLOYEE_0, Get_ParTestRegNameAgent_STV_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1924897476u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<TNS::ST::PER::WRK::kEmployee> >("STV_LIST_KEMPLOYEE_0", Set_ParTestRegNameAgent_STV_LIST_KEMPLOYEE_0, Get_ParTestRegNameAgent_STV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1061897758u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< TNS::ST::PER::WRK::kEmployee >("STV_LIST_KEMPLOYEE_0[]", Set_ParTestRegNameAgent_STV_LIST_KEMPLOYEE_0, Get_ParTestRegNameAgent_STV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(2135462866u, BEHAVIAC_NEW CStaticMemberProperty< behaviac::vector<signed char> >("STV_LIST_SBYTE_0", Set_ParTestRegNameAgent_STV_LIST_SBYTE_0, Get_ParTestRegNameAgent_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(1516972635u, BEHAVIAC_NEW CStaticMemberArrayItemProperty< signed char >("STV_LIST_SBYTE_0[]", Set_ParTestRegNameAgent_STV_LIST_SBYTE_0, Get_ParTestRegNameAgent_STV_LIST_SBYTE_0));
			meta->RegisterMemberProperty(2234467067u, BEHAVIAC_NEW CMemberProperty< behaviac::Agent* >("TV_AGENT_0", Set_ParTestRegNameAgent_TV_AGENT_0, Get_ParTestRegNameAgent_TV_AGENT_0));
			meta->RegisterMemberProperty(2045932444u, BEHAVIAC_NEW CMemberProperty< unsigned char >("TV_BYTE_0", Set_ParTestRegNameAgent_TV_BYTE_0, Get_ParTestRegNameAgent_TV_BYTE_0));
			meta->RegisterMemberProperty(1925308098u, BEHAVIAC_NEW CMemberProperty< char >("TV_CHAR_0", Set_ParTestRegNameAgent_TV_CHAR_0, Get_ParTestRegNameAgent_TV_CHAR_0));
			meta->RegisterMemberProperty(2788553297u, BEHAVIAC_NEW CMemberProperty< TNS::ST::PER::WRK::kEmployee >("TV_KEMPLOYEE_0", Set_ParTestRegNameAgent_TV_KEMPLOYEE_0, Get_ParTestRegNameAgent_TV_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1712688287u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<TNS::ST::PER::WRK::kEmployee> >("TV_LIST_KEMPLOYEE_0", Set_ParTestRegNameAgent_TV_LIST_KEMPLOYEE_0, Get_ParTestRegNameAgent_TV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(244720705u, BEHAVIAC_NEW CMemberArrayItemProperty< TNS::ST::PER::WRK::kEmployee >("TV_LIST_KEMPLOYEE_0[]", Set_ParTestRegNameAgent_TV_LIST_KEMPLOYEE_0, Get_ParTestRegNameAgent_TV_LIST_KEMPLOYEE_0));
			meta->RegisterMemberProperty(1600661043u, BEHAVIAC_NEW CMemberProperty< signed char >("TV_SBYTE_0", Set_ParTestRegNameAgent_TV_SBYTE_0, Get_ParTestRegNameAgent_TV_SBYTE_0));
			meta->RegisterMemberProperty(3765213955u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("TV_STR_0", Set_ParTestRegNameAgent_TV_STR_0, Get_ParTestRegNameAgent_TV_STR_0));
			meta->RegisterMethod(195270817u, BEHAVIAC_NEW CMethod_ParTestRegNameAgent_Func_AgentIR());
			meta->RegisterMethod(1841337487u, BEHAVIAC_NEW CAgentMethod_1< unsigned char, unsigned char >(FunctionPointer_ParTestRegNameAgent_Func_ByteIR));
			meta->RegisterMethod(1727216081u, BEHAVIAC_NEW CAgentMethod_1< char, char >(FunctionPointer_ParTestRegNameAgent_Func_CharIR));
			meta->RegisterMethod(1409230127u, BEHAVIAC_NEW CMethod_ParTestRegNameAgent_Func_kEmployeeIR());
			meta->RegisterMethod(1288141092u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<TNS::ST::PER::WRK::kEmployee>, behaviac::vector<TNS::ST::PER::WRK::kEmployee> >(FunctionPointer_ParTestRegNameAgent_Func_kEmployeeListIR));
			meta->RegisterMethod(509199861u, BEHAVIAC_NEW CAgentMethod_1< signed char, signed char >(FunctionPointer_ParTestRegNameAgent_Func_SByteIR));
			meta->RegisterMethod(4269893793u, BEHAVIAC_NEW CAgentMethod_1< behaviac::vector<signed char>, behaviac::vector<signed char> >(FunctionPointer_ParTestRegNameAgent_Func_SByteListIR));
			meta->RegisterMethod(1323559417u, BEHAVIAC_NEW CAgentMethod_1< behaviac::string, behaviac::string >(FunctionPointer_ParTestRegNameAgent_Func_StringIR));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_ParTestRegNameAgent_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// PreconEffectorAgent
			meta = BEHAVIAC_NEW AgentMeta(901328667u);
			AgentMeta::GetAgentMetas()[349144321u] = meta;
			meta->RegisterMemberProperty(2042007707u, BEHAVIAC_NEW CMemberProperty< int >("count_both", Set_PreconEffectorAgent_count_both, Get_PreconEffectorAgent_count_both));
			meta->RegisterMemberProperty(1051387458u, BEHAVIAC_NEW CMemberProperty< int >("count_failure", Set_PreconEffectorAgent_count_failure, Get_PreconEffectorAgent_count_failure));
			meta->RegisterMemberProperty(4159200536u, BEHAVIAC_NEW CMemberProperty< int >("count_success", Set_PreconEffectorAgent_count_success, Get_PreconEffectorAgent_count_success));
			meta->RegisterMemberProperty(2211163255u, BEHAVIAC_NEW CMemberProperty< int >("ret", Set_PreconEffectorAgent_ret, Get_PreconEffectorAgent_ret));
			meta->RegisterMethod(3671624611u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_PreconEffectorAgent_action));
			meta->RegisterMethod(2122404635u, BEHAVIAC_NEW CAgentMethod< int >(FunctionPointer_PreconEffectorAgent_fn_return));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_PreconEffectorAgent_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// PropertyReadonlyAgent
			meta = BEHAVIAC_NEW AgentMeta(2367862004u);
			AgentMeta::GetAgentMetas()[1348531588u] = meta;
			meta->RegisterCustomizedProperty(3849503314u, BEHAVIAC_NEW CCustomizedProperty< int >(3849503314u, "c_Int", "1"));
			meta->RegisterCustomizedProperty(3688495851u, BEHAVIAC_NEW CCustomizedProperty< int >(3688495851u, "c_IntReadonly", "10"));
			meta->RegisterStaticCustomizedProperty(450204216u, BEHAVIAC_NEW CCustomizedProperty< int >(450204216u, "c_ResultStatic", "0"));
			meta->RegisterMemberProperty(2855682855u, BEHAVIAC_NEW CMemberProperty< int >("MemberReadonly", Set_PropertyReadonlyAgent_MemberReadonly, Get_PropertyReadonlyAgent_MemberReadonly));
			meta->RegisterMemberProperty(1467218133u, BEHAVIAC_NEW CMemberProperty< int >("MemberReadonlyAs", Set_PropertyReadonlyAgent_MemberReadonlyAs, Get_PropertyReadonlyAgent_MemberReadonlyAs));
			meta->RegisterMemberProperty(4215875380u, BEHAVIAC_NEW CMemberProperty< int >("PropertyGetterOnly", Set_PropertyReadonlyAgent_PropertyGetterOnly, Get_PropertyReadonlyAgent_PropertyGetterOnly));
			meta->RegisterMemberProperty(537792238u, BEHAVIAC_NEW CMemberProperty< int >("PropertyGetterSetter", Set_PropertyReadonlyAgent_PropertyGetterSetter, Get_PropertyReadonlyAgent_PropertyGetterSetter));
			meta->RegisterMemberProperty(2682356734u, BEHAVIAC_NEW CStaticMemberProperty< float >("StaticPropertyGetterSetter", Set_PropertyReadonlyAgent_StaticPropertyGetterSetter, Get_PropertyReadonlyAgent_StaticPropertyGetterSetter));
			meta->RegisterMethod(537561990u, BEHAVIAC_NEW CMethod_PropertyReadonlyAgent_FnWithOutParam());
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_PropertyReadonlyAgent_LogMessage));
			meta->RegisterMethod(2969862106u, BEHAVIAC_NEW CAgentMethodVoid_1<int>(FunctionPointer_PropertyReadonlyAgent_PassInProperty));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// StaticAgent
			meta = BEHAVIAC_NEW AgentMeta(3998712942u);
			AgentMeta::GetAgentMetas()[444757655u] = meta;
			meta->RegisterMemberProperty(1875123083u, BEHAVIAC_NEW CStaticMemberProperty< int >("sInt", Set_StaticAgent_sInt, Get_StaticAgent_sInt));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_StaticAgent_LogMessage));
			meta->RegisterMethod(3102938317u, BEHAVIAC_NEW CAgentStaticMethodVoid(FunctionPointer_StaticAgent_sAction));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// TestNS::AgentArrayAccessTest
			meta = BEHAVIAC_NEW AgentMeta(3860100775u);
			AgentMeta::GetAgentMetas()[2362309288u] = meta;
			meta->RegisterCustomizedProperty(1209342235u, BEHAVIAC_NEW CCustomizedProperty< int >(1209342235u, "c_Count", "0"));
			meta->RegisterCustomizedProperty(1155710363u, BEHAVIAC_NEW CCustomizedProperty< double >(1155710363u, "c_doubleVal", "0.05"));
			meta->RegisterCustomizedProperty(3835017610u, BEHAVIAC_NEW CCustomizedProperty< behaviac::vector<double> >(3835017610u, "c_doubleVec2", "3:0.01|0.02|0.03"));
			meta->RegisterCustomizedProperty(4069501271u, BEHAVIAC_NEW CCustomizedArrayItemProperty< double >(3835017610u, "c_doubleVec2"));
			meta->RegisterCustomizedProperty(2212380943u, BEHAVIAC_NEW CCustomizedProperty< behaviac::vector<double> >(2212380943u, "c_douleVec", "3:0.01|0.02|0.03"));
			meta->RegisterCustomizedProperty(3986605474u, BEHAVIAC_NEW CCustomizedArrayItemProperty< double >(2212380943u, "c_douleVec"));
			meta->RegisterCustomizedProperty(3849503314u, BEHAVIAC_NEW CCustomizedProperty< int >(3849503314u, "c_Int", "0"));
			meta->RegisterCustomizedProperty(2521109666u, BEHAVIAC_NEW CCustomizedProperty< behaviac::vector<int> >(2521109666u, "c_ListInts", "5:10|20|30|40|50"));
			meta->RegisterCustomizedProperty(3979786214u, BEHAVIAC_NEW CCustomizedArrayItemProperty< int >(2521109666u, "c_ListInts"));
			meta->RegisterMemberProperty(2830384182u, BEHAVIAC_NEW CMemberProperty< int >("Int", Set_TestNS_AgentArrayAccessTest_Int, Get_TestNS_AgentArrayAccessTest_Int));
			meta->RegisterMemberProperty(1961688368u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<int> >("ListInts", Set_TestNS_AgentArrayAccessTest_ListInts, Get_TestNS_AgentArrayAccessTest_ListInts));
			meta->RegisterMemberProperty(2641401424u, BEHAVIAC_NEW CMemberArrayItemProperty< int >("ListInts[]", Set_TestNS_AgentArrayAccessTest_ListInts, Get_TestNS_AgentArrayAccessTest_ListInts));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_TestNS_AgentArrayAccessTest_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// Act
			meta = BEHAVIAC_NEW AgentMeta(4164412862u);
			AgentMeta::GetAgentMetas()[1708689290u] = meta;
			meta->RegisterMemberProperty(879668377u, BEHAVIAC_NEW CMemberProperty< bool >("Var_B_Loop", Set_Act_Var_B_Loop, Get_Act_Var_B_Loop));
			meta->RegisterMemberProperty(777627639u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<EnumTest> >("Var_List_EnumTest", Set_Act_Var_List_EnumTest, Get_Act_Var_List_EnumTest));

			// BSASN::SpatialCoord
			meta = BEHAVIAC_NEW AgentMeta(2373809916u);
			AgentMeta::GetAgentMetas()[523496196u] = meta;
			meta->RegisterMemberProperty(803492456u, BEHAVIAC_NEW CMemberProperty< float >("coordX", Set_BSASN_SpatialCoord_coordX, Get_BSASN_SpatialCoord_coordX));
			meta->RegisterMemberProperty(922706729u, BEHAVIAC_NEW CMemberProperty< float >("coordY", Set_BSASN_SpatialCoord_coordY, Get_BSASN_SpatialCoord_coordY));

			// BSASN::TransitPlan
			meta = BEHAVIAC_NEW AgentMeta(3437919186u);
			AgentMeta::GetAgentMetas()[2904160241u] = meta;
			meta->RegisterMemberProperty(2036675677u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("plan_ID", Set_BSASN_TransitPlan_plan_ID, Get_BSASN_TransitPlan_plan_ID));
			meta->RegisterMemberProperty(1944844085u, BEHAVIAC_NEW CMemberProperty< int >("plan_selection_precedence", Set_BSASN_TransitPlan_plan_selection_precedence, Get_BSASN_TransitPlan_plan_selection_precedence));
			meta->RegisterMemberProperty(1010032415u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<BSASN::SpatialCoord> >("transit_points", Set_BSASN_TransitPlan_transit_points, Get_BSASN_TransitPlan_transit_points));

			// TestNamespace::ClassAsValueType
			meta = BEHAVIAC_NEW AgentMeta(2014054411u);
			AgentMeta::GetAgentMetas()[3326707682u] = meta;
			meta->RegisterMemberProperty(784805480u, BEHAVIAC_NEW CMemberProperty< float >("x", Set_TestNamespace_ClassAsValueType_x, Get_TestNamespace_ClassAsValueType_x));
			meta->RegisterMemberProperty(937172777u, BEHAVIAC_NEW CMemberProperty< float >("y", Set_TestNamespace_ClassAsValueType_y, Get_TestNamespace_ClassAsValueType_y));

			// TestNamespace::Float2
			meta = BEHAVIAC_NEW AgentMeta(897181567u);
			AgentMeta::GetAgentMetas()[3170849958u] = meta;
			meta->RegisterMemberProperty(784805480u, BEHAVIAC_NEW CMemberProperty< float >("x", Set_TestNamespace_Float2_x, Get_TestNamespace_Float2_x));
			meta->RegisterMemberProperty(937172777u, BEHAVIAC_NEW CMemberProperty< float >("y", Set_TestNamespace_Float2_y, Get_TestNamespace_Float2_y));

			// TestNS::Float2
			meta = BEHAVIAC_NEW AgentMeta(2486493641u);
			AgentMeta::GetAgentMetas()[3840899829u] = meta;
			meta->RegisterMemberProperty(784805480u, BEHAVIAC_NEW CMemberProperty< float >("x", Set_TestNS_Float2_x, Get_TestNS_Float2_x));
			meta->RegisterMemberProperty(937172777u, BEHAVIAC_NEW CMemberProperty< float >("y", Set_TestNS_Float2_y, Get_TestNS_Float2_y));

			// TestNS::Node
			meta = BEHAVIAC_NEW AgentMeta(2638158808u);
			AgentMeta::GetAgentMetas()[2940513725u] = meta;
			meta->RegisterMemberProperty(3282915872u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("name", Set_TestNS_Node_name, Get_TestNS_Node_name));

			// TNS::ST::kCar
			meta = BEHAVIAC_NEW AgentMeta(4254401389u);
			AgentMeta::GetAgentMetas()[3621191481u] = meta;
			meta->RegisterMemberProperty(943419330u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("brand", Set_TNS_ST_kCar_brand, Get_TNS_ST_kCar_brand));
			meta->RegisterMemberProperty(2723301039u, BEHAVIAC_NEW CMemberProperty< int >("price", Set_TNS_ST_kCar_price, Get_TNS_ST_kCar_price));
			meta->RegisterMemberProperty(2217207913u, BEHAVIAC_NEW CMemberProperty< TNS::NE::NAT::eColor >("color", Set_TNS_ST_kCar_color, Get_TNS_ST_kCar_color));

			// TNS::ST::PER::WRK::kEmployee
			meta = BEHAVIAC_NEW AgentMeta(1914775611u);
			AgentMeta::GetAgentMetas()[1210997610u] = meta;
			meta->RegisterMemberProperty(2821134797u, BEHAVIAC_NEW CMemberProperty< int >("id", Set_TNS_ST_PER_WRK_kEmployee_id, Get_TNS_ST_PER_WRK_kEmployee_id));
			meta->RegisterMemberProperty(3282915872u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("name", Set_TNS_ST_PER_WRK_kEmployee_name, Get_TNS_ST_PER_WRK_kEmployee_name));
			meta->RegisterMemberProperty(3560167981u, BEHAVIAC_NEW CMemberProperty< char >("code", Set_TNS_ST_PER_WRK_kEmployee_code, Get_TNS_ST_PER_WRK_kEmployee_code));
			meta->RegisterMemberProperty(3309439252u, BEHAVIAC_NEW CMemberProperty< float >("weight", Set_TNS_ST_PER_WRK_kEmployee_weight, Get_TNS_ST_PER_WRK_kEmployee_weight));
			meta->RegisterMemberProperty(1658213077u, BEHAVIAC_NEW CMemberProperty< bool >("isMale", Set_TNS_ST_PER_WRK_kEmployee_isMale, Get_TNS_ST_PER_WRK_kEmployee_isMale));
			meta->RegisterMemberProperty(252757355u, BEHAVIAC_NEW CMemberProperty< TNS::NE::NAT::eColor >("skinColor", Set_TNS_ST_PER_WRK_kEmployee_skinColor, Get_TNS_ST_PER_WRK_kEmployee_skinColor));
			meta->RegisterMemberProperty(977114071u, BEHAVIAC_NEW CMemberProperty< TNS::ST::kCar >("car", Set_TNS_ST_PER_WRK_kEmployee_car, Get_TNS_ST_PER_WRK_kEmployee_car));
			meta->RegisterMemberProperty(3970102207u, BEHAVIAC_NEW CMemberProperty< behaviac::Agent* >("boss", Set_TNS_ST_PER_WRK_kEmployee_boss, Get_TNS_ST_PER_WRK_kEmployee_boss));

			// UnityEngine::GameObject
			meta = BEHAVIAC_NEW AgentMeta(2945205550u);
			AgentMeta::GetAgentMetas()[3863054874u] = meta;
			meta->RegisterMemberProperty(3282915872u, BEHAVIAC_NEW CMemberProperty< behaviac::string >("name", Set_UnityEngine_GameObject_name, Get_UnityEngine_GameObject_name));

			// UnityEngine::Vector3
			meta = BEHAVIAC_NEW AgentMeta(3184093255u);
			AgentMeta::GetAgentMetas()[1701462301u] = meta;
			meta->RegisterMemberProperty(784805480u, BEHAVIAC_NEW CMemberProperty< float >("x", Set_UnityEngine_Vector3_x, Get_UnityEngine_Vector3_x));
			meta->RegisterMemberProperty(937172777u, BEHAVIAC_NEW CMemberProperty< float >("y", Set_UnityEngine_Vector3_y, Get_UnityEngine_Vector3_y));
			meta->RegisterMemberProperty(485575914u, BEHAVIAC_NEW CMemberProperty< float >("z", Set_UnityEngine_Vector3_z, Get_UnityEngine_Vector3_z));

			// StructTest
			meta = BEHAVIAC_NEW AgentMeta(2864333320u);
			AgentMeta::GetAgentMetas()[2798931971u] = meta;
			meta->RegisterMemberProperty(3049752432u, BEHAVIAC_NEW CMemberProperty< bool >("a", Set_StructTest_a, Get_StructTest_a));

			AgentMeta::Register<behaviac::Agent>("behaviac::Agent");
			AgentMeta::Register<HTNAgentHouseBase>("HTNAgentHouseBase");
			AgentMeta::Register<ParTestAgentBase>("ParTestAgentBase");
			AgentMeta::Register<ParTestAgent>("ParTestAgent");
			AgentMeta::Register<AgentNodeTest>("AgentNodeTest");
			AgentMeta::Register<ChildNodeTest>("ChildNodeTest");
			AgentMeta::Register<ChildNodeTestSub>("ChildNodeTestSub");
			AgentMeta::Register<CustomPropertyAgent>("CustomPropertyAgent");
			AgentMeta::Register<EmployeeParTestAgent>("EmployeeParTestAgent");
			AgentMeta::Register<FSMAgentTest>("FSMAgentTest");
			AgentMeta::Register<HTNAgentHouse>("HTNAgentHouse");
			AgentMeta::Register<HTNAgentTravel>("HTNAgentTravel");
			AgentMeta::Register<ParTestRegNameAgent>("ParTestRegNameAgent");
			AgentMeta::Register<PreconEffectorAgent>("PreconEffectorAgent");
			AgentMeta::Register<PropertyReadonlyAgent>("PropertyReadonlyAgent");
			AgentMeta::Register<StaticAgent>("StaticAgent");
			AgentMeta::Register<TestNS::AgentArrayAccessTest>("TestNS::AgentArrayAccessTest");
			AgentMeta::Register<behaviac::EBTStatus>("behaviac::EBTStatus");
			AgentMeta::Register<EnumTest>("EnumTest");
			AgentMeta::Register<FSMAgentTest::EMessage>("FSMAgentTest::EMessage");
			AgentMeta::Register<TNS::NE::NAT::eColor>("TNS::NE::NAT::eColor");
			AgentMeta::Register<ETest>("ETest");
			AgentMeta::Register<Act>("Act");
			AgentMeta::Register<BSASN::SpatialCoord>("BSASN::SpatialCoord");
			AgentMeta::Register<BSASN::TransitPlan>("BSASN::TransitPlan");
			AgentMeta::Register<IList>("IList");
			AgentMeta::Register<System::Object>("System::Object");
			AgentMeta::Register<TestClassA>("TestClassA");
			AgentMeta::Register<TestNamespace::ClassAsValueType>("TestNamespace::ClassAsValueType");
			AgentMeta::Register<TestNamespace::Float2>("TestNamespace::Float2");
			AgentMeta::Register<TestNS::Float2>("TestNS::Float2");
			AgentMeta::Register<TestNS::Node>("TestNS::Node");
			AgentMeta::Register<TNS::ST::kCar>("TNS::ST::kCar");
			AgentMeta::Register<TNS::ST::PER::WRK::kEmployee>("TNS::ST::PER::WRK::kEmployee");
			AgentMeta::Register<UnityEngine::GameObject>("UnityEngine::GameObject");
			AgentMeta::Register<UnityEngine::Vector3>("UnityEngine::Vector3");
			AgentMeta::Register<StructTest>("StructTest");

			Agent::RegisterInstanceName<ParTestRegNameAgent>("ParTestRegNameAgent");
			Agent::RegisterInstanceName<StaticAgent>("StaticAgent");

			return true;
		}

		virtual bool unLoad()
		{
			AgentMeta::UnRegister<behaviac::Agent>("behaviac::Agent");
			AgentMeta::UnRegister<HTNAgentHouseBase>("HTNAgentHouseBase");
			AgentMeta::UnRegister<ParTestAgentBase>("ParTestAgentBase");
			AgentMeta::UnRegister<ParTestAgent>("ParTestAgent");
			AgentMeta::UnRegister<AgentNodeTest>("AgentNodeTest");
			AgentMeta::UnRegister<ChildNodeTest>("ChildNodeTest");
			AgentMeta::UnRegister<ChildNodeTestSub>("ChildNodeTestSub");
			AgentMeta::UnRegister<CustomPropertyAgent>("CustomPropertyAgent");
			AgentMeta::UnRegister<EmployeeParTestAgent>("EmployeeParTestAgent");
			AgentMeta::UnRegister<FSMAgentTest>("FSMAgentTest");
			AgentMeta::UnRegister<HTNAgentHouse>("HTNAgentHouse");
			AgentMeta::UnRegister<HTNAgentTravel>("HTNAgentTravel");
			AgentMeta::UnRegister<ParTestRegNameAgent>("ParTestRegNameAgent");
			AgentMeta::UnRegister<PreconEffectorAgent>("PreconEffectorAgent");
			AgentMeta::UnRegister<PropertyReadonlyAgent>("PropertyReadonlyAgent");
			AgentMeta::UnRegister<StaticAgent>("StaticAgent");
			AgentMeta::UnRegister<TestNS::AgentArrayAccessTest>("TestNS::AgentArrayAccessTest");
			AgentMeta::UnRegister<behaviac::EBTStatus>("behaviac::EBTStatus");
			AgentMeta::UnRegister<EnumTest>("EnumTest");
			AgentMeta::UnRegister<FSMAgentTest::EMessage>("FSMAgentTest::EMessage");
			AgentMeta::UnRegister<TNS::NE::NAT::eColor>("TNS::NE::NAT::eColor");
			AgentMeta::UnRegister<ETest>("ETest");
			AgentMeta::UnRegister<Act>("Act");
			AgentMeta::UnRegister<BSASN::SpatialCoord>("BSASN::SpatialCoord");
			AgentMeta::UnRegister<BSASN::TransitPlan>("BSASN::TransitPlan");
			AgentMeta::UnRegister<IList>("IList");
			AgentMeta::UnRegister<System::Object>("System::Object");
			AgentMeta::UnRegister<TestClassA>("TestClassA");
			AgentMeta::UnRegister<TestNamespace::ClassAsValueType>("TestNamespace::ClassAsValueType");
			AgentMeta::UnRegister<TestNamespace::Float2>("TestNamespace::Float2");
			AgentMeta::UnRegister<TestNS::Float2>("TestNS::Float2");
			AgentMeta::UnRegister<TestNS::Node>("TestNS::Node");
			AgentMeta::UnRegister<TNS::ST::kCar>("TNS::ST::kCar");
			AgentMeta::UnRegister<TNS::ST::PER::WRK::kEmployee>("TNS::ST::PER::WRK::kEmployee");
			AgentMeta::UnRegister<UnityEngine::GameObject>("UnityEngine::GameObject");
			AgentMeta::UnRegister<UnityEngine::Vector3>("UnityEngine::Vector3");
			AgentMeta::UnRegister<StructTest>("StructTest");

			Agent::UnRegisterInstanceName<ParTestRegNameAgent>("ParTestRegNameAgent");
			Agent::UnRegisterInstanceName<StaticAgent>("StaticAgent");

			return true;
		}
	};

	static BehaviorLoaderImplement _behaviorLoaderImplement_;

	static BehaviorLoaderImplement* _pBehaviorLoader_ = NULL;

	void InitBehaviorLoader()
	{
		_pBehaviorLoader_ = BEHAVIAC_NEW BehaviorLoaderImplement();
	}

	void DestroyBehaviorLoader()
	{
		if (_pBehaviorLoader_)
		{
			BEHAVIAC_DELETE _pBehaviorLoader_;
			_pBehaviorLoader_ = NULL;
		}
	}
}
