// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_MEMBER_VISITOR_H_
#define _BEHAVIAC_MEMBER_VISITOR_H_

#include "behaviac_agent_headers.h"

// Agent property and method handlers


struct METHOD_TYPE_HTNAgentHouseBase_ObtainPermit { };
template<> inline void HTNAgentHouseBase::_Execute_Method_<METHOD_TYPE_HTNAgentHouseBase_ObtainPermit>()
{
	this->HTNAgentHouseBase::ObtainPermit();
}


struct PROPERTY_TYPE_ParTestAgentBase_STV_BOOL_0 { };
template<> inline bool& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_STV_BOOL_0>()
{
	return ParTestAgentBase::STV_BOOL_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_STV_CHAR_0 { };
template<> inline char& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_STV_CHAR_0>()
{
	return ParTestAgentBase::STV_CHAR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_STV_ECOLOR_0 { };
template<> inline TNS::NE::NAT::eColor& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_STV_ECOLOR_0>()
{
	return ParTestAgentBase::STV_ECOLOR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_STV_LIST_BOOL_0 { };
template<> inline behaviac::vector<bool>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_STV_LIST_BOOL_0>()
{
	return ParTestAgentBase::STV_LIST_BOOL_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_STV_LIST_CHAR_0 { };
template<> inline behaviac::vector<char>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_STV_LIST_CHAR_0>()
{
	return ParTestAgentBase::STV_LIST_CHAR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_STV_LIST_ECOLOR_0 { };
template<> inline behaviac::vector<TNS::NE::NAT::eColor>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_STV_LIST_ECOLOR_0>()
{
	return ParTestAgentBase::STV_LIST_ECOLOR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_STV_LIST_SBYTE_0 { };
template<> inline behaviac::vector<signed char>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_STV_LIST_SBYTE_0>()
{
	return ParTestAgentBase::STV_LIST_SBYTE_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_BOOL_0 { };
template<> inline bool& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_BOOL_0>()
{
	return this->TV_BOOL_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_BYTE_0 { };
template<> inline unsigned char& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_BYTE_0>()
{
	return this->TV_BYTE_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_CHAR_0 { };
template<> inline char& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_CHAR_0>()
{
	return this->TV_CHAR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_ECOLOR_0 { };
template<> inline TNS::NE::NAT::eColor& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_ECOLOR_0>()
{
	return this->TV_ECOLOR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_LIST_BOOL_0 { };
template<> inline behaviac::vector<bool>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_LIST_BOOL_0>()
{
	return this->TV_LIST_BOOL_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_LIST_BYTE_0 { };
template<> inline behaviac::vector<unsigned char>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_LIST_BYTE_0>()
{
	return this->TV_LIST_BYTE_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_LIST_CHAR_0 { };
template<> inline behaviac::vector<char>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_LIST_CHAR_0>()
{
	return this->TV_LIST_CHAR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_LIST_ECOLOR_0 { };
template<> inline behaviac::vector<TNS::NE::NAT::eColor>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_LIST_ECOLOR_0>()
{
	return this->TV_LIST_ECOLOR_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_LIST_SBYTE_0 { };
template<> inline behaviac::vector<signed char>& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_LIST_SBYTE_0>()
{
	return this->TV_LIST_SBYTE_0;
}

struct PROPERTY_TYPE_ParTestAgentBase_TV_SBYTE_0 { };
template<> inline signed char& ParTestAgentBase::_Get_Property_<PROPERTY_TYPE_ParTestAgentBase_TV_SBYTE_0>()
{
	return this->TV_SBYTE_0;
}

struct METHOD_TYPE_ParTestAgentBase_Func_BooleanIR { };
template<> inline bool ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_BooleanIR>(bool p0)
{
	return this->ParTestAgentBase::Func_BooleanIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_BooleanListIR { };
template<> inline behaviac::vector<bool> ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_BooleanListIR>(behaviac::vector<bool> p0)
{
	return this->ParTestAgentBase::Func_BooleanListIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_ByteIR { };
template<> inline unsigned char ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_ByteIR>(unsigned char p0)
{
	return this->ParTestAgentBase::Func_ByteIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_ByteListIR { };
template<> inline behaviac::vector<unsigned char> ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_ByteListIR>(behaviac::vector<unsigned char> p0)
{
	return this->ParTestAgentBase::Func_ByteListIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_CharIR { };
template<> inline char ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharIR>(char p0)
{
	return this->ParTestAgentBase::Func_CharIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_CharListIR { };
template<> inline behaviac::vector<char> ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharListIR>(behaviac::vector<char> p0)
{
	return this->ParTestAgentBase::Func_CharListIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_eColorIR { };
template<> inline TNS::NE::NAT::eColor ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_eColorIR>(TNS::NE::NAT::eColor p0)
{
	return this->ParTestAgentBase::Func_eColorIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_eColorListIR { };
template<> inline behaviac::vector<TNS::NE::NAT::eColor> ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_eColorListIR>(behaviac::vector<TNS::NE::NAT::eColor> p0)
{
	return this->ParTestAgentBase::Func_eColorListIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_SByteIR { };
template<> inline signed char ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteIR>(signed char p0)
{
	return this->ParTestAgentBase::Func_SByteIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_SByteListIR { };
template<> inline behaviac::vector<signed char> ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteListIR>(behaviac::vector<signed char> p0)
{
	return this->ParTestAgentBase::Func_SByteListIR(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_ByteSMF { };
template<> inline unsigned char ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_ByteSMF>(unsigned char p0)
{
	return this->ParTestAgentBase::Func_ByteSMF(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_CharSMF { };
template<> inline char ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharSMF>(char p0)
{
	return this->ParTestAgentBase::Func_CharSMF(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_CharListSMF { };
template<> inline behaviac::vector<char> ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharListSMF>(behaviac::vector<char> p0)
{
	return this->ParTestAgentBase::Func_CharListSMF(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_SByteSMF { };
template<> inline signed char ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteSMF>(signed char p0)
{
	return this->ParTestAgentBase::Func_SByteSMF(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_SByteListSMF { };
template<> inline behaviac::vector<signed char> ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteListSMF>(behaviac::vector<signed char> p0)
{
	return this->ParTestAgentBase::Func_SByteListSMF(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_BooleanRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_BooleanRef>(bool& p0)
{
	this->ParTestAgentBase::Func_BooleanRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_BooleanListRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_BooleanListRef>(behaviac::vector<bool>& p0)
{
	this->ParTestAgentBase::Func_BooleanListRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_ByteRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_ByteRef>(unsigned char& p0)
{
	this->ParTestAgentBase::Func_ByteRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_ByteListRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_ByteListRef>(behaviac::vector<unsigned char>& p0)
{
	this->ParTestAgentBase::Func_ByteListRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_CharRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharRef>(char& p0)
{
	this->ParTestAgentBase::Func_CharRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_CharListRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_CharListRef>(behaviac::vector<char>& p0)
{
	this->ParTestAgentBase::Func_CharListRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_eColorRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_eColorRef>(TNS::NE::NAT::eColor& p0)
{
	this->ParTestAgentBase::Func_eColorRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_eColorListRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_eColorListRef>(behaviac::vector<TNS::NE::NAT::eColor>& p0)
{
	this->ParTestAgentBase::Func_eColorListRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_SByteRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteRef>(signed char& p0)
{
	this->ParTestAgentBase::Func_SByteRef(p0);
}

struct METHOD_TYPE_ParTestAgentBase_Func_SByteListRef { };
template<> inline void ParTestAgentBase::_Execute_Method_<METHOD_TYPE_ParTestAgentBase_Func_SByteListRef>(behaviac::vector<signed char>& p0)
{
	this->ParTestAgentBase::Func_SByteListRef(p0);
}


struct PROPERTY_TYPE_ParTestAgent_STV_INT_0 { };
template<> inline int& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_STV_INT_0>()
{
	return ParTestAgent::STV_INT_0;
}

struct PROPERTY_TYPE_ParTestAgent_STV_KEMPLOYEE_0 { };
template<> inline TNS::ST::PER::WRK::kEmployee& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_STV_KEMPLOYEE_0>()
{
	return ParTestAgent::STV_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestAgent_STV_LIST_INT_0 { };
template<> inline behaviac::vector<int>& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_STV_LIST_INT_0>()
{
	return ParTestAgent::STV_LIST_INT_0;
}

struct PROPERTY_TYPE_ParTestAgent_STV_LIST_KEMPLOYEE_0 { };
template<> inline behaviac::vector<TNS::ST::PER::WRK::kEmployee>& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_STV_LIST_KEMPLOYEE_0>()
{
	return ParTestAgent::STV_LIST_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestAgent_TV_INT_0 { };
template<> inline int& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_TV_INT_0>()
{
	return this->TV_INT_0;
}

struct PROPERTY_TYPE_ParTestAgent_TV_KEMPLOYEE_0 { };
template<> inline TNS::ST::PER::WRK::kEmployee& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_TV_KEMPLOYEE_0>()
{
	return this->TV_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestAgent_TV_LIST_INT_0 { };
template<> inline behaviac::vector<int>& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_TV_LIST_INT_0>()
{
	return this->TV_LIST_INT_0;
}

struct PROPERTY_TYPE_ParTestAgent_TV_LIST_KEMPLOYEE_0 { };
template<> inline behaviac::vector<TNS::ST::PER::WRK::kEmployee>& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_TV_LIST_KEMPLOYEE_0>()
{
	return this->TV_LIST_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestAgent_TV_LONG_0 { };
template<> inline long& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_TV_LONG_0>()
{
	return this->TV_LONG_0;
}

struct PROPERTY_TYPE_ParTestAgent_TV_SHORT_0 { };
template<> inline short& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_TV_SHORT_0>()
{
	return this->TV_SHORT_0;
}

struct PROPERTY_TYPE_ParTestAgent_TV_USHORT_0 { };
template<> inline unsigned short& ParTestAgent::_Get_Property_<PROPERTY_TYPE_ParTestAgent_TV_USHORT_0>()
{
	return this->TV_USHORT_0;
}

struct METHOD_TYPE_ParTestAgent_Func_IntIR { };
template<> inline int ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_IntIR>(int p0)
{
	return this->ParTestAgent::Func_IntIR(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_IntListIR { };
template<> inline behaviac::vector<int> ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_IntListIR>(behaviac::vector<int> p0)
{
	return this->ParTestAgent::Func_IntListIR(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_kEmployeeIR { };
template<> inline TNS::ST::PER::WRK::kEmployee ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeIR>(TNS::ST::PER::WRK::kEmployee p0)
{
	return this->ParTestAgent::Func_kEmployeeIR(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_kEmployeeListIR { };
template<> inline behaviac::vector<TNS::ST::PER::WRK::kEmployee> ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeListIR>(behaviac::vector<TNS::ST::PER::WRK::kEmployee> p0)
{
	return this->ParTestAgent::Func_kEmployeeListIR(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_LongIR { };
template<> inline long ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_LongIR>(long p0)
{
	return this->ParTestAgent::Func_LongIR(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_ShortIR { };
template<> inline short ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_ShortIR>(short p0)
{
	return this->ParTestAgent::Func_ShortIR(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_UShortIR { };
template<> inline unsigned short ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_UShortIR>(unsigned short p0)
{
	return this->ParTestAgent::Func_UShortIR(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_kEmployeeSMF { };
template<> inline TNS::ST::PER::WRK::kEmployee ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeSMF>(TNS::ST::PER::WRK::kEmployee p0)
{
	return this->ParTestAgent::Func_kEmployeeSMF(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_kEmployeeListSMF { };
template<> inline behaviac::vector<TNS::ST::PER::WRK::kEmployee> ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeListSMF>(behaviac::vector<TNS::ST::PER::WRK::kEmployee> p0)
{
	return this->ParTestAgent::Func_kEmployeeListSMF(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_IntRef { };
template<> inline void ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_IntRef>(int& p0)
{
	this->ParTestAgent::Func_IntRef(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_IntListRef { };
template<> inline void ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_IntListRef>(behaviac::vector<int>& p0)
{
	this->ParTestAgent::Func_IntListRef(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_kEmployeeRef { };
template<> inline void ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeRef>(TNS::ST::PER::WRK::kEmployee& p0)
{
	this->ParTestAgent::Func_kEmployeeRef(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_kEmployeeListRef { };
template<> inline void ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_kEmployeeListRef>(behaviac::vector<TNS::ST::PER::WRK::kEmployee>& p0)
{
	this->ParTestAgent::Func_kEmployeeListRef(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_LongRef { };
template<> inline void ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_LongRef>(long& p0)
{
	this->ParTestAgent::Func_LongRef(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_ShortRef { };
template<> inline void ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_ShortRef>(short& p0)
{
	this->ParTestAgent::Func_ShortRef(p0);
}

struct METHOD_TYPE_ParTestAgent_Func_UShortRef { };
template<> inline void ParTestAgent::_Execute_Method_<METHOD_TYPE_ParTestAgent_Func_UShortRef>(unsigned short& p0)
{
	this->ParTestAgent::Func_UShortRef(p0);
}


struct PROPERTY_TYPE_AgentNodeTest_par_child { };
template<> inline ChildNodeTest*& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_par_child>()
{
	return this->par_child;
}

struct PROPERTY_TYPE_AgentNodeTest_testColor { };
template<> inline EnumTest& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_testColor>()
{
	return this->testColor;
}

struct PROPERTY_TYPE_AgentNodeTest_testVar_0 { };
template<> inline int& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_testVar_0>()
{
	return this->testVar_0;
}

struct PROPERTY_TYPE_AgentNodeTest_testVar_1 { };
template<> inline int& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_testVar_1>()
{
	return this->testVar_1;
}

struct PROPERTY_TYPE_AgentNodeTest_testVar_2 { };
template<> inline float& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_testVar_2>()
{
	return this->testVar_2;
}

struct PROPERTY_TYPE_AgentNodeTest_testVar_3 { };
template<> inline float& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_testVar_3>()
{
	return this->testVar_3;
}

struct PROPERTY_TYPE_AgentNodeTest_testVar_Act { };
template<> inline Act& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_testVar_Act>()
{
	return this->testVar_Act;
}

struct PROPERTY_TYPE_AgentNodeTest_testVar_str_0 { };
template<> inline behaviac::string& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_testVar_str_0>()
{
	return this->testVar_str_0;
}

struct PROPERTY_TYPE_AgentNodeTest_waiting_timeout_interval { };
template<> inline int& AgentNodeTest::_Get_Property_<PROPERTY_TYPE_AgentNodeTest_waiting_timeout_interval>()
{
	return this->waiting_timeout_interval;
}

struct METHOD_TYPE_AgentNodeTest_CanSeeEnemy { };
template<> inline bool AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_CanSeeEnemy>()
{
	return this->AgentNodeTest::CanSeeEnemy();
}

struct METHOD_TYPE_AgentNodeTest_createExtendedNode { };
template<> inline TestNS::Node* AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_createExtendedNode>()
{
	return this->AgentNodeTest::createExtendedNode();
}

struct METHOD_TYPE_AgentNodeTest_createGameObject { };
template<> inline UnityEngine::GameObject* AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_createGameObject>()
{
	return this->AgentNodeTest::createGameObject();
}

struct METHOD_TYPE_AgentNodeTest_enter_action_0 { };
template<> inline bool AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_enter_action_0>()
{
	return this->AgentNodeTest::enter_action_0();
}

struct METHOD_TYPE_AgentNodeTest_enter_action_1 { };
template<> inline bool AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_enter_action_1>(float p0)
{
	return this->AgentNodeTest::enter_action_1(p0);
}

struct METHOD_TYPE_AgentNodeTest_enter_action_2 { };
template<> inline bool AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_enter_action_2>(int p0, behaviac::string p1)
{
	return this->AgentNodeTest::enter_action_2(p0, p1);
}

struct METHOD_TYPE_AgentNodeTest_exit_action_0 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_exit_action_0>()
{
	this->AgentNodeTest::exit_action_0();
}

struct METHOD_TYPE_AgentNodeTest_exit_action_1 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_exit_action_1>(float p0)
{
	this->AgentNodeTest::exit_action_1(p0);
}

struct METHOD_TYPE_AgentNodeTest_exit_action_2 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_exit_action_2>(int p0, behaviac::string p1)
{
	this->AgentNodeTest::exit_action_2(p0, p1);
}

struct METHOD_TYPE_AgentNodeTest_getConstExtendedStruct { };
template<> inline const TestNS::Float2& AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_getConstExtendedStruct>()
{
	return this->AgentNodeTest::getConstExtendedStruct();
}

struct METHOD_TYPE_AgentNodeTest_getConstOne { };
template<> inline int AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_getConstOne>()
{
	return this->AgentNodeTest::getConstOne();
}

struct METHOD_TYPE_AgentNodeTest_getConstThousand { };
template<> inline int AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_getConstThousand>(int p0, int p1)
{
	return this->AgentNodeTest::getConstThousand(p0, p1);
}

struct METHOD_TYPE_AgentNodeTest_getExtendedStruct { };
template<> inline TestNS::Float2& AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_getExtendedStruct>()
{
	return this->AgentNodeTest::getExtendedStruct();
}

struct METHOD_TYPE_AgentNodeTest_GetRefTree { };
template<> inline const char* AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_GetRefTree>()
{
	return this->AgentNodeTest::GetRefTree();
}

struct METHOD_TYPE_AgentNodeTest_initChildAgent { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_initChildAgent>()
{
	this->AgentNodeTest::initChildAgent();
}

struct METHOD_TYPE_AgentNodeTest_initChildAgentTest { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_initChildAgentTest>()
{
	this->AgentNodeTest::initChildAgentTest();
}

struct METHOD_TYPE_AgentNodeTest_IsTargetValid { };
template<> inline bool AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_IsTargetValid>()
{
	return this->AgentNodeTest::IsTargetValid();
}

struct METHOD_TYPE_AgentNodeTest_Move { };
template<> inline behaviac::EBTStatus AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_Move>()
{
	return this->AgentNodeTest::Move();
}

struct METHOD_TYPE_AgentNodeTest_MoveToTarget { };
template<> inline behaviac::EBTStatus AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_MoveToTarget>()
{
	return this->AgentNodeTest::MoveToTarget();
}

struct METHOD_TYPE_AgentNodeTest_return_status { };
template<> inline behaviac::EBTStatus AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_return_status>(TestNS::Float2& p0)
{
	return this->AgentNodeTest::return_status(p0);
}

struct METHOD_TYPE_AgentNodeTest_SelectTarget { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_SelectTarget>()
{
	this->AgentNodeTest::SelectTarget();
}

struct METHOD_TYPE_AgentNodeTest_setEventVarAgent { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setEventVarAgent>(AgentNodeTest* p0)
{
	this->AgentNodeTest::setEventVarAgent(p0);
}

struct METHOD_TYPE_AgentNodeTest_setEventVarBool { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setEventVarBool>(bool p0)
{
	this->AgentNodeTest::setEventVarBool(p0);
}

struct METHOD_TYPE_AgentNodeTest_setEventVarFloat { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setEventVarFloat>(float p0)
{
	this->AgentNodeTest::setEventVarFloat(p0);
}

struct METHOD_TYPE_AgentNodeTest_setEventVarInt { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setEventVarInt>(int p0)
{
	this->AgentNodeTest::setEventVarInt(p0);
}

struct METHOD_TYPE_AgentNodeTest_setTestVar_0 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setTestVar_0>(int p0)
{
	this->AgentNodeTest::setTestVar_0(p0);
}

struct METHOD_TYPE_AgentNodeTest_setTestVar_0_2 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setTestVar_0_2>(int p0, float p1)
{
	this->AgentNodeTest::setTestVar_0_2(p0, p1);
}

struct METHOD_TYPE_AgentNodeTest_setTestVar_1 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setTestVar_1>(int p0)
{
	this->AgentNodeTest::setTestVar_1(p0);
}

struct METHOD_TYPE_AgentNodeTest_setTestVar_2 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setTestVar_2>(float p0)
{
	this->AgentNodeTest::setTestVar_2(p0);
}

struct METHOD_TYPE_AgentNodeTest_setTestVar_3 { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setTestVar_3>(float p0)
{
	this->AgentNodeTest::setTestVar_3(p0);
}

struct METHOD_TYPE_AgentNodeTest_setTestVar_R { };
template<> inline float AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_setTestVar_R>()
{
	return this->AgentNodeTest::setTestVar_R();
}

struct METHOD_TYPE_AgentNodeTest_Stop { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_Stop>()
{
	this->AgentNodeTest::Stop();
}

struct METHOD_TYPE_AgentNodeTest_switchRef { };
template<> inline behaviac::EBTStatus AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_switchRef>(behaviac::string& p0)
{
	return this->AgentNodeTest::switchRef(p0);
}

struct METHOD_TYPE_AgentNodeTest_testExtendedRefType { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_testExtendedRefType>(TestNS::Node* p0)
{
	this->AgentNodeTest::testExtendedRefType(p0);
}

struct METHOD_TYPE_AgentNodeTest_testExtendedStruct { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_testExtendedStruct>(TestNS::Float2& p0)
{
	this->AgentNodeTest::testExtendedStruct(p0);
}

struct METHOD_TYPE_AgentNodeTest_TestFunC { };
template<> inline TestClassA* AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_TestFunC>()
{
	return this->AgentNodeTest::TestFunC();
}

struct METHOD_TYPE_AgentNodeTest_TestFuncD { };
template<> inline behaviac::EBTStatus AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_TestFuncD>(TestClassA* p0)
{
	return this->AgentNodeTest::TestFuncD(p0);
}

struct METHOD_TYPE_AgentNodeTest_testGameObject { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_testGameObject>(UnityEngine::GameObject* p0)
{
	this->AgentNodeTest::testGameObject(p0);
}

struct METHOD_TYPE_AgentNodeTest_testString { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_testString>(behaviac::string p0)
{
	this->AgentNodeTest::testString(p0);
}

struct METHOD_TYPE_AgentNodeTest_testVectorStruct { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_testVectorStruct>(behaviac::vector<TestNS::Float2>& p0)
{
	this->AgentNodeTest::testVectorStruct(p0);
}

struct METHOD_TYPE_AgentNodeTest_transitPlanTactics { };
template<> inline void AgentNodeTest::_Execute_Method_<METHOD_TYPE_AgentNodeTest_transitPlanTactics>(BSASN::TransitPlan p0, EnumTest p1, behaviac::string& p2)
{
	this->AgentNodeTest::transitPlanTactics(p0, p1, p2);
}


struct METHOD_TYPE_ChildNodeTest_GetConstDoubleValue { };
template<> inline double ChildNodeTest::_Execute_Method_<METHOD_TYPE_ChildNodeTest_GetConstDoubleValue>()
{
	return this->ChildNodeTest::GetConstDoubleValue();
}

struct METHOD_TYPE_ChildNodeTest_GetConstFloatValue { };
template<> inline float ChildNodeTest::_Execute_Method_<METHOD_TYPE_ChildNodeTest_GetConstFloatValue>()
{
	return this->ChildNodeTest::GetConstFloatValue();
}


struct PROPERTY_TYPE_ChildNodeTestSub_IntValue { };
template<> inline int& ChildNodeTestSub::_Get_Property_<PROPERTY_TYPE_ChildNodeTestSub_IntValue>()
{
	return this->IntValue;
}

struct METHOD_TYPE_ChildNodeTestSub_GetConstFloatValueSub { };
template<> inline float ChildNodeTestSub::_Execute_Method_<METHOD_TYPE_ChildNodeTestSub_GetConstFloatValueSub>()
{
	return this->ChildNodeTestSub::GetConstFloatValueSub();
}


struct PROPERTY_TYPE_CustomPropertyAgent_BoolMemberReadonly { };
template<> inline bool& CustomPropertyAgent::_Get_Property_<PROPERTY_TYPE_CustomPropertyAgent_BoolMemberReadonly>()
{
	return this->BoolMemberReadonly;
}

struct PROPERTY_TYPE_CustomPropertyAgent_FloatPropertyReadonly { };
template<> inline float& CustomPropertyAgent::_Get_Property_<PROPERTY_TYPE_CustomPropertyAgent_FloatPropertyReadonly>()
{
	return this->FloatPropertyReadonly;
}

struct PROPERTY_TYPE_CustomPropertyAgent_IntMemberConst { };
template<> inline int& CustomPropertyAgent::_Get_Property_<PROPERTY_TYPE_CustomPropertyAgent_IntMemberConst>()
{
	return CustomPropertyAgent::IntMemberConst;
}

struct PROPERTY_TYPE_CustomPropertyAgent_IntProperty { };
template<> inline int& CustomPropertyAgent::_Get_Property_<PROPERTY_TYPE_CustomPropertyAgent_IntProperty>()
{
	return this->IntProperty;
}

struct PROPERTY_TYPE_CustomPropertyAgent_Location { };
template<> inline UnityEngine::Vector3& CustomPropertyAgent::_Get_Property_<PROPERTY_TYPE_CustomPropertyAgent_Location>()
{
	return this->Location;
}

struct PROPERTY_TYPE_CustomPropertyAgent_StringMemberReadonly { };
template<> inline behaviac::string& CustomPropertyAgent::_Get_Property_<PROPERTY_TYPE_CustomPropertyAgent_StringMemberReadonly>()
{
	return this->StringMemberReadonly;
}

struct METHOD_TYPE_CustomPropertyAgent_FnWithOutParam { };
template<> inline void CustomPropertyAgent::_Execute_Method_<METHOD_TYPE_CustomPropertyAgent_FnWithOutParam>(int& p0)
{
	this->CustomPropertyAgent::FnWithOutParam(p0);
}

struct METHOD_TYPE_CustomPropertyAgent_TestFn1 { };
template<> inline void CustomPropertyAgent::_Execute_Method_<METHOD_TYPE_CustomPropertyAgent_TestFn1>(TestNamespace::Float2& p0)
{
	this->CustomPropertyAgent::TestFn1(p0);
}

struct METHOD_TYPE_CustomPropertyAgent_TestFn2 { };
template<> inline void CustomPropertyAgent::_Execute_Method_<METHOD_TYPE_CustomPropertyAgent_TestFn2>(TestNamespace::ClassAsValueType* p0)
{
	this->CustomPropertyAgent::TestFn2(p0);
}


struct PROPERTY_TYPE_EmployeeParTestAgent_STV_AGENT_0 { };
template<> inline behaviac::Agent*& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_STV_AGENT_0>()
{
	return EmployeeParTestAgent::STV_AGENT_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_STV_F_0 { };
template<> inline float& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_STV_F_0>()
{
	return EmployeeParTestAgent::STV_F_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_STV_LIST_AGENT_0 { };
template<> inline behaviac::vector<behaviac::Agent*>& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_STV_LIST_AGENT_0>()
{
	return EmployeeParTestAgent::STV_LIST_AGENT_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_STV_LIST_F_0 { };
template<> inline behaviac::vector<float>& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_STV_LIST_F_0>()
{
	return EmployeeParTestAgent::STV_LIST_F_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_STV_LIST_STR_0 { };
template<> inline behaviac::vector<behaviac::string>& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_STV_LIST_STR_0>()
{
	return EmployeeParTestAgent::STV_LIST_STR_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_STV_STR_0 { };
template<> inline behaviac::string& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_STV_STR_0>()
{
	return EmployeeParTestAgent::STV_STR_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_AGENT_0 { };
template<> inline behaviac::Agent*& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_AGENT_0>()
{
	return this->TV_AGENT_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_CSZSTR_0 { };
template<> inline char*& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_CSZSTR_0>()
{
	return (char*&)this->TV_CSZSTR_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_D_0 { };
template<> inline double& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_D_0>()
{
	return this->TV_D_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_F_0 { };
template<> inline float& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_F_0>()
{
	return this->TV_F_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_LIST_AGENT_0 { };
template<> inline behaviac::vector<behaviac::Agent*>& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_LIST_AGENT_0>()
{
	return this->TV_LIST_AGENT_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_LIST_F_0 { };
template<> inline behaviac::vector<float>& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_LIST_F_0>()
{
	return this->TV_LIST_F_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_LIST_STR_0 { };
template<> inline behaviac::vector<behaviac::string>& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_LIST_STR_0>()
{
	return this->TV_LIST_STR_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_LL_0 { };
template<> inline long long& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_LL_0>()
{
	return this->TV_LL_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_STR_0 { };
template<> inline behaviac::string& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_STR_0>()
{
	return this->TV_STR_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_SZSTR_0 { };
template<> inline char*& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_SZSTR_0>()
{
	return (char*&)this->TV_SZSTR_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_UINT_0 { };
template<> inline unsigned int& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_UINT_0>()
{
	return this->TV_UINT_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_ULL_0 { };
template<> inline unsigned long long& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_ULL_0>()
{
	return this->TV_ULL_0;
}

struct PROPERTY_TYPE_EmployeeParTestAgent_TV_ULONG_0 { };
template<> inline unsigned long& EmployeeParTestAgent::_Get_Property_<PROPERTY_TYPE_EmployeeParTestAgent_TV_ULONG_0>()
{
	return this->TV_ULONG_0;
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_AgentIR { };
template<> inline behaviac::Agent* EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentIR>(behaviac::Agent* p0)
{
	return this->EmployeeParTestAgent::Func_AgentIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_AgentListIR { };
template<> inline behaviac::vector<behaviac::Agent*> EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentListIR>(behaviac::vector<behaviac::Agent*> p0)
{
	return this->EmployeeParTestAgent::Func_AgentListIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_CSzStringIR { };
template<> inline const char* EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_CSzStringIR>(char* p0)
{
	return this->EmployeeParTestAgent::Func_CSzStringIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_DoubleIR { };
template<> inline double EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_DoubleIR>(double p0)
{
	return this->EmployeeParTestAgent::Func_DoubleIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_LongLongIR { };
template<> inline long long EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_LongLongIR>(long long p0)
{
	return this->EmployeeParTestAgent::Func_LongLongIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_ParTestAgentBaseIR { };
template<> inline ParTestAgentBase* EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ParTestAgentBaseIR>(ParTestAgentBase* p0)
{
	return this->EmployeeParTestAgent::Func_ParTestAgentBaseIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_ParTestAgentBaseListIR { };
template<> inline behaviac::vector<ParTestAgentBase*> EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ParTestAgentBaseListIR>(behaviac::vector<ParTestAgentBase*> p0)
{
	return this->EmployeeParTestAgent::Func_ParTestAgentBaseListIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_SingleIR { };
template<> inline float EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SingleIR>(float p0)
{
	return this->EmployeeParTestAgent::Func_SingleIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_SingleListIR { };
template<> inline behaviac::vector<float> EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SingleListIR>(behaviac::vector<float> p0)
{
	return this->EmployeeParTestAgent::Func_SingleListIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_StringIR { };
template<> inline behaviac::string EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringIR>(behaviac::string& p0)
{
	return this->EmployeeParTestAgent::Func_StringIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_StringListIR { };
template<> inline behaviac::vector<behaviac::string> EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringListIR>(behaviac::vector<behaviac::string> p0)
{
	return this->EmployeeParTestAgent::Func_StringListIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_SzStringIR { };
template<> inline char* EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SzStringIR>(char* p0)
{
	return this->EmployeeParTestAgent::Func_SzStringIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_UIntIR { };
template<> inline unsigned int EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_UIntIR>(unsigned int p0)
{
	return this->EmployeeParTestAgent::Func_UIntIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_ULongIR { };
template<> inline unsigned long EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ULongIR>(unsigned long p0)
{
	return this->EmployeeParTestAgent::Func_ULongIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_ULongLongIR { };
template<> inline unsigned long long EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ULongLongIR>(unsigned long long p0)
{
	return this->EmployeeParTestAgent::Func_ULongLongIR(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_AgentListSMF { };
template<> inline behaviac::vector<behaviac::Agent*> EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentListSMF>(behaviac::vector<behaviac::Agent*> p0)
{
	return this->EmployeeParTestAgent::Func_AgentListSMF(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_AgentSMF { };
template<> inline behaviac::Agent* EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentSMF>(behaviac::Agent* p0)
{
	return this->EmployeeParTestAgent::Func_AgentSMF(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_StringListSMF { };
template<> inline behaviac::vector<behaviac::string> EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringListSMF>(behaviac::vector<behaviac::string> p0)
{
	return this->EmployeeParTestAgent::Func_StringListSMF(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_StringSMF { };
template<> inline behaviac::string EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringSMF>(behaviac::string& p0)
{
	return this->EmployeeParTestAgent::Func_StringSMF(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_ULongSMF { };
template<> inline unsigned long EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ULongSMF>(unsigned long p0)
{
	return this->EmployeeParTestAgent::Func_ULongSMF(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_AgentListRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentListRef>(behaviac::vector<behaviac::Agent*>& p0)
{
	this->EmployeeParTestAgent::Func_AgentListRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_AgentRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_AgentRef>(behaviac::Agent*& p0)
{
	this->EmployeeParTestAgent::Func_AgentRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_CSzStringRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_CSzStringRef>(char* p0)
{
	this->EmployeeParTestAgent::Func_CSzStringRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_DoubleRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_DoubleRef>(double& p0)
{
	this->EmployeeParTestAgent::Func_DoubleRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_LongLongRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_LongLongRef>(long long& p0)
{
	this->EmployeeParTestAgent::Func_LongLongRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_SingleListRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SingleListRef>(behaviac::vector<float>& p0)
{
	this->EmployeeParTestAgent::Func_SingleListRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_SingleRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SingleRef>(float& p0)
{
	this->EmployeeParTestAgent::Func_SingleRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_StringListRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringListRef>(behaviac::vector<behaviac::string>& p0)
{
	this->EmployeeParTestAgent::Func_StringListRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_StringRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_StringRef>(behaviac::string& p0)
{
	this->EmployeeParTestAgent::Func_StringRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_SzStringRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_SzStringRef>(char*& p0)
{
	this->EmployeeParTestAgent::Func_SzStringRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_UIntRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_UIntRef>(unsigned int& p0)
{
	this->EmployeeParTestAgent::Func_UIntRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_ULongLongRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ULongLongRef>(unsigned long long& p0)
{
	this->EmployeeParTestAgent::Func_ULongLongRef(p0);
}

struct METHOD_TYPE_EmployeeParTestAgent_Func_ULongRef { };
template<> inline void EmployeeParTestAgent::_Execute_Method_<METHOD_TYPE_EmployeeParTestAgent_Func_ULongRef>(unsigned long& p0)
{
	this->EmployeeParTestAgent::Func_ULongRef(p0);
}


struct PROPERTY_TYPE_FSMAgentTest_Message { };
template<> inline FSMAgentTest::EMessage& FSMAgentTest::_Get_Property_<PROPERTY_TYPE_FSMAgentTest_Message>()
{
	return this->Message;
}

struct METHOD_TYPE_FSMAgentTest_active_update { };
template<> inline void FSMAgentTest::_Execute_Method_<METHOD_TYPE_FSMAgentTest_active_update>()
{
	this->FSMAgentTest::active_update();
}

struct METHOD_TYPE_FSMAgentTest_exit_update { };
template<> inline void FSMAgentTest::_Execute_Method_<METHOD_TYPE_FSMAgentTest_exit_update>()
{
	this->FSMAgentTest::exit_update();
}

struct METHOD_TYPE_FSMAgentTest_inactive_update { };
template<> inline void FSMAgentTest::_Execute_Method_<METHOD_TYPE_FSMAgentTest_inactive_update>()
{
	this->FSMAgentTest::inactive_update();
}

struct METHOD_TYPE_FSMAgentTest_pause_update { };
template<> inline void FSMAgentTest::_Execute_Method_<METHOD_TYPE_FSMAgentTest_pause_update>()
{
	this->FSMAgentTest::pause_update();
}


struct METHOD_TYPE_HTNAgentHouse_BuildFoundation { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_BuildFoundation>()
{
	this->HTNAgentHouse::BuildFoundation();
}

struct METHOD_TYPE_HTNAgentHouse_BuildFrame { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_BuildFrame>()
{
	this->HTNAgentHouse::BuildFrame();
}

struct METHOD_TYPE_HTNAgentHouse_BuildInterior { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_BuildInterior>()
{
	this->HTNAgentHouse::BuildInterior();
}

struct METHOD_TYPE_HTNAgentHouse_BuildRoof { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_BuildRoof>()
{
	this->HTNAgentHouse::BuildRoof();
}

struct METHOD_TYPE_HTNAgentHouse_BuildWalls { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_BuildWalls>()
{
	this->HTNAgentHouse::BuildWalls();
}

struct METHOD_TYPE_HTNAgentHouse_BuyLand { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_BuyLand>()
{
	this->HTNAgentHouse::BuyLand();
}

struct METHOD_TYPE_HTNAgentHouse_CutLogs { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_CutLogs>()
{
	this->HTNAgentHouse::CutLogs();
}

struct METHOD_TYPE_HTNAgentHouse_GetFriend { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_GetFriend>()
{
	this->HTNAgentHouse::GetFriend();
}

struct METHOD_TYPE_HTNAgentHouse_GetLoan { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_GetLoan>()
{
	this->HTNAgentHouse::GetLoan();
}

struct METHOD_TYPE_HTNAgentHouse_HireBuilder { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_HireBuilder>()
{
	this->HTNAgentHouse::HireBuilder();
}

struct METHOD_TYPE_HTNAgentHouse_PayBuilder { };
template<> inline void HTNAgentHouse::_Execute_Method_<METHOD_TYPE_HTNAgentHouse_PayBuilder>()
{
	this->HTNAgentHouse::PayBuilder();
}


struct METHOD_TYPE_HTNAgentTravel_exist_airport { };
template<> inline bool HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_airport>(int p0, int& p1)
{
	return this->HTNAgentTravel::exist_airport(p0, p1);
}

struct METHOD_TYPE_HTNAgentTravel_exist_airports { };
template<> inline bool HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_airports>(int p0, behaviac::vector<int>& p1)
{
	return this->HTNAgentTravel::exist_airports(p0, p1);
}

struct METHOD_TYPE_HTNAgentTravel_exist_finish { };
template<> inline bool HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_finish>(int& p0)
{
	return this->HTNAgentTravel::exist_finish(p0);
}

struct METHOD_TYPE_HTNAgentTravel_exist_start { };
template<> inline bool HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_exist_start>(int& p0)
{
	return this->HTNAgentTravel::exist_start(p0);
}

struct METHOD_TYPE_HTNAgentTravel_fly { };
template<> inline void HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_fly>(int p0, int p1)
{
	this->HTNAgentTravel::fly(p0, p1);
}

struct METHOD_TYPE_HTNAgentTravel_long_distance { };
template<> inline bool HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_long_distance>(int p0, int p1)
{
	return this->HTNAgentTravel::long_distance(p0, p1);
}

struct METHOD_TYPE_HTNAgentTravel_ride_taxi { };
template<> inline void HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_ride_taxi>(int p0, int p1)
{
	this->HTNAgentTravel::ride_taxi(p0, p1);
}

struct METHOD_TYPE_HTNAgentTravel_short_distance { };
template<> inline bool HTNAgentTravel::_Execute_Method_<METHOD_TYPE_HTNAgentTravel_short_distance>(int p0, int p1)
{
	return this->HTNAgentTravel::short_distance(p0, p1);
}


struct PROPERTY_TYPE_ParTestRegNameAgent_STV_KEMPLOYEE_0 { };
template<> inline TNS::ST::PER::WRK::kEmployee& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_STV_KEMPLOYEE_0>()
{
	return ParTestRegNameAgent::STV_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_STV_LIST_KEMPLOYEE_0 { };
template<> inline behaviac::vector<TNS::ST::PER::WRK::kEmployee>& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_STV_LIST_KEMPLOYEE_0>()
{
	return ParTestRegNameAgent::STV_LIST_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_STV_LIST_SBYTE_0 { };
template<> inline behaviac::vector<signed char>& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_STV_LIST_SBYTE_0>()
{
	return ParTestRegNameAgent::STV_LIST_SBYTE_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_TV_AGENT_0 { };
template<> inline behaviac::Agent*& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_TV_AGENT_0>()
{
	return this->TV_AGENT_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_TV_BYTE_0 { };
template<> inline unsigned char& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_TV_BYTE_0>()
{
	return this->TV_BYTE_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_TV_CHAR_0 { };
template<> inline char& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_TV_CHAR_0>()
{
	return this->TV_CHAR_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_TV_KEMPLOYEE_0 { };
template<> inline TNS::ST::PER::WRK::kEmployee& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_TV_KEMPLOYEE_0>()
{
	return this->TV_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_TV_LIST_KEMPLOYEE_0 { };
template<> inline behaviac::vector<TNS::ST::PER::WRK::kEmployee>& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_TV_LIST_KEMPLOYEE_0>()
{
	return this->TV_LIST_KEMPLOYEE_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_TV_SBYTE_0 { };
template<> inline signed char& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_TV_SBYTE_0>()
{
	return this->TV_SBYTE_0;
}

struct PROPERTY_TYPE_ParTestRegNameAgent_TV_STR_0 { };
template<> inline behaviac::string& ParTestRegNameAgent::_Get_Property_<PROPERTY_TYPE_ParTestRegNameAgent_TV_STR_0>()
{
	return this->TV_STR_0;
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_AgentIR { };
template<> inline behaviac::Agent* ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_AgentIR>(behaviac::Agent* p0)
{
	return this->ParTestRegNameAgent::Func_AgentIR(p0);
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_ByteIR { };
template<> inline unsigned char ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_ByteIR>(unsigned char p0)
{
	return this->ParTestRegNameAgent::Func_ByteIR(p0);
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_CharIR { };
template<> inline char ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_CharIR>(char p0)
{
	return this->ParTestRegNameAgent::Func_CharIR(p0);
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_kEmployeeIR { };
template<> inline TNS::ST::PER::WRK::kEmployee ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_kEmployeeIR>(TNS::ST::PER::WRK::kEmployee p0)
{
	return this->ParTestRegNameAgent::Func_kEmployeeIR(p0);
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_kEmployeeListIR { };
template<> inline behaviac::vector<TNS::ST::PER::WRK::kEmployee> ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_kEmployeeListIR>(behaviac::vector<TNS::ST::PER::WRK::kEmployee> p0)
{
	return this->ParTestRegNameAgent::Func_kEmployeeListIR(p0);
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_SByteIR { };
template<> inline signed char ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_SByteIR>(signed char p0)
{
	return this->ParTestRegNameAgent::Func_SByteIR(p0);
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_SByteListIR { };
template<> inline behaviac::vector<signed char> ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_SByteListIR>(behaviac::vector<signed char> p0)
{
	return this->ParTestRegNameAgent::Func_SByteListIR(p0);
}

struct METHOD_TYPE_ParTestRegNameAgent_Func_StringIR { };
template<> inline behaviac::string ParTestRegNameAgent::_Execute_Method_<METHOD_TYPE_ParTestRegNameAgent_Func_StringIR>(behaviac::string p0)
{
	return this->ParTestRegNameAgent::Func_StringIR(p0);
}


struct PROPERTY_TYPE_PreconEffectorAgent_count_both { };
template<> inline int& PreconEffectorAgent::_Get_Property_<PROPERTY_TYPE_PreconEffectorAgent_count_both>()
{
	return this->count_both;
}

struct PROPERTY_TYPE_PreconEffectorAgent_count_failure { };
template<> inline int& PreconEffectorAgent::_Get_Property_<PROPERTY_TYPE_PreconEffectorAgent_count_failure>()
{
	return this->count_failure;
}

struct PROPERTY_TYPE_PreconEffectorAgent_count_success { };
template<> inline int& PreconEffectorAgent::_Get_Property_<PROPERTY_TYPE_PreconEffectorAgent_count_success>()
{
	return this->count_success;
}

struct PROPERTY_TYPE_PreconEffectorAgent_ret { };
template<> inline int& PreconEffectorAgent::_Get_Property_<PROPERTY_TYPE_PreconEffectorAgent_ret>()
{
	return this->ret;
}

struct METHOD_TYPE_PreconEffectorAgent_action { };
template<> inline void PreconEffectorAgent::_Execute_Method_<METHOD_TYPE_PreconEffectorAgent_action>()
{
	this->PreconEffectorAgent::action();
}

struct METHOD_TYPE_PreconEffectorAgent_fn_return { };
template<> inline int PreconEffectorAgent::_Execute_Method_<METHOD_TYPE_PreconEffectorAgent_fn_return>()
{
	return this->PreconEffectorAgent::fn_return();
}


struct PROPERTY_TYPE_PropertyReadonlyAgent_MemberReadonly { };
template<> inline int& PropertyReadonlyAgent::_Get_Property_<PROPERTY_TYPE_PropertyReadonlyAgent_MemberReadonly>()
{
	return (int&)this->MemberReadonly;
}

struct PROPERTY_TYPE_PropertyReadonlyAgent_MemberReadonlyAs { };
template<> inline int& PropertyReadonlyAgent::_Get_Property_<PROPERTY_TYPE_PropertyReadonlyAgent_MemberReadonlyAs>()
{
	return (int&)this->MemberReadonlyAs;
}

struct PROPERTY_TYPE_PropertyReadonlyAgent_PropertyGetterOnly { };
template<> inline int& PropertyReadonlyAgent::_Get_Property_<PROPERTY_TYPE_PropertyReadonlyAgent_PropertyGetterOnly>()
{
	return this->PropertyGetterOnly;
}

struct PROPERTY_TYPE_PropertyReadonlyAgent_PropertyGetterSetter { };
template<> inline int& PropertyReadonlyAgent::_Get_Property_<PROPERTY_TYPE_PropertyReadonlyAgent_PropertyGetterSetter>()
{
	return this->PropertyGetterSetter;
}

struct PROPERTY_TYPE_PropertyReadonlyAgent_StaticPropertyGetterSetter { };
template<> inline float& PropertyReadonlyAgent::_Get_Property_<PROPERTY_TYPE_PropertyReadonlyAgent_StaticPropertyGetterSetter>()
{
	return PropertyReadonlyAgent::StaticPropertyGetterSetter;
}

struct METHOD_TYPE_PropertyReadonlyAgent_FnWithOutParam { };
template<> inline void PropertyReadonlyAgent::_Execute_Method_<METHOD_TYPE_PropertyReadonlyAgent_FnWithOutParam>(int& p0)
{
	this->PropertyReadonlyAgent::FnWithOutParam(p0);
}

struct METHOD_TYPE_PropertyReadonlyAgent_PassInProperty { };
template<> inline void PropertyReadonlyAgent::_Execute_Method_<METHOD_TYPE_PropertyReadonlyAgent_PassInProperty>(int p0)
{
	this->PropertyReadonlyAgent::PassInProperty(p0);
}


struct PROPERTY_TYPE_StaticAgent_sInt { };
template<> inline int& StaticAgent::_Get_Property_<PROPERTY_TYPE_StaticAgent_sInt>()
{
	return StaticAgent::sInt;
}

struct METHOD_TYPE_StaticAgent_sAction { };
template<> inline void StaticAgent::_Execute_Method_<METHOD_TYPE_StaticAgent_sAction>()
{
	this->StaticAgent::sAction();
}


namespace TestNS
{
	struct PROPERTY_TYPE_TestNS_AgentArrayAccessTest_Int { };
	template<> inline int& AgentArrayAccessTest::_Get_Property_<PROPERTY_TYPE_TestNS_AgentArrayAccessTest_Int>()
	{
		return this->Int;
	}

	struct PROPERTY_TYPE_TestNS_AgentArrayAccessTest_ListInts { };
	template<> inline behaviac::vector<int>& AgentArrayAccessTest::_Get_Property_<PROPERTY_TYPE_TestNS_AgentArrayAccessTest_ListInts>()
	{
		return this->ListInts;
	}

}

#endif // _BEHAVIAC_MEMBER_VISITOR_H_
