<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: par_test\property_as_left_value.xml-->
<behavior name="par_test/property_as_left_value" agenttype="EmployeeParTestAgent" version="5">
  <pars>
    <par name="par2_double_0" type="double" value="5.7" />
    <par name="par2_single_0" type="float" value="98.2" />
    <par name="par2_single_list_0" type="vector&lt;float&gt;" value="2:5.1|6.2" />
    <par name="par2_string_0" type="string" value="origin" />
    <par name="par2_string_list_0" type="vector&lt;string&gt;" value="4:&quot;string0&quot;|&quot;string1&quot;|&quot;string2&quot;|&quot;string3&quot;" />
    <par name="par2_uint_0" type="uint" value="9" />
    <par name="par2_ulong_0" type="ulong" value="300" />
    <par name="par1_short_0" type="short" value="78" />
    <par name="par1_int_0" type="int" value="-3" />
    <par name="par1_int_list_0" type="vector&lt;int&gt;" value="3:9999|12345|0" />
    <par name="par1_long_0" type="long" value="1500" />
    <par name="par1_kemployee_list_0" type="vector&lt;TNS::ST::PER::WRK::kEmployee&gt;" value="1:{id=9;name=&quot;John&quot;;code=q;weight=110;isMale=true;skinColor=GREEN;car={brand=&quot;Lexus&quot;;price=93840;color=BLUE;};boss=null;}" />
    <par name="par1_ushort_0" type="ushort" value="2001" />
    <par name="par0_boolean_0" type="bool" value="true" />
    <par name="par0_boolean_list_0" type="vector&lt;bool&gt;" value="2:false|true" />
    <par name="par0_ecolor_0" type="TNS::NE::NAT::eColor" value="YELLOW" />
    <par name="par0_ecolor_list_0" type="vector&lt;TNS::NE::NAT::eColor&gt;" value="2:RED|GREEN" />
    <par name="par2_agent_0" type="behaviac::Agent" value="null" />
    <par name="par2_agent_list_0" type="vector&lt;behaviac::Agent&gt;" value="2:null|null" />
    <par name="par0_char_0" type="char" value="A" />
    <par name="par1_kemployee_0" type="TNS::ST::PER::WRK::kEmployee" value="{id=83;name=&quot;Tom&quot;;code=A;weight=97.3;isMale=false;skinColor=RED;car={brand=&quot;Alpha&quot;;price=5700;color=WHITE;};boss=null;}" />
    <par name="par0_byte_0" type="ubyte" value="197" />
    <par name="par0_sbyte_0" type="sbyte" value="-60" />
    <par name="par0_char_list_0" type="vector&lt;char&gt;" value="4:d|j|F|A" />
    <par name="par0_sbyte_list_0" type="vector&lt;sbyte&gt;" value="3:127|-128|0" />
    <par name="par0_byte_list_0" type="vector&lt;ubyte&gt;" value="3:167|23|152" />
  </pars>
  <node class="Sequence" id="13">
    <node class="Sequence" id="1">
      <node class="Assignment" id="0">
        <property CastRight="false" />
        <property Opl="behaviac::Agent Self.EmployeeParTestAgent::TV_AGENT_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_AgentIR(behaviac::Agent Self.EmployeeParTestAgent::par2_agent_0)" />
      </node>
      <node class="Assignment" id="15">
        <property CastRight="false" />
        <property Opl="vector&lt;behaviac::Agent&gt; Self.EmployeeParTestAgent::TV_LIST_AGENT_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_AgentListIR(vector&lt;behaviac::Agent&gt; Self.EmployeeParTestAgent::par2_agent_list_0)" />
      </node>
      <node class="Assignment" id="2">
        <property CastRight="false" />
        <property Opl="double Self.EmployeeParTestAgent::TV_D_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_DoubleIR(double Self.EmployeeParTestAgent::par2_double_0)" />
      </node>
      <node class="Assignment" id="3">
        <property CastRight="false" />
        <property Opl="float Self.EmployeeParTestAgent::TV_F_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_SingleIR(float Self.EmployeeParTestAgent::par2_single_0)" />
      </node>
      <node class="Assignment" id="4">
        <property CastRight="false" />
        <property Opl="vector&lt;float&gt; Self.EmployeeParTestAgent::TV_LIST_F_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_SingleListIR(vector&lt;float&gt; Self.EmployeeParTestAgent::par2_single_list_0)" />
      </node>
      <node class="Assignment" id="5">
        <property CastRight="false" />
        <property Opl="string Self.EmployeeParTestAgent::TV_STR_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_StringIR(string Self.EmployeeParTestAgent::par2_string_0)" />
      </node>
      <node class="Assignment" id="6">
        <property CastRight="false" />
        <property Opl="vector&lt;string&gt; Self.EmployeeParTestAgent::TV_LIST_STR_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_StringListIR(vector&lt;string&gt; Self.EmployeeParTestAgent::par2_string_list_0)" />
      </node>
      <node class="Assignment" id="7">
        <property CastRight="false" />
        <property Opl="uint Self.EmployeeParTestAgent::TV_UINT_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_UIntIR(uint Self.EmployeeParTestAgent::par2_uint_0)" />
      </node>
      <node class="Assignment" id="8">
        <property CastRight="false" />
        <property Opl="ulong Self.EmployeeParTestAgent::TV_ULONG_0" />
        <property Opr="Self.EmployeeParTestAgent::Func_ULongIR(ulong Self.EmployeeParTestAgent::par2_ulong_0)" />
      </node>
      <node class="Assignment" id="30">
        <property CastRight="false" />
        <property Opl="llong Self.EmployeeParTestAgent::TV_LL_0" />
        <property Opr="const llong -666" />
      </node>
      <node class="Assignment" id="31">
        <property CastRight="false" />
        <property Opl="ullong Self.EmployeeParTestAgent::TV_ULL_0" />
        <property Opr="const ullong 666" />
      </node>
    </node>
    <node class="Sequence" id="14">
      <node class="Assignment" id="9">
        <property CastRight="false" />
        <property Opl="short Self.ParTestAgent::TV_SHORT_0" />
        <property Opr="Self.ParTestAgent::Func_ShortIR(short Self.EmployeeParTestAgent::par1_short_0)" />
      </node>
      <node class="Assignment" id="10">
        <property CastRight="false" />
        <property Opl="int Self.ParTestAgent::TV_INT_0" />
        <property Opr="Self.ParTestAgent::Func_IntIR(int Self.EmployeeParTestAgent::par1_int_0)" />
      </node>
      <node class="Assignment" id="11">
        <property CastRight="false" />
        <property Opl="vector&lt;int&gt; Self.ParTestAgent::TV_LIST_INT_0" />
        <property Opr="Self.ParTestAgent::Func_IntListIR(vector&lt;int&gt; Self.EmployeeParTestAgent::par1_int_list_0)" />
      </node>
      <node class="Assignment" id="12">
        <property CastRight="false" />
        <property Opl="long Self.ParTestAgent::TV_LONG_0" />
        <property Opr="Self.ParTestAgent::Func_LongIR(long Self.EmployeeParTestAgent::par1_long_0)" />
      </node>
      <node class="Assignment" id="17">
        <property CastRight="false" />
        <property Opl="TNS::ST::PER::WRK::kEmployee Self.ParTestAgent::TV_KEMPLOYEE_0" />
        <property Opr="Self.ParTestAgent::Func_kEmployeeIR(TNS::ST::PER::WRK::kEmployee Self.EmployeeParTestAgent::par1_kemployee_0)" />
      </node>
      <node class="Assignment" id="19">
        <property CastRight="false" />
        <property Opl="vector&lt;TNS::ST::PER::WRK::kEmployee&gt; Self.ParTestAgent::TV_LIST_KEMPLOYEE_0" />
        <property Opr="Self.ParTestAgent::Func_kEmployeeListIR(vector&lt;TNS::ST::PER::WRK::kEmployee&gt; Self.EmployeeParTestAgent::par1_kemployee_list_0)" />
      </node>
      <node class="Assignment" id="18">
        <property CastRight="false" />
        <property Opl="ushort Self.ParTestAgent::TV_USHORT_0" />
        <property Opr="Self.ParTestAgent::Func_UShortIR(ushort Self.EmployeeParTestAgent::par1_ushort_0)" />
      </node>
    </node>
    <node class="Sequence" id="22">
      <node class="Assignment" id="16">
        <property CastRight="false" />
        <property Opl="bool Self.ParTestAgentBase::TV_BOOL_0" />
        <property Opr="Self.ParTestAgentBase::Func_BooleanIR(bool Self.EmployeeParTestAgent::par0_boolean_0)" />
      </node>
      <node class="Assignment" id="20">
        <property CastRight="false" />
        <property Opl="vector&lt;bool&gt; Self.ParTestAgentBase::TV_LIST_BOOL_0" />
        <property Opr="Self.ParTestAgentBase::Func_BooleanListIR(vector&lt;bool&gt; Self.EmployeeParTestAgent::par0_boolean_list_0)" />
      </node>
      <node class="Assignment" id="24">
        <property CastRight="false" />
        <property Opl="ubyte Self.ParTestAgentBase::TV_BYTE_0" />
        <property Opr="Self.ParTestAgentBase::Func_ByteIR(ubyte Self.EmployeeParTestAgent::par0_byte_0)" />
      </node>
      <node class="Assignment" id="25">
        <property CastRight="false" />
        <property Opl="vector&lt;ubyte&gt; Self.ParTestAgentBase::TV_LIST_BYTE_0" />
        <property Opr="Self.ParTestAgentBase::Func_ByteListIR(vector&lt;ubyte&gt; Self.EmployeeParTestAgent::par0_byte_list_0)" />
      </node>
      <node class="Assignment" id="26">
        <property CastRight="false" />
        <property Opl="char Self.ParTestAgentBase::TV_CHAR_0" />
        <property Opr="Self.ParTestAgentBase::Func_CharIR(char Self.EmployeeParTestAgent::par0_char_0)" />
      </node>
      <node class="Assignment" id="27">
        <property CastRight="false" />
        <property Opl="vector&lt;char&gt; Self.ParTestAgentBase::TV_LIST_CHAR_0" />
        <property Opr="Self.ParTestAgentBase::Func_CharListIR(vector&lt;char&gt; Self.EmployeeParTestAgent::par0_char_list_0)" />
      </node>
      <node class="Assignment" id="21">
        <property CastRight="false" />
        <property Opl="TNS::NE::NAT::eColor Self.ParTestAgentBase::TV_ECOLOR_0" />
        <property Opr="Self.ParTestAgentBase::Func_eColorIR(TNS::NE::NAT::eColor Self.EmployeeParTestAgent::par0_ecolor_0)" />
      </node>
      <node class="Assignment" id="23">
        <property CastRight="false" />
        <property Opl="vector&lt;TNS::NE::NAT::eColor&gt; Self.ParTestAgentBase::TV_LIST_ECOLOR_0" />
        <property Opr="Self.ParTestAgentBase::Func_eColorListIR(vector&lt;TNS::NE::NAT::eColor&gt; Self.EmployeeParTestAgent::par0_ecolor_list_0)" />
      </node>
      <node class="Assignment" id="28">
        <property CastRight="false" />
        <property Opl="sbyte Self.ParTestAgentBase::TV_SBYTE_0" />
        <property Opr="Self.ParTestAgentBase::Func_SByteIR(sbyte Self.EmployeeParTestAgent::par0_sbyte_0)" />
      </node>
      <node class="Assignment" id="29">
        <property CastRight="false" />
        <property Opl="vector&lt;sbyte&gt; Self.ParTestAgentBase::TV_LIST_SBYTE_0" />
        <property Opr="Self.ParTestAgentBase::Func_SByteListIR(vector&lt;sbyte&gt; Self.EmployeeParTestAgent::par0_sbyte_list_0)" />
      </node>
    </node>
  </node>
</behavior>