<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: node_test\htn\house\build_house.xml-->
<behavior name="node_test/htn/house/build_house" agenttype="HTNAgentHouse" version="5">
  <node class="Task" id="7">
    <property Prototype="Self.HTNAgentHouse::build_house()" />
    <property IsHTN="true" />
    <attachment class="Precondition" id="0" flag="precondition">
      <property BinaryOperator="And" />
      <property Operator="Equal" />
      <property Opl="bool Self.HTNAgentHouse::Land" />
      <property Opr2="const bool true" />
      <property Phase="Enter" />
    </attachment>
    <attachment class="Effector" id="1" flag="effector">
      <property Operator="Assign" />
      <property Opl="bool Self.HTNAgentHouse::House" />
      <property Opr2="const bool true" />
      <property Phase="Success" />
    </attachment>
    <node class="Method" id="2">
      <node class="Sequence" id="17">
        <node class="Parallel" id="4">
          <property ChildFinishPolicy="CHILDFINISH_LOOP" />
          <property ExitPolicy="EXIT_ABORT_RUNNINGSIBLINGS" />
          <property FailurePolicy="FAIL_ON_ONE" />
          <property SuccessPolicy="SUCCEED_ON_ALL" />
          <node class="Action" id="5">
            <property Method="Self.HTNAgentHouseBase::ObtainPermit()" />
            <property ResultOption="BT_SUCCESS" />
            <attachment class="Precondition" id="3" flag="precondition">
              <property BinaryOperator="And" />
              <property Operator="Equal" />
              <property Opl="bool Self.HTNAgentHouse::Land" />
              <property Opr2="const bool true" />
              <property Phase="Enter" />
            </attachment>
            <attachment class="Effector" id="6" flag="effector">
              <property Operator="Assign" />
              <property Opl="bool Self.HTNAgentHouse::Permit" />
              <property Opr2="const bool true" />
              <property Phase="Success" />
            </attachment>
          </node>
          <node class="Action" id="18">
            <property Method="Self.HTNAgentHouse::HireBuilder()" />
            <property ResultOption="BT_SUCCESS" />
            <attachment class="Effector" id="8" flag="effector">
              <property Operator="Assign" />
              <property Opl="bool Self.HTNAgentHouse::Contract" />
              <property Opr2="const bool true" />
              <property Phase="Success" />
            </attachment>
          </node>
        </node>
        <node class="ReferencedBehavior" id="20">
          <property ReferenceBehavior="const string &quot;node_test/htn/house/construct&quot;" />
          <property Task="Self.HTNAgentHouse::construct()" />
        </node>
        <node class="Action" id="19">
          <property Method="Self.HTNAgentHouse::PayBuilder()" />
          <property ResultOption="BT_SUCCESS" />
          <attachment class="Precondition" id="27" flag="precondition">
            <property BinaryOperator="And" />
            <property Operator="GreaterEqual" />
            <property Opl="int Self.HTNAgentHouseBase::Money" />
            <property Opr2="const int 50" />
            <property Phase="Enter" />
          </attachment>
          <attachment class="Precondition" id="9" flag="precondition">
            <property BinaryOperator="And" />
            <property Operator="Equal" />
            <property Opl="bool Self.HTNAgentHouse::HouseBuilt" />
            <property Opr2="const bool true" />
            <property Phase="Enter" />
          </attachment>
          <attachment class="Effector" id="10" flag="effector">
            <property Operator="Sub" />
            <property Opl="int Self.HTNAgentHouseBase::Money" />
            <property Opr1="int Self.HTNAgentHouseBase::Money" />
            <property Opr2="const int 50" />
            <property Phase="Success" />
          </attachment>
          <attachment class="Effector" id="11" flag="effector">
            <property Operator="Assign" />
            <property Opl="bool Self.HTNAgentHouse::House" />
            <property Opr2="const bool true" />
            <property Phase="Success" />
          </attachment>
          <attachment class="Effector" id="12" flag="effector">
            <property Operator="Assign" />
            <property Opl="bool Self.HTNAgentHouse::Contract" />
            <property Opr2="const bool false" />
            <property Phase="Success" />
          </attachment>
        </node>
      </node>
    </node>
    <node class="Method" id="21">
      <node class="Sequence" id="22">
        <node class="Parallel" id="23">
          <property ChildFinishPolicy="CHILDFINISH_LOOP" />
          <property ExitPolicy="EXIT_ABORT_RUNNINGSIBLINGS" />
          <property FailurePolicy="FAIL_ON_ONE" />
          <property SuccessPolicy="SUCCEED_ON_ALL" />
          <node class="Sequence" id="14">
            <node class="Action" id="28">
              <property Method="Self.HTNAgentHouseBase::ObtainPermit()" />
              <property ResultOption="BT_SUCCESS" />
              <attachment class="Precondition" id="15" flag="precondition">
                <property BinaryOperator="And" />
                <property Operator="Equal" />
                <property Opl="bool Self.HTNAgentHouse::Land" />
                <property Opr2="const bool true" />
                <property Phase="Enter" />
              </attachment>
              <attachment class="Effector" id="16" flag="effector">
                <property Operator="Assign" />
                <property Opl="bool Self.HTNAgentHouse::Permit" />
                <property Opr2="const bool true" />
                <property Phase="Success" />
              </attachment>
            </node>
            <node class="Action" id="24">
              <property Method="Self.HTNAgentHouse::CutLogs()" />
              <property ResultOption="BT_SUCCESS" />
            </node>
          </node>
          <node class="Action" id="25">
            <property Method="Self.HTNAgentHouse::GetFriend()" />
            <property ResultOption="BT_SUCCESS" />
          </node>
        </node>
        <node class="ReferencedBehavior" id="26">
          <property ReferenceBehavior="const string &quot;node_test/htn/house/construct&quot;" />
          <property Task="Self.HTNAgentHouse::construct()" />
        </node>
      </node>
    </node>
  </node>
</behavior>