<?xml version="1.0" encoding="utf-8"?>
<Behavior Version="5">
  <Node Class="Behaviac.Design.Nodes.Behavior" AgentType="AgentNodeTest" Domains="" Enable="true" HasOwnPrefabData="false" Id="-1" PrefabName="" PrefabNodeId="-1">
    <Comment Background="NoColor" Text="" />
    <Parameters>
      <Parameter Name="par_go" Type="XMLPluginBehaviac.UnityEngine_GameObject" DefaultValue="null" DisplayName="par_go" Desc="par_go" Display="true" />
      <Parameter Name="par_float_type_0" Type="System.Single" DefaultValue="0" DisplayName="par_float_type_0" Desc="AgentNodeTest::par_float_type_0" Display="true" />
      <Parameter Name="par_float_type_1" Type="System.Single" DefaultValue="0" DisplayName="par_float_type_1" Desc="AgentNodeTest::par_float_type_1" Display="true" />
      <Parameter Name="par_float_type_2" Type="System.Single" DefaultValue="2.7" DisplayName="par_float_type_2" Desc="AgentNodeTest::par_float_type_2" Display="true" />
      <Parameter Name="local_node" Type="XMLPluginBehaviac.TestNS_Node" DefaultValue="null" DisplayName="local_node" Desc="local_node" Display="true" />
    </Parameters>
    <DescriptorRefs value="0:" />
    <Connector Identifier="GenericChildren">
      <Node Class="PluginBehaviac.Nodes.Sequence" Enable="true" HasOwnPrefabData="false" Id="0" PrefabName="" PrefabNodeId="-1">
        <Comment Background="NoColor" Text="" />
        <Connector Identifier="GenericChildren">
          <Node Class="PluginBehaviac.Nodes.Compute" Enable="true" HasOwnPrefabData="false" Id="3" Operator="Add" Opl="float Self.AgentNodeTest::par_float_type_0" Opr1="const float 0.5" Opr2="const float 1.3" PrefabName="" PrefabNodeId="-1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="2" Method="Self.AgentNodeTest::setTestVar_2(float Self.AgentNodeTest::par_float_type_0)" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_SUCCESS">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Assignment" CastRight="false" Enable="true" HasOwnPrefabData="false" Id="1" Opl="float Self.AgentNodeTest::par_float_type_1" Opr="float Self.AgentNodeTest::testVar_2" PrefabName="" PrefabNodeId="-1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Compute" Enable="true" HasOwnPrefabData="false" Id="4" Operator="Add" Opl="float Self.AgentNodeTest::par_float_type_0" Opr1="float Self.AgentNodeTest::par_float_type_1" Opr2="float Self.AgentNodeTest::par_float_type_2" PrefabName="" PrefabNodeId="-1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="5" Method="Self.AgentNodeTest::setTestVar_3(float Self.AgentNodeTest::par_float_type_0)" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_SUCCESS">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Assignment" CastRight="false" Enable="true" HasOwnPrefabData="false" Id="7" Opl="UnityEngine::GameObject Self.AgentNodeTest::par_go" Opr="Self.AgentNodeTest::createGameObject()" PrefabName="" PrefabNodeId="-1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="6" Method="Self.AgentNodeTest::testGameObject(UnityEngine::GameObject Self.AgentNodeTest::par_go)" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_SUCCESS">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Assignment" CastRight="false" Enable="true" HasOwnPrefabData="false" Id="8" Opl="TestNS::Node Self.AgentNodeTest::local_node" Opr="Self.AgentNodeTest::createExtendedNode()" PrefabName="" PrefabNodeId="-1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="10" Method="Self.AgentNodeTest::testExtendedRefType(TestNS::Node Self.AgentNodeTest::local_node)" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_SUCCESS">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="9" Method="Self.AgentNodeTest::testExtendedStruct(TestNS::Float2 Self.AgentNodeTest::testFloat2)" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_SUCCESS">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Assignment" CastRight="false" Enable="true" HasOwnPrefabData="false" Id="11" Opl="TestNS::Float2 Self.AgentNodeTest::c_ReturnFloat2" Opr="Self.AgentNodeTest::getExtendedStruct()" PrefabName="" PrefabNodeId="-1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Assignment" CastRight="false" Enable="true" HasOwnPrefabData="false" Id="12" Opl="TestNS::Float2 Self.AgentNodeTest::c_ReturnFloat2Const" Opr="Self.AgentNodeTest::getConstExtendedStruct()" PrefabName="" PrefabNodeId="-1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="13" Method="Self.AgentNodeTest::getConstExtendedStruct()" PrefabName="" PrefabNodeId="-1" ResultFunctor="Self.AgentNodeTest::return_status({x=0;y=0;})" ResultOption="BT_INVALID">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="14" Method="Self.AgentNodeTest::TestFunC()" PrefabName="" PrefabNodeId="-1" ResultFunctor="Self.AgentNodeTest::TestFuncD(null)" ResultOption="BT_INVALID">
            <Comment Background="NoColor" Text="" />
          </Node>
        </Connector>
      </Node>
    </Connector>
  </Node>
</Behavior>