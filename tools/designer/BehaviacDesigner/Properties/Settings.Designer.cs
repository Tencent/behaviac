//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Behaviac.Design.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::System.Windows.Forms.FormWindowState MainWindowState {
            get {
                return ((global::System.Windows.Forms.FormWindowState)(this["MainWindowState"]));
            }
            set {
                this["MainWindowState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point MainWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["MainWindowLocation"]));
            }
            set {
                this["MainWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size MainWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["MainWindowSize"]));
            }
            set {
                this["MainWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowNodeToolTips {
            get {
                return ((bool)(this["ShowNodeToolTips"]));
            }
            set {
                this["ShowNodeToolTips"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowControlsOnStartUp {
            get {
                return ((bool)(this["ShowControlsOnStartUp"]));
            }
            set {
                this["ShowControlsOnStartUp"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CheckLatestVersion {
            get {
                return ((bool)(this["CheckLatestVersion"]));
            }
            set {
                this["CheckLatestVersion"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DumpConnectData {
            get {
                return ((bool)(this["DumpConnectData"]));
            }
            set {
                this["DumpConnectData"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int Language {
            get {
                return ((int)(this["Language"]));
            }
            set {
                this["Language"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowVersionInfo {
            get {
                return ((bool)(this["ShowVersionInfo"]));
            }
            set {
                this["ShowVersionInfo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UseBasicDisplayName {
            get {
                return ((bool)(this["UseBasicDisplayName"]));
            }
            set {
                this["UseBasicDisplayName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowProfilingInfo {
            get {
                return ((bool)(this["ShowProfilingInfo"]));
            }
            set {
                this["ShowProfilingInfo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int FindType {
            get {
                return ((int)(this["FindType"]));
            }
            set {
                this["FindType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection FindWhats {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["FindWhats"]));
            }
            set {
                this["FindWhats"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FindOptionMatchCase {
            get {
                return ((bool)(this["FindOptionMatchCase"]));
            }
            set {
                this["FindOptionMatchCase"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FindOptionMatchWholeWord {
            get {
                return ((bool)(this["FindOptionMatchWholeWord"]));
            }
            set {
                this["FindOptionMatchWholeWord"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int FindRange {
            get {
                return ((int)(this["FindRange"]));
            }
            set {
                this["FindRange"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FindOptionNodeId {
            get {
                return ((bool)(this["FindOptionNodeId"]));
            }
            set {
                this["FindOptionNodeId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FindOptionNodeType {
            get {
                return ((bool)(this["FindOptionNodeType"]));
            }
            set {
                this["FindOptionNodeType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpdateRequired {
            get {
                return ((bool)(this["UpdateRequired"]));
            }
            set {
                this["UpdateRequired"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int Exporter {
            get {
                return ((int)(this["Exporter"]));
            }
            set {
                this["Exporter"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool NoResultTreatAsError {
            get {
                return ((bool)(this["NoResultTreatAsError"]));
            }
            set {
                this["NoResultTreatAsError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsDisplayLengthLimited {
            get {
                return ((bool)(this["IsDisplayLengthLimited"]));
            }
            set {
                this["IsDisplayLengthLimited"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("30")]
        public int LimitedDisplayLength {
            get {
                return ((int)(this["LimitedDisplayLength"]));
            }
            set {
                this["LimitedDisplayLength"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool LimitLogCount {
            get {
                return ((bool)(this["LimitLogCount"]));
            }
            set {
                this["LimitLogCount"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10000")]
        public int MaxLogCount {
            get {
                return ((int)(this["MaxLogCount"]));
            }
            set {
                this["MaxLogCount"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int ColorTheme {
            get {
                return ((int)(this["ColorTheme"]));
            }
            set {
                this["ColorTheme"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool OnlyShowFrequentlyUsedNodes {
            get {
                return ((bool)(this["OnlyShowFrequentlyUsedNodes"]));
            }
            set {
                this["OnlyShowFrequentlyUsedNodes"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>PluginBehaviac.Events.Effector</string>
  <string>PluginBehaviac.Events.Precondition</string>
  <string>PluginBehaviac.Nodes.Condition</string>
  <string>PluginBehaviac.Nodes.Action</string>
  <string>PluginBehaviac.Nodes.Compute</string>
  <string>PluginBehaviac.Nodes.Assignment</string>
  <string>PluginBehaviac.Nodes.Selector</string>
  <string>PluginBehaviac.Nodes.Sequence</string>
  <string>Behaviac.Design.Nodes.ReferencedBehavior</string>
  <string>PluginBehaviac.Nodes.Parallel</string>
  <string>PluginBehaviac.Nodes.DecoratorLoop</string>
  <string>PluginBehaviac.Nodes.DecoratorLoopUntil</string>
  <string>PluginBehaviac.Nodes.Task</string>
  <string>PluginBehaviac.Nodes.State</string>
  <string>PluginBehaviac.Events.TransitionCondition</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection FrequentlyUsedNodes {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["FrequentlyUsedNodes"]));
            }
            set {
                this["FrequentlyUsedNodes"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point FindDockLocation {
            get {
                return ((global::System.Drawing.Point)(this["FindDockLocation"]));
            }
            set {
                this["FindDockLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DefaultNamespace {
            get {
                return ((string)(this["DefaultNamespace"]));
            }
            set {
                this["DefaultNamespace"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ExportMeta {
            get {
                return ((bool)(this["ExportMeta"]));
            }
            set {
                this["ExportMeta"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ConcurrentProcessBehaviors {
            get {
                return ((bool)(this["ConcurrentProcessBehaviors"]));
            }
            set {
                this["ConcurrentProcessBehaviors"] = value;
            }
        }
    }
}
